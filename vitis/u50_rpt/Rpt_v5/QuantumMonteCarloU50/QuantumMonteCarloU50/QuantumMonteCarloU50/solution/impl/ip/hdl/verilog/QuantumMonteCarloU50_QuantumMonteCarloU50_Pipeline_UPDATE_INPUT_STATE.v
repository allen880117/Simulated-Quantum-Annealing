// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_UPDATE_INPUT_STATE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        logRandLocal_3_0562,
        logRandLocal_2_0561,
        logRandLocal_1_0560,
        logRandLocal_0_0559,
        dH_3_0,
        dH_2_0,
        dH_1_0,
        dH_0_0,
        downSpin_V_3_0558,
        downSpin_V_2_0557,
        downSpin_V_1_0556,
        downSpin_V_0_0555,
        upSpin_V_3_0554,
        upSpin_V_2_0553,
        upSpin_V_1_0552,
        upSpin_V_0_0551,
        iSpin_3_0550,
        iSpin_2_0549,
        iSpin_1_0548,
        iSpin_0_0547,
        iPack_3_0546,
        iPack_2_0545,
        iPack_1_0544,
        iPack_0_0543,
        logRand,
        trunc_ln5,
        h,
        trunc_ln4,
        trottersLocal_V_0_0_address0,
        trottersLocal_V_0_0_ce0,
        trottersLocal_V_0_0_q0,
        trottersLocal_V_0_1_address0,
        trottersLocal_V_0_1_ce0,
        trottersLocal_V_0_1_q0,
        trottersLocal_V_0_2_address0,
        trottersLocal_V_0_2_ce0,
        trottersLocal_V_0_2_q0,
        trottersLocal_V_0_3_address0,
        trottersLocal_V_0_3_ce0,
        trottersLocal_V_0_3_q0,
        trottersLocal_V_0_4_address0,
        trottersLocal_V_0_4_ce0,
        trottersLocal_V_0_4_q0,
        trottersLocal_V_0_5_address0,
        trottersLocal_V_0_5_ce0,
        trottersLocal_V_0_5_q0,
        trottersLocal_V_0_6_address0,
        trottersLocal_V_0_6_ce0,
        trottersLocal_V_0_6_q0,
        trottersLocal_V_0_7_address0,
        trottersLocal_V_0_7_ce0,
        trottersLocal_V_0_7_q0,
        trottersLocal_V_0_8_address0,
        trottersLocal_V_0_8_ce0,
        trottersLocal_V_0_8_q0,
        trottersLocal_V_0_9_address0,
        trottersLocal_V_0_9_ce0,
        trottersLocal_V_0_9_q0,
        trottersLocal_V_0_10_address0,
        trottersLocal_V_0_10_ce0,
        trottersLocal_V_0_10_q0,
        trottersLocal_V_0_11_address0,
        trottersLocal_V_0_11_ce0,
        trottersLocal_V_0_11_q0,
        trottersLocal_V_0_12_address0,
        trottersLocal_V_0_12_ce0,
        trottersLocal_V_0_12_q0,
        trottersLocal_V_0_13_address0,
        trottersLocal_V_0_13_ce0,
        trottersLocal_V_0_13_q0,
        trottersLocal_V_0_14_address0,
        trottersLocal_V_0_14_ce0,
        trottersLocal_V_0_14_q0,
        trottersLocal_V_0_15_address0,
        trottersLocal_V_0_15_ce0,
        trottersLocal_V_0_15_q0,
        trottersLocal_V_1_0_address0,
        trottersLocal_V_1_0_ce0,
        trottersLocal_V_1_0_q0,
        trottersLocal_V_1_1_address0,
        trottersLocal_V_1_1_ce0,
        trottersLocal_V_1_1_q0,
        trottersLocal_V_1_2_address0,
        trottersLocal_V_1_2_ce0,
        trottersLocal_V_1_2_q0,
        trottersLocal_V_1_3_address0,
        trottersLocal_V_1_3_ce0,
        trottersLocal_V_1_3_q0,
        trottersLocal_V_1_4_address0,
        trottersLocal_V_1_4_ce0,
        trottersLocal_V_1_4_q0,
        trottersLocal_V_1_5_address0,
        trottersLocal_V_1_5_ce0,
        trottersLocal_V_1_5_q0,
        trottersLocal_V_1_6_address0,
        trottersLocal_V_1_6_ce0,
        trottersLocal_V_1_6_q0,
        trottersLocal_V_1_7_address0,
        trottersLocal_V_1_7_ce0,
        trottersLocal_V_1_7_q0,
        trottersLocal_V_1_8_address0,
        trottersLocal_V_1_8_ce0,
        trottersLocal_V_1_8_q0,
        trottersLocal_V_1_9_address0,
        trottersLocal_V_1_9_ce0,
        trottersLocal_V_1_9_q0,
        trottersLocal_V_1_10_address0,
        trottersLocal_V_1_10_ce0,
        trottersLocal_V_1_10_q0,
        trottersLocal_V_1_11_address0,
        trottersLocal_V_1_11_ce0,
        trottersLocal_V_1_11_q0,
        trottersLocal_V_1_12_address0,
        trottersLocal_V_1_12_ce0,
        trottersLocal_V_1_12_q0,
        trottersLocal_V_1_13_address0,
        trottersLocal_V_1_13_ce0,
        trottersLocal_V_1_13_q0,
        trottersLocal_V_1_14_address0,
        trottersLocal_V_1_14_ce0,
        trottersLocal_V_1_14_q0,
        trottersLocal_V_1_15_address0,
        trottersLocal_V_1_15_ce0,
        trottersLocal_V_1_15_q0,
        trottersLocal_V_2_0_address0,
        trottersLocal_V_2_0_ce0,
        trottersLocal_V_2_0_q0,
        trottersLocal_V_2_1_address0,
        trottersLocal_V_2_1_ce0,
        trottersLocal_V_2_1_q0,
        trottersLocal_V_2_2_address0,
        trottersLocal_V_2_2_ce0,
        trottersLocal_V_2_2_q0,
        trottersLocal_V_2_3_address0,
        trottersLocal_V_2_3_ce0,
        trottersLocal_V_2_3_q0,
        trottersLocal_V_2_4_address0,
        trottersLocal_V_2_4_ce0,
        trottersLocal_V_2_4_q0,
        trottersLocal_V_2_5_address0,
        trottersLocal_V_2_5_ce0,
        trottersLocal_V_2_5_q0,
        trottersLocal_V_2_6_address0,
        trottersLocal_V_2_6_ce0,
        trottersLocal_V_2_6_q0,
        trottersLocal_V_2_7_address0,
        trottersLocal_V_2_7_ce0,
        trottersLocal_V_2_7_q0,
        trottersLocal_V_2_8_address0,
        trottersLocal_V_2_8_ce0,
        trottersLocal_V_2_8_q0,
        trottersLocal_V_2_9_address0,
        trottersLocal_V_2_9_ce0,
        trottersLocal_V_2_9_q0,
        trottersLocal_V_2_10_address0,
        trottersLocal_V_2_10_ce0,
        trottersLocal_V_2_10_q0,
        trottersLocal_V_2_11_address0,
        trottersLocal_V_2_11_ce0,
        trottersLocal_V_2_11_q0,
        trottersLocal_V_2_12_address0,
        trottersLocal_V_2_12_ce0,
        trottersLocal_V_2_12_q0,
        trottersLocal_V_2_13_address0,
        trottersLocal_V_2_13_ce0,
        trottersLocal_V_2_13_q0,
        trottersLocal_V_2_14_address0,
        trottersLocal_V_2_14_ce0,
        trottersLocal_V_2_14_q0,
        trottersLocal_V_2_15_address0,
        trottersLocal_V_2_15_ce0,
        trottersLocal_V_2_15_q0,
        trottersLocal_V_3_0_address0,
        trottersLocal_V_3_0_ce0,
        trottersLocal_V_3_0_q0,
        trottersLocal_V_3_1_address0,
        trottersLocal_V_3_1_ce0,
        trottersLocal_V_3_1_q0,
        trottersLocal_V_3_2_address0,
        trottersLocal_V_3_2_ce0,
        trottersLocal_V_3_2_q0,
        trottersLocal_V_3_3_address0,
        trottersLocal_V_3_3_ce0,
        trottersLocal_V_3_3_q0,
        trottersLocal_V_3_4_address0,
        trottersLocal_V_3_4_ce0,
        trottersLocal_V_3_4_q0,
        trottersLocal_V_3_5_address0,
        trottersLocal_V_3_5_ce0,
        trottersLocal_V_3_5_q0,
        trottersLocal_V_3_6_address0,
        trottersLocal_V_3_6_ce0,
        trottersLocal_V_3_6_q0,
        trottersLocal_V_3_7_address0,
        trottersLocal_V_3_7_ce0,
        trottersLocal_V_3_7_q0,
        trottersLocal_V_3_8_address0,
        trottersLocal_V_3_8_ce0,
        trottersLocal_V_3_8_q0,
        trottersLocal_V_3_9_address0,
        trottersLocal_V_3_9_ce0,
        trottersLocal_V_3_9_q0,
        trottersLocal_V_3_10_address0,
        trottersLocal_V_3_10_ce0,
        trottersLocal_V_3_10_q0,
        trottersLocal_V_3_11_address0,
        trottersLocal_V_3_11_ce0,
        trottersLocal_V_3_11_q0,
        trottersLocal_V_3_12_address0,
        trottersLocal_V_3_12_ce0,
        trottersLocal_V_3_12_q0,
        trottersLocal_V_3_13_address0,
        trottersLocal_V_3_13_ce0,
        trottersLocal_V_3_13_q0,
        trottersLocal_V_3_14_address0,
        trottersLocal_V_3_14_ce0,
        trottersLocal_V_3_14_q0,
        trottersLocal_V_3_15_address0,
        trottersLocal_V_3_15_ce0,
        trottersLocal_V_3_15_q0,
        trunc_ln8,
        logRandLocal_3_1_out,
        logRandLocal_3_1_out_ap_vld,
        logRandLocal_2_1_out,
        logRandLocal_2_1_out_ap_vld,
        logRandLocal_1_1_out,
        logRandLocal_1_1_out_ap_vld,
        logRandLocal_0_1_out,
        logRandLocal_0_1_out_ap_vld,
        dH_3_1_out,
        dH_3_1_out_ap_vld,
        dH_2_1_out,
        dH_2_1_out_ap_vld,
        dH_1_1_out,
        dH_1_1_out_ap_vld,
        dH_0_1_out,
        dH_0_1_out_ap_vld,
        downSpin_V_3_1_out,
        downSpin_V_3_1_out_ap_vld,
        downSpin_V_2_1_out,
        downSpin_V_2_1_out_ap_vld,
        downSpin_V_1_1_out,
        downSpin_V_1_1_out_ap_vld,
        downSpin_V_0_1_out,
        downSpin_V_0_1_out_ap_vld,
        upSpin_V_3_1_out,
        upSpin_V_3_1_out_ap_vld,
        upSpin_V_2_1_out,
        upSpin_V_2_1_out_ap_vld,
        upSpin_V_1_1_out,
        upSpin_V_1_1_out_ap_vld,
        upSpin_V_0_1_out,
        upSpin_V_0_1_out_ap_vld,
        iSpin_3_1_out,
        iSpin_3_1_out_ap_vld,
        iSpin_2_1_out,
        iSpin_2_1_out_ap_vld,
        iSpin_1_1_out,
        iSpin_1_1_out_ap_vld,
        iSpin_0_1_out,
        iSpin_0_1_out_ap_vld,
        iPack_3_1_out,
        iPack_3_1_out_ap_vld,
        iPack_2_1_out,
        iPack_2_1_out_ap_vld,
        iPack_1_1_out,
        iPack_1_1_out_ap_vld,
        iPack_0_1_out,
        iPack_0_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [31:0] logRandLocal_3_0562;
input  [31:0] logRandLocal_2_0561;
input  [31:0] logRandLocal_1_0560;
input  [31:0] logRandLocal_0_0559;
input  [31:0] dH_3_0;
input  [31:0] dH_2_0;
input  [31:0] dH_1_0;
input  [31:0] dH_0_0;
input  [0:0] downSpin_V_3_0558;
input  [0:0] downSpin_V_2_0557;
input  [0:0] downSpin_V_1_0556;
input  [0:0] downSpin_V_0_0555;
input  [0:0] upSpin_V_3_0554;
input  [0:0] upSpin_V_2_0553;
input  [0:0] upSpin_V_1_0552;
input  [0:0] upSpin_V_0_0551;
input  [31:0] iSpin_3_0550;
input  [31:0] iSpin_2_0549;
input  [31:0] iSpin_1_0548;
input  [31:0] iSpin_0_0547;
input  [31:0] iPack_3_0546;
input  [31:0] iPack_2_0545;
input  [31:0] iPack_1_0544;
input  [31:0] iPack_0_0543;
input  [63:0] logRand;
input  [5:0] trunc_ln5;
input  [63:0] h;
input  [5:0] trunc_ln4;
output  [3:0] trottersLocal_V_0_0_address0;
output   trottersLocal_V_0_0_ce0;
input  [15:0] trottersLocal_V_0_0_q0;
output  [3:0] trottersLocal_V_0_1_address0;
output   trottersLocal_V_0_1_ce0;
input  [15:0] trottersLocal_V_0_1_q0;
output  [3:0] trottersLocal_V_0_2_address0;
output   trottersLocal_V_0_2_ce0;
input  [15:0] trottersLocal_V_0_2_q0;
output  [3:0] trottersLocal_V_0_3_address0;
output   trottersLocal_V_0_3_ce0;
input  [15:0] trottersLocal_V_0_3_q0;
output  [3:0] trottersLocal_V_0_4_address0;
output   trottersLocal_V_0_4_ce0;
input  [15:0] trottersLocal_V_0_4_q0;
output  [3:0] trottersLocal_V_0_5_address0;
output   trottersLocal_V_0_5_ce0;
input  [15:0] trottersLocal_V_0_5_q0;
output  [3:0] trottersLocal_V_0_6_address0;
output   trottersLocal_V_0_6_ce0;
input  [15:0] trottersLocal_V_0_6_q0;
output  [3:0] trottersLocal_V_0_7_address0;
output   trottersLocal_V_0_7_ce0;
input  [15:0] trottersLocal_V_0_7_q0;
output  [3:0] trottersLocal_V_0_8_address0;
output   trottersLocal_V_0_8_ce0;
input  [15:0] trottersLocal_V_0_8_q0;
output  [3:0] trottersLocal_V_0_9_address0;
output   trottersLocal_V_0_9_ce0;
input  [15:0] trottersLocal_V_0_9_q0;
output  [3:0] trottersLocal_V_0_10_address0;
output   trottersLocal_V_0_10_ce0;
input  [15:0] trottersLocal_V_0_10_q0;
output  [3:0] trottersLocal_V_0_11_address0;
output   trottersLocal_V_0_11_ce0;
input  [15:0] trottersLocal_V_0_11_q0;
output  [3:0] trottersLocal_V_0_12_address0;
output   trottersLocal_V_0_12_ce0;
input  [15:0] trottersLocal_V_0_12_q0;
output  [3:0] trottersLocal_V_0_13_address0;
output   trottersLocal_V_0_13_ce0;
input  [15:0] trottersLocal_V_0_13_q0;
output  [3:0] trottersLocal_V_0_14_address0;
output   trottersLocal_V_0_14_ce0;
input  [15:0] trottersLocal_V_0_14_q0;
output  [3:0] trottersLocal_V_0_15_address0;
output   trottersLocal_V_0_15_ce0;
input  [15:0] trottersLocal_V_0_15_q0;
output  [3:0] trottersLocal_V_1_0_address0;
output   trottersLocal_V_1_0_ce0;
input  [15:0] trottersLocal_V_1_0_q0;
output  [3:0] trottersLocal_V_1_1_address0;
output   trottersLocal_V_1_1_ce0;
input  [15:0] trottersLocal_V_1_1_q0;
output  [3:0] trottersLocal_V_1_2_address0;
output   trottersLocal_V_1_2_ce0;
input  [15:0] trottersLocal_V_1_2_q0;
output  [3:0] trottersLocal_V_1_3_address0;
output   trottersLocal_V_1_3_ce0;
input  [15:0] trottersLocal_V_1_3_q0;
output  [3:0] trottersLocal_V_1_4_address0;
output   trottersLocal_V_1_4_ce0;
input  [15:0] trottersLocal_V_1_4_q0;
output  [3:0] trottersLocal_V_1_5_address0;
output   trottersLocal_V_1_5_ce0;
input  [15:0] trottersLocal_V_1_5_q0;
output  [3:0] trottersLocal_V_1_6_address0;
output   trottersLocal_V_1_6_ce0;
input  [15:0] trottersLocal_V_1_6_q0;
output  [3:0] trottersLocal_V_1_7_address0;
output   trottersLocal_V_1_7_ce0;
input  [15:0] trottersLocal_V_1_7_q0;
output  [3:0] trottersLocal_V_1_8_address0;
output   trottersLocal_V_1_8_ce0;
input  [15:0] trottersLocal_V_1_8_q0;
output  [3:0] trottersLocal_V_1_9_address0;
output   trottersLocal_V_1_9_ce0;
input  [15:0] trottersLocal_V_1_9_q0;
output  [3:0] trottersLocal_V_1_10_address0;
output   trottersLocal_V_1_10_ce0;
input  [15:0] trottersLocal_V_1_10_q0;
output  [3:0] trottersLocal_V_1_11_address0;
output   trottersLocal_V_1_11_ce0;
input  [15:0] trottersLocal_V_1_11_q0;
output  [3:0] trottersLocal_V_1_12_address0;
output   trottersLocal_V_1_12_ce0;
input  [15:0] trottersLocal_V_1_12_q0;
output  [3:0] trottersLocal_V_1_13_address0;
output   trottersLocal_V_1_13_ce0;
input  [15:0] trottersLocal_V_1_13_q0;
output  [3:0] trottersLocal_V_1_14_address0;
output   trottersLocal_V_1_14_ce0;
input  [15:0] trottersLocal_V_1_14_q0;
output  [3:0] trottersLocal_V_1_15_address0;
output   trottersLocal_V_1_15_ce0;
input  [15:0] trottersLocal_V_1_15_q0;
output  [3:0] trottersLocal_V_2_0_address0;
output   trottersLocal_V_2_0_ce0;
input  [15:0] trottersLocal_V_2_0_q0;
output  [3:0] trottersLocal_V_2_1_address0;
output   trottersLocal_V_2_1_ce0;
input  [15:0] trottersLocal_V_2_1_q0;
output  [3:0] trottersLocal_V_2_2_address0;
output   trottersLocal_V_2_2_ce0;
input  [15:0] trottersLocal_V_2_2_q0;
output  [3:0] trottersLocal_V_2_3_address0;
output   trottersLocal_V_2_3_ce0;
input  [15:0] trottersLocal_V_2_3_q0;
output  [3:0] trottersLocal_V_2_4_address0;
output   trottersLocal_V_2_4_ce0;
input  [15:0] trottersLocal_V_2_4_q0;
output  [3:0] trottersLocal_V_2_5_address0;
output   trottersLocal_V_2_5_ce0;
input  [15:0] trottersLocal_V_2_5_q0;
output  [3:0] trottersLocal_V_2_6_address0;
output   trottersLocal_V_2_6_ce0;
input  [15:0] trottersLocal_V_2_6_q0;
output  [3:0] trottersLocal_V_2_7_address0;
output   trottersLocal_V_2_7_ce0;
input  [15:0] trottersLocal_V_2_7_q0;
output  [3:0] trottersLocal_V_2_8_address0;
output   trottersLocal_V_2_8_ce0;
input  [15:0] trottersLocal_V_2_8_q0;
output  [3:0] trottersLocal_V_2_9_address0;
output   trottersLocal_V_2_9_ce0;
input  [15:0] trottersLocal_V_2_9_q0;
output  [3:0] trottersLocal_V_2_10_address0;
output   trottersLocal_V_2_10_ce0;
input  [15:0] trottersLocal_V_2_10_q0;
output  [3:0] trottersLocal_V_2_11_address0;
output   trottersLocal_V_2_11_ce0;
input  [15:0] trottersLocal_V_2_11_q0;
output  [3:0] trottersLocal_V_2_12_address0;
output   trottersLocal_V_2_12_ce0;
input  [15:0] trottersLocal_V_2_12_q0;
output  [3:0] trottersLocal_V_2_13_address0;
output   trottersLocal_V_2_13_ce0;
input  [15:0] trottersLocal_V_2_13_q0;
output  [3:0] trottersLocal_V_2_14_address0;
output   trottersLocal_V_2_14_ce0;
input  [15:0] trottersLocal_V_2_14_q0;
output  [3:0] trottersLocal_V_2_15_address0;
output   trottersLocal_V_2_15_ce0;
input  [15:0] trottersLocal_V_2_15_q0;
output  [3:0] trottersLocal_V_3_0_address0;
output   trottersLocal_V_3_0_ce0;
input  [15:0] trottersLocal_V_3_0_q0;
output  [3:0] trottersLocal_V_3_1_address0;
output   trottersLocal_V_3_1_ce0;
input  [15:0] trottersLocal_V_3_1_q0;
output  [3:0] trottersLocal_V_3_2_address0;
output   trottersLocal_V_3_2_ce0;
input  [15:0] trottersLocal_V_3_2_q0;
output  [3:0] trottersLocal_V_3_3_address0;
output   trottersLocal_V_3_3_ce0;
input  [15:0] trottersLocal_V_3_3_q0;
output  [3:0] trottersLocal_V_3_4_address0;
output   trottersLocal_V_3_4_ce0;
input  [15:0] trottersLocal_V_3_4_q0;
output  [3:0] trottersLocal_V_3_5_address0;
output   trottersLocal_V_3_5_ce0;
input  [15:0] trottersLocal_V_3_5_q0;
output  [3:0] trottersLocal_V_3_6_address0;
output   trottersLocal_V_3_6_ce0;
input  [15:0] trottersLocal_V_3_6_q0;
output  [3:0] trottersLocal_V_3_7_address0;
output   trottersLocal_V_3_7_ce0;
input  [15:0] trottersLocal_V_3_7_q0;
output  [3:0] trottersLocal_V_3_8_address0;
output   trottersLocal_V_3_8_ce0;
input  [15:0] trottersLocal_V_3_8_q0;
output  [3:0] trottersLocal_V_3_9_address0;
output   trottersLocal_V_3_9_ce0;
input  [15:0] trottersLocal_V_3_9_q0;
output  [3:0] trottersLocal_V_3_10_address0;
output   trottersLocal_V_3_10_ce0;
input  [15:0] trottersLocal_V_3_10_q0;
output  [3:0] trottersLocal_V_3_11_address0;
output   trottersLocal_V_3_11_ce0;
input  [15:0] trottersLocal_V_3_11_q0;
output  [3:0] trottersLocal_V_3_12_address0;
output   trottersLocal_V_3_12_ce0;
input  [15:0] trottersLocal_V_3_12_q0;
output  [3:0] trottersLocal_V_3_13_address0;
output   trottersLocal_V_3_13_ce0;
input  [15:0] trottersLocal_V_3_13_q0;
output  [3:0] trottersLocal_V_3_14_address0;
output   trottersLocal_V_3_14_ce0;
input  [15:0] trottersLocal_V_3_14_q0;
output  [3:0] trottersLocal_V_3_15_address0;
output   trottersLocal_V_3_15_ce0;
input  [15:0] trottersLocal_V_3_15_q0;
input  [11:0] trunc_ln8;
output  [31:0] logRandLocal_3_1_out;
output   logRandLocal_3_1_out_ap_vld;
output  [31:0] logRandLocal_2_1_out;
output   logRandLocal_2_1_out_ap_vld;
output  [31:0] logRandLocal_1_1_out;
output   logRandLocal_1_1_out_ap_vld;
output  [31:0] logRandLocal_0_1_out;
output   logRandLocal_0_1_out_ap_vld;
output  [31:0] dH_3_1_out;
output   dH_3_1_out_ap_vld;
output  [31:0] dH_2_1_out;
output   dH_2_1_out_ap_vld;
output  [31:0] dH_1_1_out;
output   dH_1_1_out_ap_vld;
output  [31:0] dH_0_1_out;
output   dH_0_1_out_ap_vld;
output  [0:0] downSpin_V_3_1_out;
output   downSpin_V_3_1_out_ap_vld;
output  [0:0] downSpin_V_2_1_out;
output   downSpin_V_2_1_out_ap_vld;
output  [0:0] downSpin_V_1_1_out;
output   downSpin_V_1_1_out_ap_vld;
output  [0:0] downSpin_V_0_1_out;
output   downSpin_V_0_1_out_ap_vld;
output  [0:0] upSpin_V_3_1_out;
output   upSpin_V_3_1_out_ap_vld;
output  [0:0] upSpin_V_2_1_out;
output   upSpin_V_2_1_out_ap_vld;
output  [0:0] upSpin_V_1_1_out;
output   upSpin_V_1_1_out_ap_vld;
output  [0:0] upSpin_V_0_1_out;
output   upSpin_V_0_1_out_ap_vld;
output  [31:0] iSpin_3_1_out;
output   iSpin_3_1_out_ap_vld;
output  [31:0] iSpin_2_1_out;
output   iSpin_2_1_out_ap_vld;
output  [31:0] iSpin_1_1_out;
output   iSpin_1_1_out_ap_vld;
output  [31:0] iSpin_0_1_out;
output   iSpin_0_1_out_ap_vld;
output  [31:0] iPack_3_1_out;
output   iPack_3_1_out_ap_vld;
output  [31:0] iPack_2_1_out;
output   iPack_2_1_out_ap_vld;
output  [31:0] iPack_1_1_out;
output   iPack_1_1_out_ap_vld;
output  [31:0] iPack_0_1_out;
output   iPack_0_1_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg trottersLocal_V_0_0_ce0;
reg trottersLocal_V_0_1_ce0;
reg trottersLocal_V_0_2_ce0;
reg trottersLocal_V_0_3_ce0;
reg trottersLocal_V_0_4_ce0;
reg trottersLocal_V_0_5_ce0;
reg trottersLocal_V_0_6_ce0;
reg trottersLocal_V_0_7_ce0;
reg trottersLocal_V_0_8_ce0;
reg trottersLocal_V_0_9_ce0;
reg trottersLocal_V_0_10_ce0;
reg trottersLocal_V_0_11_ce0;
reg trottersLocal_V_0_12_ce0;
reg trottersLocal_V_0_13_ce0;
reg trottersLocal_V_0_14_ce0;
reg trottersLocal_V_0_15_ce0;
reg trottersLocal_V_1_0_ce0;
reg trottersLocal_V_1_1_ce0;
reg trottersLocal_V_1_2_ce0;
reg trottersLocal_V_1_3_ce0;
reg trottersLocal_V_1_4_ce0;
reg trottersLocal_V_1_5_ce0;
reg trottersLocal_V_1_6_ce0;
reg trottersLocal_V_1_7_ce0;
reg trottersLocal_V_1_8_ce0;
reg trottersLocal_V_1_9_ce0;
reg trottersLocal_V_1_10_ce0;
reg trottersLocal_V_1_11_ce0;
reg trottersLocal_V_1_12_ce0;
reg trottersLocal_V_1_13_ce0;
reg trottersLocal_V_1_14_ce0;
reg trottersLocal_V_1_15_ce0;
reg trottersLocal_V_2_0_ce0;
reg trottersLocal_V_2_1_ce0;
reg trottersLocal_V_2_2_ce0;
reg trottersLocal_V_2_3_ce0;
reg trottersLocal_V_2_4_ce0;
reg trottersLocal_V_2_5_ce0;
reg trottersLocal_V_2_6_ce0;
reg trottersLocal_V_2_7_ce0;
reg trottersLocal_V_2_8_ce0;
reg trottersLocal_V_2_9_ce0;
reg trottersLocal_V_2_10_ce0;
reg trottersLocal_V_2_11_ce0;
reg trottersLocal_V_2_12_ce0;
reg trottersLocal_V_2_13_ce0;
reg trottersLocal_V_2_14_ce0;
reg trottersLocal_V_2_15_ce0;
reg trottersLocal_V_3_0_ce0;
reg trottersLocal_V_3_1_ce0;
reg trottersLocal_V_3_2_ce0;
reg trottersLocal_V_3_3_ce0;
reg trottersLocal_V_3_4_ce0;
reg trottersLocal_V_3_5_ce0;
reg trottersLocal_V_3_6_ce0;
reg trottersLocal_V_3_7_ce0;
reg trottersLocal_V_3_8_ce0;
reg trottersLocal_V_3_9_ce0;
reg trottersLocal_V_3_10_ce0;
reg trottersLocal_V_3_11_ce0;
reg trottersLocal_V_3_12_ce0;
reg trottersLocal_V_3_13_ce0;
reg trottersLocal_V_3_14_ce0;
reg trottersLocal_V_3_15_ce0;
reg logRandLocal_3_1_out_ap_vld;
reg logRandLocal_2_1_out_ap_vld;
reg logRandLocal_1_1_out_ap_vld;
reg logRandLocal_0_1_out_ap_vld;
reg dH_3_1_out_ap_vld;
reg dH_2_1_out_ap_vld;
reg dH_1_1_out_ap_vld;
reg dH_0_1_out_ap_vld;
reg downSpin_V_3_1_out_ap_vld;
reg downSpin_V_2_1_out_ap_vld;
reg downSpin_V_1_1_out_ap_vld;
reg downSpin_V_0_1_out_ap_vld;
reg upSpin_V_3_1_out_ap_vld;
reg upSpin_V_2_1_out_ap_vld;
reg upSpin_V_1_1_out_ap_vld;
reg upSpin_V_0_1_out_ap_vld;
reg iSpin_3_1_out_ap_vld;
reg iSpin_2_1_out_ap_vld;
reg iSpin_1_1_out_ap_vld;
reg iSpin_0_1_out_ap_vld;
reg iPack_3_1_out_ap_vld;
reg iPack_2_1_out_ap_vld;
reg iPack_1_1_out_ap_vld;
reg iPack_0_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_state10_pp0_stage1_iter4;
wire    ap_block_state12_pp0_stage1_iter5;
wire    ap_block_state14_pp0_stage1_iter6;
wire    ap_block_state16_pp0_stage1_iter7;
wire    ap_block_state18_pp0_stage1_iter8;
wire    ap_block_state20_pp0_stage1_iter9;
wire    ap_block_state22_pp0_stage1_iter10;
wire    ap_block_state24_pp0_stage1_iter11;
wire    ap_block_state26_pp0_stage1_iter12;
wire    ap_block_state28_pp0_stage1_iter13;
wire    ap_block_state30_pp0_stage1_iter14;
wire    ap_block_state32_pp0_stage1_iter15;
wire    ap_block_state34_pp0_stage1_iter16;
wire    ap_block_state36_pp0_stage1_iter17;
wire    ap_block_state38_pp0_stage1_iter18;
wire    ap_block_state40_pp0_stage1_iter19;
wire    ap_block_state42_pp0_stage1_iter20;
wire    ap_block_state44_pp0_stage1_iter21;
wire    ap_block_state46_pp0_stage1_iter22;
wire    ap_block_state48_pp0_stage1_iter23;
wire    ap_block_state50_pp0_stage1_iter24;
wire    ap_block_state52_pp0_stage1_iter25;
wire    ap_block_state54_pp0_stage1_iter26;
wire    ap_block_state56_pp0_stage1_iter27;
wire    ap_block_state58_pp0_stage1_iter28;
wire    ap_block_state60_pp0_stage1_iter29;
wire    ap_block_state62_pp0_stage1_iter30;
wire    ap_block_state64_pp0_stage1_iter31;
wire    ap_block_state66_pp0_stage1_iter32;
wire    ap_block_state68_pp0_stage1_iter33;
wire    ap_block_state70_pp0_stage1_iter34;
wire    ap_block_state72_pp0_stage1_iter35;
reg    ap_block_state74_pp0_stage1_iter36;
reg    ap_block_pp0_stage1_subdone;
wire   [0:0] icmp_ln214_fu_1770_p2;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_AR;
wire    ap_block_pp0_stage1;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln214_reg_2885;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_state3_io;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state11_pp0_stage0_iter5;
wire    ap_block_state13_pp0_stage0_iter6;
wire    ap_block_state15_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state19_pp0_stage0_iter9;
wire    ap_block_state21_pp0_stage0_iter10;
wire    ap_block_state23_pp0_stage0_iter11;
wire    ap_block_state25_pp0_stage0_iter12;
wire    ap_block_state27_pp0_stage0_iter13;
wire    ap_block_state29_pp0_stage0_iter14;
wire    ap_block_state31_pp0_stage0_iter15;
wire    ap_block_state33_pp0_stage0_iter16;
wire    ap_block_state35_pp0_stage0_iter17;
wire    ap_block_state37_pp0_stage0_iter18;
wire    ap_block_state39_pp0_stage0_iter19;
wire    ap_block_state41_pp0_stage0_iter20;
wire    ap_block_state43_pp0_stage0_iter21;
wire    ap_block_state45_pp0_stage0_iter22;
wire    ap_block_state47_pp0_stage0_iter23;
wire    ap_block_state49_pp0_stage0_iter24;
wire    ap_block_state51_pp0_stage0_iter25;
wire    ap_block_state53_pp0_stage0_iter26;
wire    ap_block_state55_pp0_stage0_iter27;
wire    ap_block_state57_pp0_stage0_iter28;
wire    ap_block_state59_pp0_stage0_iter29;
wire    ap_block_state61_pp0_stage0_iter30;
wire    ap_block_state63_pp0_stage0_iter31;
wire    ap_block_state65_pp0_stage0_iter32;
wire    ap_block_state67_pp0_stage0_iter33;
wire    ap_block_state69_pp0_stage0_iter34;
wire    ap_block_state71_pp0_stage0_iter35;
reg    ap_block_state73_pp0_stage0_iter36;
wire    ap_block_state75_pp0_stage0_iter37;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter1_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter2_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter3_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter4_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter5_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter6_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter7_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter8_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter9_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter10_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter11_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter12_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter13_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter14_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter15_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter16_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter17_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter18_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter19_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter20_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter21_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter22_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter23_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter24_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter25_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter26_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter27_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter28_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter29_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter30_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter31_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter32_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter33_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter34_reg;
reg   [0:0] icmp_ln214_reg_2885_pp0_iter35_reg;
wire   [3:0] iSpin_1_fu_1803_p1;
reg   [3:0] iSpin_1_reg_2889;
reg   [3:0] iSpin_1_reg_2889_pp0_iter1_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter2_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter3_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter4_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter5_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter6_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter7_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter8_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter9_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter10_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter11_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter12_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter13_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter14_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter15_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter16_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter17_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter18_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter19_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter20_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter21_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter22_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter23_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter24_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter25_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter26_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter27_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter28_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter29_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter30_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter31_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter32_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter33_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter34_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter35_reg;
reg   [3:0] iSpin_1_reg_2889_pp0_iter36_reg;
wire   [1:0] trunc_ln222_fu_1825_p1;
reg   [1:0] trunc_ln222_reg_2895;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter1_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter2_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter3_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter4_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter5_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter6_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter7_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter8_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter9_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter10_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter11_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter12_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter13_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter14_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter15_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter16_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter17_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter18_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter19_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter20_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter21_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter22_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter23_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter24_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter25_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter26_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter27_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter28_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter29_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter30_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter31_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter32_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter33_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter34_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter35_reg;
reg   [1:0] trunc_ln222_reg_2895_pp0_iter36_reg;
reg   [3:0] trunc_ln819_3_reg_2901;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter1_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter2_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter3_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter4_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter5_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter6_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter7_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter8_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter9_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter10_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter11_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter12_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter13_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter14_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter15_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter16_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter17_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter18_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter19_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter20_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter21_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter22_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter23_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter24_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter25_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter26_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter27_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter28_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter29_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter30_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter31_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter32_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter33_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter34_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter35_reg;
reg   [3:0] trunc_ln819_3_reg_2901_pp0_iter36_reg;
reg   [3:0] lshr_ln1_reg_2907;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter1_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter2_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter3_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter4_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter5_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter6_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter7_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter8_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter9_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter10_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter11_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter12_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter13_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter14_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter15_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter16_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter17_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter18_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter19_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter20_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter21_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter22_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter23_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter24_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter25_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter26_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter27_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter28_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter29_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter30_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter31_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter32_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter33_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter34_reg;
reg   [3:0] lshr_ln1_reg_2907_pp0_iter35_reg;
reg   [57:0] trunc_ln228_3_reg_2912;
reg   [57:0] trunc_ln229_2_reg_2917;
reg   [511:0] gmem_addr_read_reg_2934;
wire   [5:0] add_ln228_1_fu_2037_p2;
reg   [5:0] add_ln228_1_reg_2939;
wire   [5:0] add_ln229_2_fu_2042_p2;
reg   [5:0] add_ln229_2_reg_2944;
reg   [511:0] gmem_addr_1_read_reg_3269;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln819_fu_2047_p1;
wire  signed [63:0] sext_ln228_fu_2010_p1;
wire  signed [63:0] sext_ln229_fu_2020_p1;
reg   [2:0] t_fu_344;
wire   [2:0] add_ln214_fu_1776_p2;
wire    ap_loop_init;
reg   [31:0] iPack_0_1_fu_348;
wire   [31:0] iPack_0_2_fu_1829_p6;
reg   [31:0] iPack_1_1_fu_352;
wire   [31:0] iPack_1_2_fu_1843_p6;
reg   [31:0] iPack_2_1_fu_356;
wire   [31:0] iPack_2_2_fu_1857_p6;
reg   [31:0] iPack_3_1_fu_360;
wire   [31:0] iPack_3_2_fu_1871_p6;
reg   [31:0] iSpin_0_1_fu_364;
wire   [31:0] zext_ln223_fu_1821_p1;
reg   [31:0] iSpin_1_1_fu_368;
reg   [31:0] iSpin_2_1_fu_372;
reg   [31:0] iSpin_3_1_fu_376;
reg   [0:0] upSpin_V_1_fu_380;
wire   [0:0] upSpin_V_1_5_fu_2323_p3;
reg   [0:0] upSpin_V_1_1_fu_384;
reg   [0:0] upSpin_V_1_2_fu_388;
reg   [0:0] upSpin_V_1_3_fu_392;
reg   [0:0] downSpin_V_1_fu_396;
wire   [0:0] downSpin_V_1_5_fu_2513_p3;
reg   [0:0] downSpin_V_1_1_fu_400;
reg   [0:0] downSpin_V_1_2_fu_404;
reg   [0:0] downSpin_V_1_3_fu_408;
reg   [31:0] dH_1_fu_412;
wire   [31:0] dH_1_5_fu_2134_p1;
reg   [31:0] dH_1_1_fu_416;
reg   [31:0] dH_1_2_fu_420;
reg   [31:0] dH_1_3_fu_424;
reg   [31:0] logRandLocal_1_fu_428;
wire   [31:0] logRandLocal_1_5_fu_2561_p1;
reg   [31:0] logRandLocal_1_1_fu_432;
reg   [31:0] logRandLocal_1_2_fu_436;
reg   [31:0] logRandLocal_1_3_fu_440;
reg    ap_block_pp0_stage0_01001;
wire   [11:0] t_2_cast_fu_1794_p1;
wire   [11:0] Ofst_fu_1798_p2;
wire   [7:0] iPack_0_fu_1807_p4;
wire   [31:0] zext_ln222_fu_1817_p1;
wire   [13:0] shl_ln1_fu_1925_p3;
wire   [63:0] zext_ln228_fu_1933_p1;
wire   [63:0] add_ln228_fu_1937_p2;
wire   [15:0] shl_ln229_1_fu_1952_p3;
wire   [63:0] add_ln229_fu_1964_p2;
wire   [63:0] zext_ln229_fu_1960_p1;
wire   [63:0] add_ln229_1_fu_1969_p2;
wire   [5:0] trunc_ln228_2_fu_2030_p3;
wire   [8:0] shl_ln228_1_fu_2114_p3;
wire   [511:0] zext_ln228_1_fu_2121_p1;
wire   [511:0] lshr_ln228_fu_2125_p2;
wire   [31:0] trunc_ln228_fu_2130_p1;
wire   [31:0] tmp_s_fu_2158_p6;
wire   [1:0] trunc_ln819_fu_2171_p1;
wire   [5:0] tmp_2_fu_2175_p3;
wire   [6:0] p_Val2_s_fu_2186_p65;
wire   [15:0] p_Val2_s_fu_2186_p66;
wire   [15:0] zext_ln819_17_fu_2320_p1;
wire   [31:0] tmp_15_fu_2351_p6;
wire   [1:0] trunc_ln819_2_fu_2364_p1;
wire   [5:0] tmp_3_fu_2368_p3;
wire   [6:0] p_Val2_16_fu_2379_p65;
wire   [15:0] p_Val2_16_fu_2379_p66;
wire   [8:0] shl_ln2_fu_2541_p3;
wire   [511:0] zext_ln229_1_fu_2548_p1;
wire   [511:0] lshr_ln229_fu_2552_p2;
wire   [31:0] trunc_ln229_fu_2557_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter36_stage0;
reg    ap_idle_pp0_0to35;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to37;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_1976;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U67(
    .din0(zext_ln222_fu_1817_p1),
    .din1(iPack_0_1_fu_348),
    .din2(iPack_0_1_fu_348),
    .din3(iPack_0_1_fu_348),
    .din4(trunc_ln222_fu_1825_p1),
    .dout(iPack_0_2_fu_1829_p6)
);

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U68(
    .din0(iPack_1_1_fu_352),
    .din1(zext_ln222_fu_1817_p1),
    .din2(iPack_1_1_fu_352),
    .din3(iPack_1_1_fu_352),
    .din4(trunc_ln222_fu_1825_p1),
    .dout(iPack_1_2_fu_1843_p6)
);

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U69(
    .din0(iPack_2_1_fu_356),
    .din1(iPack_2_1_fu_356),
    .din2(zext_ln222_fu_1817_p1),
    .din3(iPack_2_1_fu_356),
    .din4(trunc_ln222_fu_1825_p1),
    .dout(iPack_2_2_fu_1857_p6)
);

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U70(
    .din0(iPack_3_1_fu_360),
    .din1(iPack_3_1_fu_360),
    .din2(iPack_3_1_fu_360),
    .din3(zext_ln222_fu_1817_p1),
    .din4(trunc_ln222_fu_1825_p1),
    .dout(iPack_3_2_fu_1871_p6)
);

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U71(
    .din0(32'd3),
    .din1(32'd0),
    .din2(32'd1),
    .din3(32'd2),
    .din4(trunc_ln222_reg_2895_pp0_iter36_reg),
    .dout(tmp_s_fu_2158_p6)
);

QuantumMonteCarloU50_mux_647_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 7 ),
    .dout_WIDTH( 16 ))
mux_647_16_1_1_U72(
    .din0(trottersLocal_V_0_0_q0),
    .din1(trottersLocal_V_0_1_q0),
    .din2(trottersLocal_V_0_2_q0),
    .din3(trottersLocal_V_0_3_q0),
    .din4(trottersLocal_V_0_4_q0),
    .din5(trottersLocal_V_0_5_q0),
    .din6(trottersLocal_V_0_6_q0),
    .din7(trottersLocal_V_0_7_q0),
    .din8(trottersLocal_V_0_8_q0),
    .din9(trottersLocal_V_0_9_q0),
    .din10(trottersLocal_V_0_10_q0),
    .din11(trottersLocal_V_0_11_q0),
    .din12(trottersLocal_V_0_12_q0),
    .din13(trottersLocal_V_0_13_q0),
    .din14(trottersLocal_V_0_14_q0),
    .din15(trottersLocal_V_0_15_q0),
    .din16(trottersLocal_V_1_0_q0),
    .din17(trottersLocal_V_1_1_q0),
    .din18(trottersLocal_V_1_2_q0),
    .din19(trottersLocal_V_1_3_q0),
    .din20(trottersLocal_V_1_4_q0),
    .din21(trottersLocal_V_1_5_q0),
    .din22(trottersLocal_V_1_6_q0),
    .din23(trottersLocal_V_1_7_q0),
    .din24(trottersLocal_V_1_8_q0),
    .din25(trottersLocal_V_1_9_q0),
    .din26(trottersLocal_V_1_10_q0),
    .din27(trottersLocal_V_1_11_q0),
    .din28(trottersLocal_V_1_12_q0),
    .din29(trottersLocal_V_1_13_q0),
    .din30(trottersLocal_V_1_14_q0),
    .din31(trottersLocal_V_1_15_q0),
    .din32(trottersLocal_V_2_0_q0),
    .din33(trottersLocal_V_2_1_q0),
    .din34(trottersLocal_V_2_2_q0),
    .din35(trottersLocal_V_2_3_q0),
    .din36(trottersLocal_V_2_4_q0),
    .din37(trottersLocal_V_2_5_q0),
    .din38(trottersLocal_V_2_6_q0),
    .din39(trottersLocal_V_2_7_q0),
    .din40(trottersLocal_V_2_8_q0),
    .din41(trottersLocal_V_2_9_q0),
    .din42(trottersLocal_V_2_10_q0),
    .din43(trottersLocal_V_2_11_q0),
    .din44(trottersLocal_V_2_12_q0),
    .din45(trottersLocal_V_2_13_q0),
    .din46(trottersLocal_V_2_14_q0),
    .din47(trottersLocal_V_2_15_q0),
    .din48(trottersLocal_V_3_0_q0),
    .din49(trottersLocal_V_3_1_q0),
    .din50(trottersLocal_V_3_2_q0),
    .din51(trottersLocal_V_3_3_q0),
    .din52(trottersLocal_V_3_4_q0),
    .din53(trottersLocal_V_3_5_q0),
    .din54(trottersLocal_V_3_6_q0),
    .din55(trottersLocal_V_3_7_q0),
    .din56(trottersLocal_V_3_8_q0),
    .din57(trottersLocal_V_3_9_q0),
    .din58(trottersLocal_V_3_10_q0),
    .din59(trottersLocal_V_3_11_q0),
    .din60(trottersLocal_V_3_12_q0),
    .din61(trottersLocal_V_3_13_q0),
    .din62(trottersLocal_V_3_14_q0),
    .din63(trottersLocal_V_3_15_q0),
    .din64(p_Val2_s_fu_2186_p65),
    .dout(p_Val2_s_fu_2186_p66)
);

QuantumMonteCarloU50_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U73(
    .din0(32'd1),
    .din1(32'd2),
    .din2(32'd3),
    .din3(32'd0),
    .din4(trunc_ln222_reg_2895_pp0_iter36_reg),
    .dout(tmp_15_fu_2351_p6)
);

QuantumMonteCarloU50_mux_647_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 7 ),
    .dout_WIDTH( 16 ))
mux_647_16_1_1_U74(
    .din0(trottersLocal_V_0_0_q0),
    .din1(trottersLocal_V_0_1_q0),
    .din2(trottersLocal_V_0_2_q0),
    .din3(trottersLocal_V_0_3_q0),
    .din4(trottersLocal_V_0_4_q0),
    .din5(trottersLocal_V_0_5_q0),
    .din6(trottersLocal_V_0_6_q0),
    .din7(trottersLocal_V_0_7_q0),
    .din8(trottersLocal_V_0_8_q0),
    .din9(trottersLocal_V_0_9_q0),
    .din10(trottersLocal_V_0_10_q0),
    .din11(trottersLocal_V_0_11_q0),
    .din12(trottersLocal_V_0_12_q0),
    .din13(trottersLocal_V_0_13_q0),
    .din14(trottersLocal_V_0_14_q0),
    .din15(trottersLocal_V_0_15_q0),
    .din16(trottersLocal_V_1_0_q0),
    .din17(trottersLocal_V_1_1_q0),
    .din18(trottersLocal_V_1_2_q0),
    .din19(trottersLocal_V_1_3_q0),
    .din20(trottersLocal_V_1_4_q0),
    .din21(trottersLocal_V_1_5_q0),
    .din22(trottersLocal_V_1_6_q0),
    .din23(trottersLocal_V_1_7_q0),
    .din24(trottersLocal_V_1_8_q0),
    .din25(trottersLocal_V_1_9_q0),
    .din26(trottersLocal_V_1_10_q0),
    .din27(trottersLocal_V_1_11_q0),
    .din28(trottersLocal_V_1_12_q0),
    .din29(trottersLocal_V_1_13_q0),
    .din30(trottersLocal_V_1_14_q0),
    .din31(trottersLocal_V_1_15_q0),
    .din32(trottersLocal_V_2_0_q0),
    .din33(trottersLocal_V_2_1_q0),
    .din34(trottersLocal_V_2_2_q0),
    .din35(trottersLocal_V_2_3_q0),
    .din36(trottersLocal_V_2_4_q0),
    .din37(trottersLocal_V_2_5_q0),
    .din38(trottersLocal_V_2_6_q0),
    .din39(trottersLocal_V_2_7_q0),
    .din40(trottersLocal_V_2_8_q0),
    .din41(trottersLocal_V_2_9_q0),
    .din42(trottersLocal_V_2_10_q0),
    .din43(trottersLocal_V_2_11_q0),
    .din44(trottersLocal_V_2_12_q0),
    .din45(trottersLocal_V_2_13_q0),
    .din46(trottersLocal_V_2_14_q0),
    .din47(trottersLocal_V_2_15_q0),
    .din48(trottersLocal_V_3_0_q0),
    .din49(trottersLocal_V_3_1_q0),
    .din50(trottersLocal_V_3_2_q0),
    .din51(trottersLocal_V_3_3_q0),
    .din52(trottersLocal_V_3_4_q0),
    .din53(trottersLocal_V_3_5_q0),
    .din54(trottersLocal_V_3_6_q0),
    .din55(trottersLocal_V_3_7_q0),
    .din56(trottersLocal_V_3_8_q0),
    .din57(trottersLocal_V_3_9_q0),
    .din58(trottersLocal_V_3_10_q0),
    .din59(trottersLocal_V_3_11_q0),
    .din60(trottersLocal_V_3_12_q0),
    .din61(trottersLocal_V_3_13_q0),
    .din62(trottersLocal_V_3_14_q0),
    .din63(trottersLocal_V_3_15_q0),
    .din64(p_Val2_16_fu_2379_p65),
    .dout(p_Val2_16_fu_2379_p66)
);

QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            ap_enable_reg_pp0_iter37 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dH_1_1_fu_416 <= dH_1_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_reg_2895_pp0_iter35_reg == 2'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        dH_1_1_fu_416 <= dH_1_5_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dH_1_2_fu_420 <= dH_2_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_reg_2895_pp0_iter35_reg == 2'd2) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        dH_1_2_fu_420 <= dH_1_5_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dH_1_3_fu_424 <= dH_3_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_reg_2895_pp0_iter35_reg == 2'd3) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        dH_1_3_fu_424 <= dH_1_5_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dH_1_fu_412 <= dH_0_0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_reg_2895_pp0_iter35_reg == 2'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        dH_1_fu_412 <= dH_1_5_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            downSpin_V_1_1_fu_400 <= downSpin_V_1_0556;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            downSpin_V_1_1_fu_400 <= downSpin_V_1_5_fu_2513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            downSpin_V_1_2_fu_404 <= downSpin_V_2_0557;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd2) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            downSpin_V_1_2_fu_404 <= downSpin_V_1_5_fu_2513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            downSpin_V_1_3_fu_408 <= downSpin_V_3_0558;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd3) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            downSpin_V_1_3_fu_408 <= downSpin_V_1_5_fu_2513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            downSpin_V_1_fu_396 <= downSpin_V_0_0555;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            downSpin_V_1_fu_396 <= downSpin_V_1_5_fu_2513_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iPack_0_1_fu_348 <= iPack_0_0543;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iPack_0_1_fu_348 <= iPack_0_2_fu_1829_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iPack_1_1_fu_352 <= iPack_1_0544;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iPack_1_1_fu_352 <= iPack_1_2_fu_1843_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iPack_2_1_fu_356 <= iPack_2_0545;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iPack_2_1_fu_356 <= iPack_2_2_fu_1857_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iPack_3_1_fu_360 <= iPack_3_0546;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iPack_3_1_fu_360 <= iPack_3_2_fu_1871_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iSpin_0_1_fu_364 <= iSpin_0_0547;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_fu_1825_p1 == 2'd0))) begin
        iSpin_0_1_fu_364 <= zext_ln223_fu_1821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iSpin_1_1_fu_368 <= iSpin_1_0548;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_fu_1825_p1 == 2'd1))) begin
        iSpin_1_1_fu_368 <= zext_ln223_fu_1821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iSpin_2_1_fu_372 <= iSpin_2_0549;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_fu_1825_p1 == 2'd2))) begin
        iSpin_2_1_fu_372 <= zext_ln223_fu_1821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iSpin_3_1_fu_376 <= iSpin_3_0550;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln222_fu_1825_p1 == 2'd3))) begin
        iSpin_3_1_fu_376 <= zext_ln223_fu_1821_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            logRandLocal_1_1_fu_432 <= logRandLocal_1_0560;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            logRandLocal_1_1_fu_432 <= logRandLocal_1_5_fu_2561_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            logRandLocal_1_2_fu_436 <= logRandLocal_2_0561;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd2) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            logRandLocal_1_2_fu_436 <= logRandLocal_1_5_fu_2561_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            logRandLocal_1_3_fu_440 <= logRandLocal_3_0562;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd3) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            logRandLocal_1_3_fu_440 <= logRandLocal_1_5_fu_2561_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            logRandLocal_1_fu_428 <= logRandLocal_0_0559;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            logRandLocal_1_fu_428 <= logRandLocal_1_5_fu_2561_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_fu_344 <= 3'd0;
    end else if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        t_fu_344 <= add_ln214_fu_1776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            upSpin_V_1_1_fu_384 <= upSpin_V_1_0552;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd1) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            upSpin_V_1_1_fu_384 <= upSpin_V_1_5_fu_2323_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            upSpin_V_1_2_fu_388 <= upSpin_V_2_0553;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd2) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            upSpin_V_1_2_fu_388 <= upSpin_V_1_5_fu_2323_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            upSpin_V_1_3_fu_392 <= upSpin_V_3_0554;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd3) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            upSpin_V_1_3_fu_392 <= upSpin_V_1_5_fu_2323_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            upSpin_V_1_fu_380 <= upSpin_V_0_0551;
        end else if (((trunc_ln222_reg_2895_pp0_iter36_reg == 2'd0) & (ap_enable_reg_pp0_iter37 == 1'b1))) begin
            upSpin_V_1_fu_380 <= upSpin_V_1_5_fu_2323_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln228_1_reg_2939 <= add_ln228_1_fu_2037_p2;
        add_ln229_2_reg_2944 <= add_ln229_2_fu_2042_p2;
        gmem_addr_read_reg_2934 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        gmem_addr_1_read_reg_3269 <= m_axi_gmem_RDATA;
        iSpin_1_reg_2889_pp0_iter10_reg <= iSpin_1_reg_2889_pp0_iter9_reg;
        iSpin_1_reg_2889_pp0_iter11_reg <= iSpin_1_reg_2889_pp0_iter10_reg;
        iSpin_1_reg_2889_pp0_iter12_reg <= iSpin_1_reg_2889_pp0_iter11_reg;
        iSpin_1_reg_2889_pp0_iter13_reg <= iSpin_1_reg_2889_pp0_iter12_reg;
        iSpin_1_reg_2889_pp0_iter14_reg <= iSpin_1_reg_2889_pp0_iter13_reg;
        iSpin_1_reg_2889_pp0_iter15_reg <= iSpin_1_reg_2889_pp0_iter14_reg;
        iSpin_1_reg_2889_pp0_iter16_reg <= iSpin_1_reg_2889_pp0_iter15_reg;
        iSpin_1_reg_2889_pp0_iter17_reg <= iSpin_1_reg_2889_pp0_iter16_reg;
        iSpin_1_reg_2889_pp0_iter18_reg <= iSpin_1_reg_2889_pp0_iter17_reg;
        iSpin_1_reg_2889_pp0_iter19_reg <= iSpin_1_reg_2889_pp0_iter18_reg;
        iSpin_1_reg_2889_pp0_iter1_reg <= iSpin_1_reg_2889;
        iSpin_1_reg_2889_pp0_iter20_reg <= iSpin_1_reg_2889_pp0_iter19_reg;
        iSpin_1_reg_2889_pp0_iter21_reg <= iSpin_1_reg_2889_pp0_iter20_reg;
        iSpin_1_reg_2889_pp0_iter22_reg <= iSpin_1_reg_2889_pp0_iter21_reg;
        iSpin_1_reg_2889_pp0_iter23_reg <= iSpin_1_reg_2889_pp0_iter22_reg;
        iSpin_1_reg_2889_pp0_iter24_reg <= iSpin_1_reg_2889_pp0_iter23_reg;
        iSpin_1_reg_2889_pp0_iter25_reg <= iSpin_1_reg_2889_pp0_iter24_reg;
        iSpin_1_reg_2889_pp0_iter26_reg <= iSpin_1_reg_2889_pp0_iter25_reg;
        iSpin_1_reg_2889_pp0_iter27_reg <= iSpin_1_reg_2889_pp0_iter26_reg;
        iSpin_1_reg_2889_pp0_iter28_reg <= iSpin_1_reg_2889_pp0_iter27_reg;
        iSpin_1_reg_2889_pp0_iter29_reg <= iSpin_1_reg_2889_pp0_iter28_reg;
        iSpin_1_reg_2889_pp0_iter2_reg <= iSpin_1_reg_2889_pp0_iter1_reg;
        iSpin_1_reg_2889_pp0_iter30_reg <= iSpin_1_reg_2889_pp0_iter29_reg;
        iSpin_1_reg_2889_pp0_iter31_reg <= iSpin_1_reg_2889_pp0_iter30_reg;
        iSpin_1_reg_2889_pp0_iter32_reg <= iSpin_1_reg_2889_pp0_iter31_reg;
        iSpin_1_reg_2889_pp0_iter33_reg <= iSpin_1_reg_2889_pp0_iter32_reg;
        iSpin_1_reg_2889_pp0_iter34_reg <= iSpin_1_reg_2889_pp0_iter33_reg;
        iSpin_1_reg_2889_pp0_iter35_reg <= iSpin_1_reg_2889_pp0_iter34_reg;
        iSpin_1_reg_2889_pp0_iter36_reg <= iSpin_1_reg_2889_pp0_iter35_reg;
        iSpin_1_reg_2889_pp0_iter3_reg <= iSpin_1_reg_2889_pp0_iter2_reg;
        iSpin_1_reg_2889_pp0_iter4_reg <= iSpin_1_reg_2889_pp0_iter3_reg;
        iSpin_1_reg_2889_pp0_iter5_reg <= iSpin_1_reg_2889_pp0_iter4_reg;
        iSpin_1_reg_2889_pp0_iter6_reg <= iSpin_1_reg_2889_pp0_iter5_reg;
        iSpin_1_reg_2889_pp0_iter7_reg <= iSpin_1_reg_2889_pp0_iter6_reg;
        iSpin_1_reg_2889_pp0_iter8_reg <= iSpin_1_reg_2889_pp0_iter7_reg;
        iSpin_1_reg_2889_pp0_iter9_reg <= iSpin_1_reg_2889_pp0_iter8_reg;
        icmp_ln214_reg_2885 <= icmp_ln214_fu_1770_p2;
        icmp_ln214_reg_2885_pp0_iter10_reg <= icmp_ln214_reg_2885_pp0_iter9_reg;
        icmp_ln214_reg_2885_pp0_iter11_reg <= icmp_ln214_reg_2885_pp0_iter10_reg;
        icmp_ln214_reg_2885_pp0_iter12_reg <= icmp_ln214_reg_2885_pp0_iter11_reg;
        icmp_ln214_reg_2885_pp0_iter13_reg <= icmp_ln214_reg_2885_pp0_iter12_reg;
        icmp_ln214_reg_2885_pp0_iter14_reg <= icmp_ln214_reg_2885_pp0_iter13_reg;
        icmp_ln214_reg_2885_pp0_iter15_reg <= icmp_ln214_reg_2885_pp0_iter14_reg;
        icmp_ln214_reg_2885_pp0_iter16_reg <= icmp_ln214_reg_2885_pp0_iter15_reg;
        icmp_ln214_reg_2885_pp0_iter17_reg <= icmp_ln214_reg_2885_pp0_iter16_reg;
        icmp_ln214_reg_2885_pp0_iter18_reg <= icmp_ln214_reg_2885_pp0_iter17_reg;
        icmp_ln214_reg_2885_pp0_iter19_reg <= icmp_ln214_reg_2885_pp0_iter18_reg;
        icmp_ln214_reg_2885_pp0_iter1_reg <= icmp_ln214_reg_2885;
        icmp_ln214_reg_2885_pp0_iter20_reg <= icmp_ln214_reg_2885_pp0_iter19_reg;
        icmp_ln214_reg_2885_pp0_iter21_reg <= icmp_ln214_reg_2885_pp0_iter20_reg;
        icmp_ln214_reg_2885_pp0_iter22_reg <= icmp_ln214_reg_2885_pp0_iter21_reg;
        icmp_ln214_reg_2885_pp0_iter23_reg <= icmp_ln214_reg_2885_pp0_iter22_reg;
        icmp_ln214_reg_2885_pp0_iter24_reg <= icmp_ln214_reg_2885_pp0_iter23_reg;
        icmp_ln214_reg_2885_pp0_iter25_reg <= icmp_ln214_reg_2885_pp0_iter24_reg;
        icmp_ln214_reg_2885_pp0_iter26_reg <= icmp_ln214_reg_2885_pp0_iter25_reg;
        icmp_ln214_reg_2885_pp0_iter27_reg <= icmp_ln214_reg_2885_pp0_iter26_reg;
        icmp_ln214_reg_2885_pp0_iter28_reg <= icmp_ln214_reg_2885_pp0_iter27_reg;
        icmp_ln214_reg_2885_pp0_iter29_reg <= icmp_ln214_reg_2885_pp0_iter28_reg;
        icmp_ln214_reg_2885_pp0_iter2_reg <= icmp_ln214_reg_2885_pp0_iter1_reg;
        icmp_ln214_reg_2885_pp0_iter30_reg <= icmp_ln214_reg_2885_pp0_iter29_reg;
        icmp_ln214_reg_2885_pp0_iter31_reg <= icmp_ln214_reg_2885_pp0_iter30_reg;
        icmp_ln214_reg_2885_pp0_iter32_reg <= icmp_ln214_reg_2885_pp0_iter31_reg;
        icmp_ln214_reg_2885_pp0_iter33_reg <= icmp_ln214_reg_2885_pp0_iter32_reg;
        icmp_ln214_reg_2885_pp0_iter34_reg <= icmp_ln214_reg_2885_pp0_iter33_reg;
        icmp_ln214_reg_2885_pp0_iter35_reg <= icmp_ln214_reg_2885_pp0_iter34_reg;
        icmp_ln214_reg_2885_pp0_iter3_reg <= icmp_ln214_reg_2885_pp0_iter2_reg;
        icmp_ln214_reg_2885_pp0_iter4_reg <= icmp_ln214_reg_2885_pp0_iter3_reg;
        icmp_ln214_reg_2885_pp0_iter5_reg <= icmp_ln214_reg_2885_pp0_iter4_reg;
        icmp_ln214_reg_2885_pp0_iter6_reg <= icmp_ln214_reg_2885_pp0_iter5_reg;
        icmp_ln214_reg_2885_pp0_iter7_reg <= icmp_ln214_reg_2885_pp0_iter6_reg;
        icmp_ln214_reg_2885_pp0_iter8_reg <= icmp_ln214_reg_2885_pp0_iter7_reg;
        icmp_ln214_reg_2885_pp0_iter9_reg <= icmp_ln214_reg_2885_pp0_iter8_reg;
        lshr_ln1_reg_2907_pp0_iter10_reg <= lshr_ln1_reg_2907_pp0_iter9_reg;
        lshr_ln1_reg_2907_pp0_iter11_reg <= lshr_ln1_reg_2907_pp0_iter10_reg;
        lshr_ln1_reg_2907_pp0_iter12_reg <= lshr_ln1_reg_2907_pp0_iter11_reg;
        lshr_ln1_reg_2907_pp0_iter13_reg <= lshr_ln1_reg_2907_pp0_iter12_reg;
        lshr_ln1_reg_2907_pp0_iter14_reg <= lshr_ln1_reg_2907_pp0_iter13_reg;
        lshr_ln1_reg_2907_pp0_iter15_reg <= lshr_ln1_reg_2907_pp0_iter14_reg;
        lshr_ln1_reg_2907_pp0_iter16_reg <= lshr_ln1_reg_2907_pp0_iter15_reg;
        lshr_ln1_reg_2907_pp0_iter17_reg <= lshr_ln1_reg_2907_pp0_iter16_reg;
        lshr_ln1_reg_2907_pp0_iter18_reg <= lshr_ln1_reg_2907_pp0_iter17_reg;
        lshr_ln1_reg_2907_pp0_iter19_reg <= lshr_ln1_reg_2907_pp0_iter18_reg;
        lshr_ln1_reg_2907_pp0_iter1_reg <= lshr_ln1_reg_2907;
        lshr_ln1_reg_2907_pp0_iter20_reg <= lshr_ln1_reg_2907_pp0_iter19_reg;
        lshr_ln1_reg_2907_pp0_iter21_reg <= lshr_ln1_reg_2907_pp0_iter20_reg;
        lshr_ln1_reg_2907_pp0_iter22_reg <= lshr_ln1_reg_2907_pp0_iter21_reg;
        lshr_ln1_reg_2907_pp0_iter23_reg <= lshr_ln1_reg_2907_pp0_iter22_reg;
        lshr_ln1_reg_2907_pp0_iter24_reg <= lshr_ln1_reg_2907_pp0_iter23_reg;
        lshr_ln1_reg_2907_pp0_iter25_reg <= lshr_ln1_reg_2907_pp0_iter24_reg;
        lshr_ln1_reg_2907_pp0_iter26_reg <= lshr_ln1_reg_2907_pp0_iter25_reg;
        lshr_ln1_reg_2907_pp0_iter27_reg <= lshr_ln1_reg_2907_pp0_iter26_reg;
        lshr_ln1_reg_2907_pp0_iter28_reg <= lshr_ln1_reg_2907_pp0_iter27_reg;
        lshr_ln1_reg_2907_pp0_iter29_reg <= lshr_ln1_reg_2907_pp0_iter28_reg;
        lshr_ln1_reg_2907_pp0_iter2_reg <= lshr_ln1_reg_2907_pp0_iter1_reg;
        lshr_ln1_reg_2907_pp0_iter30_reg <= lshr_ln1_reg_2907_pp0_iter29_reg;
        lshr_ln1_reg_2907_pp0_iter31_reg <= lshr_ln1_reg_2907_pp0_iter30_reg;
        lshr_ln1_reg_2907_pp0_iter32_reg <= lshr_ln1_reg_2907_pp0_iter31_reg;
        lshr_ln1_reg_2907_pp0_iter33_reg <= lshr_ln1_reg_2907_pp0_iter32_reg;
        lshr_ln1_reg_2907_pp0_iter34_reg <= lshr_ln1_reg_2907_pp0_iter33_reg;
        lshr_ln1_reg_2907_pp0_iter35_reg <= lshr_ln1_reg_2907_pp0_iter34_reg;
        lshr_ln1_reg_2907_pp0_iter3_reg <= lshr_ln1_reg_2907_pp0_iter2_reg;
        lshr_ln1_reg_2907_pp0_iter4_reg <= lshr_ln1_reg_2907_pp0_iter3_reg;
        lshr_ln1_reg_2907_pp0_iter5_reg <= lshr_ln1_reg_2907_pp0_iter4_reg;
        lshr_ln1_reg_2907_pp0_iter6_reg <= lshr_ln1_reg_2907_pp0_iter5_reg;
        lshr_ln1_reg_2907_pp0_iter7_reg <= lshr_ln1_reg_2907_pp0_iter6_reg;
        lshr_ln1_reg_2907_pp0_iter8_reg <= lshr_ln1_reg_2907_pp0_iter7_reg;
        lshr_ln1_reg_2907_pp0_iter9_reg <= lshr_ln1_reg_2907_pp0_iter8_reg;
        trunc_ln222_reg_2895_pp0_iter10_reg <= trunc_ln222_reg_2895_pp0_iter9_reg;
        trunc_ln222_reg_2895_pp0_iter11_reg <= trunc_ln222_reg_2895_pp0_iter10_reg;
        trunc_ln222_reg_2895_pp0_iter12_reg <= trunc_ln222_reg_2895_pp0_iter11_reg;
        trunc_ln222_reg_2895_pp0_iter13_reg <= trunc_ln222_reg_2895_pp0_iter12_reg;
        trunc_ln222_reg_2895_pp0_iter14_reg <= trunc_ln222_reg_2895_pp0_iter13_reg;
        trunc_ln222_reg_2895_pp0_iter15_reg <= trunc_ln222_reg_2895_pp0_iter14_reg;
        trunc_ln222_reg_2895_pp0_iter16_reg <= trunc_ln222_reg_2895_pp0_iter15_reg;
        trunc_ln222_reg_2895_pp0_iter17_reg <= trunc_ln222_reg_2895_pp0_iter16_reg;
        trunc_ln222_reg_2895_pp0_iter18_reg <= trunc_ln222_reg_2895_pp0_iter17_reg;
        trunc_ln222_reg_2895_pp0_iter19_reg <= trunc_ln222_reg_2895_pp0_iter18_reg;
        trunc_ln222_reg_2895_pp0_iter1_reg <= trunc_ln222_reg_2895;
        trunc_ln222_reg_2895_pp0_iter20_reg <= trunc_ln222_reg_2895_pp0_iter19_reg;
        trunc_ln222_reg_2895_pp0_iter21_reg <= trunc_ln222_reg_2895_pp0_iter20_reg;
        trunc_ln222_reg_2895_pp0_iter22_reg <= trunc_ln222_reg_2895_pp0_iter21_reg;
        trunc_ln222_reg_2895_pp0_iter23_reg <= trunc_ln222_reg_2895_pp0_iter22_reg;
        trunc_ln222_reg_2895_pp0_iter24_reg <= trunc_ln222_reg_2895_pp0_iter23_reg;
        trunc_ln222_reg_2895_pp0_iter25_reg <= trunc_ln222_reg_2895_pp0_iter24_reg;
        trunc_ln222_reg_2895_pp0_iter26_reg <= trunc_ln222_reg_2895_pp0_iter25_reg;
        trunc_ln222_reg_2895_pp0_iter27_reg <= trunc_ln222_reg_2895_pp0_iter26_reg;
        trunc_ln222_reg_2895_pp0_iter28_reg <= trunc_ln222_reg_2895_pp0_iter27_reg;
        trunc_ln222_reg_2895_pp0_iter29_reg <= trunc_ln222_reg_2895_pp0_iter28_reg;
        trunc_ln222_reg_2895_pp0_iter2_reg <= trunc_ln222_reg_2895_pp0_iter1_reg;
        trunc_ln222_reg_2895_pp0_iter30_reg <= trunc_ln222_reg_2895_pp0_iter29_reg;
        trunc_ln222_reg_2895_pp0_iter31_reg <= trunc_ln222_reg_2895_pp0_iter30_reg;
        trunc_ln222_reg_2895_pp0_iter32_reg <= trunc_ln222_reg_2895_pp0_iter31_reg;
        trunc_ln222_reg_2895_pp0_iter33_reg <= trunc_ln222_reg_2895_pp0_iter32_reg;
        trunc_ln222_reg_2895_pp0_iter34_reg <= trunc_ln222_reg_2895_pp0_iter33_reg;
        trunc_ln222_reg_2895_pp0_iter35_reg <= trunc_ln222_reg_2895_pp0_iter34_reg;
        trunc_ln222_reg_2895_pp0_iter36_reg <= trunc_ln222_reg_2895_pp0_iter35_reg;
        trunc_ln222_reg_2895_pp0_iter3_reg <= trunc_ln222_reg_2895_pp0_iter2_reg;
        trunc_ln222_reg_2895_pp0_iter4_reg <= trunc_ln222_reg_2895_pp0_iter3_reg;
        trunc_ln222_reg_2895_pp0_iter5_reg <= trunc_ln222_reg_2895_pp0_iter4_reg;
        trunc_ln222_reg_2895_pp0_iter6_reg <= trunc_ln222_reg_2895_pp0_iter5_reg;
        trunc_ln222_reg_2895_pp0_iter7_reg <= trunc_ln222_reg_2895_pp0_iter6_reg;
        trunc_ln222_reg_2895_pp0_iter8_reg <= trunc_ln222_reg_2895_pp0_iter7_reg;
        trunc_ln222_reg_2895_pp0_iter9_reg <= trunc_ln222_reg_2895_pp0_iter8_reg;
        trunc_ln819_3_reg_2901_pp0_iter10_reg <= trunc_ln819_3_reg_2901_pp0_iter9_reg;
        trunc_ln819_3_reg_2901_pp0_iter11_reg <= trunc_ln819_3_reg_2901_pp0_iter10_reg;
        trunc_ln819_3_reg_2901_pp0_iter12_reg <= trunc_ln819_3_reg_2901_pp0_iter11_reg;
        trunc_ln819_3_reg_2901_pp0_iter13_reg <= trunc_ln819_3_reg_2901_pp0_iter12_reg;
        trunc_ln819_3_reg_2901_pp0_iter14_reg <= trunc_ln819_3_reg_2901_pp0_iter13_reg;
        trunc_ln819_3_reg_2901_pp0_iter15_reg <= trunc_ln819_3_reg_2901_pp0_iter14_reg;
        trunc_ln819_3_reg_2901_pp0_iter16_reg <= trunc_ln819_3_reg_2901_pp0_iter15_reg;
        trunc_ln819_3_reg_2901_pp0_iter17_reg <= trunc_ln819_3_reg_2901_pp0_iter16_reg;
        trunc_ln819_3_reg_2901_pp0_iter18_reg <= trunc_ln819_3_reg_2901_pp0_iter17_reg;
        trunc_ln819_3_reg_2901_pp0_iter19_reg <= trunc_ln819_3_reg_2901_pp0_iter18_reg;
        trunc_ln819_3_reg_2901_pp0_iter1_reg <= trunc_ln819_3_reg_2901;
        trunc_ln819_3_reg_2901_pp0_iter20_reg <= trunc_ln819_3_reg_2901_pp0_iter19_reg;
        trunc_ln819_3_reg_2901_pp0_iter21_reg <= trunc_ln819_3_reg_2901_pp0_iter20_reg;
        trunc_ln819_3_reg_2901_pp0_iter22_reg <= trunc_ln819_3_reg_2901_pp0_iter21_reg;
        trunc_ln819_3_reg_2901_pp0_iter23_reg <= trunc_ln819_3_reg_2901_pp0_iter22_reg;
        trunc_ln819_3_reg_2901_pp0_iter24_reg <= trunc_ln819_3_reg_2901_pp0_iter23_reg;
        trunc_ln819_3_reg_2901_pp0_iter25_reg <= trunc_ln819_3_reg_2901_pp0_iter24_reg;
        trunc_ln819_3_reg_2901_pp0_iter26_reg <= trunc_ln819_3_reg_2901_pp0_iter25_reg;
        trunc_ln819_3_reg_2901_pp0_iter27_reg <= trunc_ln819_3_reg_2901_pp0_iter26_reg;
        trunc_ln819_3_reg_2901_pp0_iter28_reg <= trunc_ln819_3_reg_2901_pp0_iter27_reg;
        trunc_ln819_3_reg_2901_pp0_iter29_reg <= trunc_ln819_3_reg_2901_pp0_iter28_reg;
        trunc_ln819_3_reg_2901_pp0_iter2_reg <= trunc_ln819_3_reg_2901_pp0_iter1_reg;
        trunc_ln819_3_reg_2901_pp0_iter30_reg <= trunc_ln819_3_reg_2901_pp0_iter29_reg;
        trunc_ln819_3_reg_2901_pp0_iter31_reg <= trunc_ln819_3_reg_2901_pp0_iter30_reg;
        trunc_ln819_3_reg_2901_pp0_iter32_reg <= trunc_ln819_3_reg_2901_pp0_iter31_reg;
        trunc_ln819_3_reg_2901_pp0_iter33_reg <= trunc_ln819_3_reg_2901_pp0_iter32_reg;
        trunc_ln819_3_reg_2901_pp0_iter34_reg <= trunc_ln819_3_reg_2901_pp0_iter33_reg;
        trunc_ln819_3_reg_2901_pp0_iter35_reg <= trunc_ln819_3_reg_2901_pp0_iter34_reg;
        trunc_ln819_3_reg_2901_pp0_iter36_reg <= trunc_ln819_3_reg_2901_pp0_iter35_reg;
        trunc_ln819_3_reg_2901_pp0_iter3_reg <= trunc_ln819_3_reg_2901_pp0_iter2_reg;
        trunc_ln819_3_reg_2901_pp0_iter4_reg <= trunc_ln819_3_reg_2901_pp0_iter3_reg;
        trunc_ln819_3_reg_2901_pp0_iter5_reg <= trunc_ln819_3_reg_2901_pp0_iter4_reg;
        trunc_ln819_3_reg_2901_pp0_iter6_reg <= trunc_ln819_3_reg_2901_pp0_iter5_reg;
        trunc_ln819_3_reg_2901_pp0_iter7_reg <= trunc_ln819_3_reg_2901_pp0_iter6_reg;
        trunc_ln819_3_reg_2901_pp0_iter8_reg <= trunc_ln819_3_reg_2901_pp0_iter7_reg;
        trunc_ln819_3_reg_2901_pp0_iter9_reg <= trunc_ln819_3_reg_2901_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln214_fu_1770_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        iSpin_1_reg_2889 <= iSpin_1_fu_1803_p1;
        lshr_ln1_reg_2907 <= {{Ofst_fu_1798_p2[11:8]}};
        trunc_ln222_reg_2895 <= trunc_ln222_fu_1825_p1;
        trunc_ln228_3_reg_2912 <= {{add_ln228_fu_1937_p2[63:6]}};
        trunc_ln229_2_reg_2917 <= {{add_ln229_1_fu_1969_p2[63:6]}};
        trunc_ln819_3_reg_2901 <= {{Ofst_fu_1798_p2[7:4]}};
    end
end

always @ (*) begin
    if (((icmp_ln214_fu_1770_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        ap_condition_exit_pp0_iter36_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter36_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter36_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_0to35 = 1'b1;
    end else begin
        ap_idle_pp0_0to35 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0_1to37 = 1'b1;
    end else begin
        ap_idle_pp0_1to37 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        dH_0_1_out_ap_vld = 1'b1;
    end else begin
        dH_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        dH_1_1_out_ap_vld = 1'b1;
    end else begin
        dH_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        dH_2_1_out_ap_vld = 1'b1;
    end else begin
        dH_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        dH_3_1_out_ap_vld = 1'b1;
    end else begin
        dH_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        downSpin_V_0_1_out_ap_vld = 1'b1;
    end else begin
        downSpin_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        downSpin_V_1_1_out_ap_vld = 1'b1;
    end else begin
        downSpin_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        downSpin_V_2_1_out_ap_vld = 1'b1;
    end else begin
        downSpin_V_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        downSpin_V_3_1_out_ap_vld = 1'b1;
    end else begin
        downSpin_V_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln214_reg_2885 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iPack_0_1_out_ap_vld = 1'b1;
    end else begin
        iPack_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iPack_1_1_out_ap_vld = 1'b1;
    end else begin
        iPack_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iPack_2_1_out_ap_vld = 1'b1;
    end else begin
        iPack_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iPack_3_1_out_ap_vld = 1'b1;
    end else begin
        iPack_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iSpin_0_1_out_ap_vld = 1'b1;
    end else begin
        iSpin_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iSpin_1_1_out_ap_vld = 1'b1;
    end else begin
        iSpin_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iSpin_2_1_out_ap_vld = 1'b1;
    end else begin
        iSpin_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        iSpin_3_1_out_ap_vld = 1'b1;
    end else begin
        iSpin_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        logRandLocal_0_1_out_ap_vld = 1'b1;
    end else begin
        logRandLocal_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        logRandLocal_1_1_out_ap_vld = 1'b1;
    end else begin
        logRandLocal_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        logRandLocal_2_1_out_ap_vld = 1'b1;
    end else begin
        logRandLocal_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        logRandLocal_3_1_out_ap_vld = 1'b1;
    end else begin
        logRandLocal_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            m_axi_gmem_ARADDR = sext_ln229_fu_2020_p1;
        end else if ((1'b1 == ap_condition_1976)) begin
            m_axi_gmem_ARADDR = sext_ln228_fu_2010_p1;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln214_reg_2885 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_0_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_10_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_11_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_12_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_13_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_14_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_15_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_1_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_2_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_3_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_4_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_5_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_6_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_7_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_8_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_0_9_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_0_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_10_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_11_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_12_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_13_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_14_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_15_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_1_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_2_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_3_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_4_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_5_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_6_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_7_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_8_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_1_9_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_0_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_10_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_11_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_12_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_13_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_14_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_15_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_1_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_2_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_3_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_4_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_5_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_6_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_7_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_8_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_2_9_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_0_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_10_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_11_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_12_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_13_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_14_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_15_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_1_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_2_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_3_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_4_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_5_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_6_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_7_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_8_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        trottersLocal_V_3_9_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        upSpin_V_0_1_out_ap_vld = 1'b1;
    end else begin
        upSpin_V_0_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        upSpin_V_1_1_out_ap_vld = 1'b1;
    end else begin
        upSpin_V_1_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        upSpin_V_2_1_out_ap_vld = 1'b1;
    end else begin
        upSpin_V_2_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln214_reg_2885_pp0_iter35_reg == 1'd1))) begin
        upSpin_V_3_1_out_ap_vld = 1'b1;
    end else begin
        upSpin_V_3_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to35 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter36_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to37 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Ofst_fu_1798_p2 = (trunc_ln8 - t_2_cast_fu_1794_p1);

assign add_ln214_fu_1776_p2 = (t_fu_344 + 3'd1);

assign add_ln228_1_fu_2037_p2 = (trunc_ln228_2_fu_2030_p3 + trunc_ln4);

assign add_ln228_fu_1937_p2 = (zext_ln228_fu_1933_p1 + h);

assign add_ln229_1_fu_1969_p2 = (add_ln229_fu_1964_p2 + zext_ln229_fu_1960_p1);

assign add_ln229_2_fu_2042_p2 = (trunc_ln5 + trunc_ln228_2_fu_2030_p3);

assign add_ln229_fu_1964_p2 = (zext_ln228_fu_1933_p1 + logRand);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_gmem_RVALID == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem_ARREADY == 1'b0)));
end

assign ap_block_state10_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln214_reg_2885 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage1_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_pp0_stage0_iter36 = (m_axi_gmem_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state74_pp0_stage1_iter36 = (m_axi_gmem_RVALID == 1'b0);
end

assign ap_block_state75_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1976 = ((icmp_ln214_reg_2885 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign dH_0_1_out = dH_1_fu_412;

assign dH_1_1_out = dH_1_1_fu_416;

assign dH_1_5_fu_2134_p1 = trunc_ln228_fu_2130_p1;

assign dH_2_1_out = dH_1_2_fu_420;

assign dH_3_1_out = dH_1_3_fu_424;

assign downSpin_V_0_1_out = downSpin_V_1_fu_396;

assign downSpin_V_1_1_out = downSpin_V_1_1_fu_400;

assign downSpin_V_1_5_fu_2513_p3 = p_Val2_16_fu_2379_p66[zext_ln819_17_fu_2320_p1];

assign downSpin_V_2_1_out = downSpin_V_1_2_fu_404;

assign downSpin_V_3_1_out = downSpin_V_1_3_fu_408;

assign iPack_0_1_out = iPack_0_1_fu_348;

assign iPack_0_fu_1807_p4 = {{Ofst_fu_1798_p2[11:4]}};

assign iPack_1_1_out = iPack_1_1_fu_352;

assign iPack_2_1_out = iPack_2_1_fu_356;

assign iPack_3_1_out = iPack_3_1_fu_360;

assign iSpin_0_1_out = iSpin_0_1_fu_364;

assign iSpin_1_1_out = iSpin_1_1_fu_368;

assign iSpin_1_fu_1803_p1 = Ofst_fu_1798_p2[3:0];

assign iSpin_2_1_out = iSpin_2_1_fu_372;

assign iSpin_3_1_out = iSpin_3_1_fu_376;

assign icmp_ln214_fu_1770_p2 = ((t_fu_344 == 3'd4) ? 1'b1 : 1'b0);

assign logRandLocal_0_1_out = logRandLocal_1_fu_428;

assign logRandLocal_1_1_out = logRandLocal_1_1_fu_432;

assign logRandLocal_1_5_fu_2561_p1 = trunc_ln229_fu_2557_p1;

assign logRandLocal_2_1_out = logRandLocal_1_2_fu_436;

assign logRandLocal_3_1_out = logRandLocal_1_3_fu_440;

assign lshr_ln228_fu_2125_p2 = gmem_addr_read_reg_2934 >> zext_ln228_1_fu_2121_p1;

assign lshr_ln229_fu_2552_p2 = gmem_addr_1_read_reg_3269 >> zext_ln229_1_fu_2548_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign p_Val2_16_fu_2379_p65 = tmp_3_fu_2368_p3;

assign p_Val2_s_fu_2186_p65 = tmp_2_fu_2175_p3;

assign sext_ln228_fu_2010_p1 = $signed(trunc_ln228_3_reg_2912);

assign sext_ln229_fu_2020_p1 = $signed(trunc_ln229_2_reg_2917);

assign shl_ln1_fu_1925_p3 = {{Ofst_fu_1798_p2}, {2'd0}};

assign shl_ln228_1_fu_2114_p3 = {{add_ln228_1_reg_2939}, {3'd0}};

assign shl_ln229_1_fu_1952_p3 = {{trunc_ln222_fu_1825_p1}, {14'd0}};

assign shl_ln2_fu_2541_p3 = {{add_ln229_2_reg_2944}, {3'd0}};

assign t_2_cast_fu_1794_p1 = t_fu_344;

assign tmp_2_fu_2175_p3 = {{trunc_ln819_fu_2171_p1}, {trunc_ln819_3_reg_2901_pp0_iter36_reg}};

assign tmp_3_fu_2368_p3 = {{trunc_ln819_2_fu_2364_p1}, {trunc_ln819_3_reg_2901_pp0_iter36_reg}};

assign trottersLocal_V_0_0_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_10_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_11_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_12_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_13_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_14_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_15_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_1_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_2_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_3_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_4_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_5_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_6_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_7_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_8_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_0_9_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_0_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_10_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_11_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_12_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_13_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_14_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_15_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_1_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_2_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_3_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_4_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_5_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_6_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_7_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_8_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_1_9_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_0_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_10_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_11_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_12_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_13_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_14_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_15_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_1_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_2_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_3_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_4_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_5_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_6_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_7_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_8_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_2_9_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_0_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_10_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_11_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_12_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_13_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_14_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_15_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_1_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_2_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_3_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_4_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_5_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_6_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_7_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_8_address0 = zext_ln819_fu_2047_p1;

assign trottersLocal_V_3_9_address0 = zext_ln819_fu_2047_p1;

assign trunc_ln222_fu_1825_p1 = t_fu_344[1:0];

assign trunc_ln228_2_fu_2030_p3 = {{iSpin_1_reg_2889_pp0_iter35_reg}, {2'd0}};

assign trunc_ln228_fu_2130_p1 = lshr_ln228_fu_2125_p2[31:0];

assign trunc_ln229_fu_2557_p1 = lshr_ln229_fu_2552_p2[31:0];

assign trunc_ln819_2_fu_2364_p1 = tmp_15_fu_2351_p6[1:0];

assign trunc_ln819_fu_2171_p1 = tmp_s_fu_2158_p6[1:0];

assign upSpin_V_0_1_out = upSpin_V_1_fu_380;

assign upSpin_V_1_1_out = upSpin_V_1_1_fu_384;

assign upSpin_V_1_5_fu_2323_p3 = p_Val2_s_fu_2186_p66[zext_ln819_17_fu_2320_p1];

assign upSpin_V_2_1_out = upSpin_V_1_2_fu_388;

assign upSpin_V_3_1_out = upSpin_V_1_3_fu_392;

assign zext_ln222_fu_1817_p1 = iPack_0_fu_1807_p4;

assign zext_ln223_fu_1821_p1 = iSpin_1_fu_1803_p1;

assign zext_ln228_1_fu_2121_p1 = shl_ln228_1_fu_2114_p3;

assign zext_ln228_fu_1933_p1 = shl_ln1_fu_1925_p3;

assign zext_ln229_1_fu_2548_p1 = shl_ln2_fu_2541_p3;

assign zext_ln229_fu_1960_p1 = shl_ln229_1_fu_1952_p3;

assign zext_ln819_17_fu_2320_p1 = iSpin_1_reg_2889_pp0_iter36_reg;

assign zext_ln819_fu_2047_p1 = lshr_ln1_reg_2907_pp0_iter35_reg;

endmodule //QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_UPDATE_INPUT_STATE
