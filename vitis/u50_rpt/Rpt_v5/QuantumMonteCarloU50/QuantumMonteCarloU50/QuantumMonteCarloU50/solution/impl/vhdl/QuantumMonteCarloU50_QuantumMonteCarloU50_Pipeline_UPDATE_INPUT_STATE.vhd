-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_UPDATE_INPUT_STATE is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    logRandLocal_3_0562 : IN STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_2_0561 : IN STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_1_0560 : IN STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_0_0559 : IN STD_LOGIC_VECTOR (31 downto 0);
    dH_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dH_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dH_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dH_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    downSpin_V_3_0558 : IN STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_2_0557 : IN STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_1_0556 : IN STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_0_0555 : IN STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_3_0554 : IN STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_2_0553 : IN STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_1_0552 : IN STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_0_0551 : IN STD_LOGIC_VECTOR (0 downto 0);
    iSpin_3_0550 : IN STD_LOGIC_VECTOR (31 downto 0);
    iSpin_2_0549 : IN STD_LOGIC_VECTOR (31 downto 0);
    iSpin_1_0548 : IN STD_LOGIC_VECTOR (31 downto 0);
    iSpin_0_0547 : IN STD_LOGIC_VECTOR (31 downto 0);
    iPack_3_0546 : IN STD_LOGIC_VECTOR (31 downto 0);
    iPack_2_0545 : IN STD_LOGIC_VECTOR (31 downto 0);
    iPack_1_0544 : IN STD_LOGIC_VECTOR (31 downto 0);
    iPack_0_0543 : IN STD_LOGIC_VECTOR (31 downto 0);
    logRand : IN STD_LOGIC_VECTOR (63 downto 0);
    trunc_ln5 : IN STD_LOGIC_VECTOR (5 downto 0);
    h : IN STD_LOGIC_VECTOR (63 downto 0);
    trunc_ln4 : IN STD_LOGIC_VECTOR (5 downto 0);
    trottersLocal_V_0_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln8 : IN STD_LOGIC_VECTOR (11 downto 0);
    logRandLocal_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_3_1_out_ap_vld : OUT STD_LOGIC;
    logRandLocal_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_2_1_out_ap_vld : OUT STD_LOGIC;
    logRandLocal_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_1_1_out_ap_vld : OUT STD_LOGIC;
    logRandLocal_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    logRandLocal_0_1_out_ap_vld : OUT STD_LOGIC;
    dH_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    dH_3_1_out_ap_vld : OUT STD_LOGIC;
    dH_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    dH_2_1_out_ap_vld : OUT STD_LOGIC;
    dH_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    dH_1_1_out_ap_vld : OUT STD_LOGIC;
    dH_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    dH_0_1_out_ap_vld : OUT STD_LOGIC;
    downSpin_V_3_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_3_1_out_ap_vld : OUT STD_LOGIC;
    downSpin_V_2_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_2_1_out_ap_vld : OUT STD_LOGIC;
    downSpin_V_1_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_1_1_out_ap_vld : OUT STD_LOGIC;
    downSpin_V_0_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    downSpin_V_0_1_out_ap_vld : OUT STD_LOGIC;
    upSpin_V_3_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_3_1_out_ap_vld : OUT STD_LOGIC;
    upSpin_V_2_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_2_1_out_ap_vld : OUT STD_LOGIC;
    upSpin_V_1_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_1_1_out_ap_vld : OUT STD_LOGIC;
    upSpin_V_0_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    upSpin_V_0_1_out_ap_vld : OUT STD_LOGIC;
    iSpin_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iSpin_3_1_out_ap_vld : OUT STD_LOGIC;
    iSpin_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iSpin_2_1_out_ap_vld : OUT STD_LOGIC;
    iSpin_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iSpin_1_1_out_ap_vld : OUT STD_LOGIC;
    iSpin_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iSpin_0_1_out_ap_vld : OUT STD_LOGIC;
    iPack_3_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iPack_3_1_out_ap_vld : OUT STD_LOGIC;
    iPack_2_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iPack_2_1_out_ap_vld : OUT STD_LOGIC;
    iPack_1_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iPack_1_1_out_ap_vld : OUT STD_LOGIC;
    iPack_0_1_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    iPack_0_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_UPDATE_INPUT_STATE is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state16_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state24_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state36_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state40_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter20 : BOOLEAN;
    signal ap_block_state44_pp0_stage1_iter21 : BOOLEAN;
    signal ap_block_state46_pp0_stage1_iter22 : BOOLEAN;
    signal ap_block_state48_pp0_stage1_iter23 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter24 : BOOLEAN;
    signal ap_block_state52_pp0_stage1_iter25 : BOOLEAN;
    signal ap_block_state54_pp0_stage1_iter26 : BOOLEAN;
    signal ap_block_state56_pp0_stage1_iter27 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter28 : BOOLEAN;
    signal ap_block_state60_pp0_stage1_iter29 : BOOLEAN;
    signal ap_block_state62_pp0_stage1_iter30 : BOOLEAN;
    signal ap_block_state64_pp0_stage1_iter31 : BOOLEAN;
    signal ap_block_state66_pp0_stage1_iter32 : BOOLEAN;
    signal ap_block_state68_pp0_stage1_iter33 : BOOLEAN;
    signal ap_block_state70_pp0_stage1_iter34 : BOOLEAN;
    signal ap_block_state72_pp0_stage1_iter35 : BOOLEAN;
    signal ap_block_state74_pp0_stage1_iter36 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln214_fu_1770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln214_reg_2885 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state35_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state39_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state51_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state53_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state55_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state59_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state61_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state63_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state67_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state69_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state71_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state75_pp0_stage0_iter37 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln214_reg_2885_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln214_reg_2885_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal iSpin_1_fu_1803_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889 : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal iSpin_1_reg_2889_pp0_iter36_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln222_fu_1825_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter11_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter12_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter13_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter14_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter17_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter18_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter19_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter20_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter21_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter22_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter23_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter24_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter25_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter26_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter27_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter28_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter29_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter30_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter31_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter32_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter33_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter34_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter35_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln222_reg_2895_pp0_iter36_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln819_3_reg_2901 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln819_3_reg_2901_pp0_iter36_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln1_reg_2907_pp0_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln228_3_reg_2912 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln229_2_reg_2917 : STD_LOGIC_VECTOR (57 downto 0);
    signal gmem_addr_read_reg_2934 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln228_1_fu_2037_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln228_1_reg_2939 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln229_2_fu_2042_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln229_2_reg_2944 : STD_LOGIC_VECTOR (5 downto 0);
    signal gmem_addr_1_read_reg_3269 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal zext_ln819_fu_2047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln228_fu_2010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln229_fu_2020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_fu_344 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln214_fu_1776_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal iPack_0_1_fu_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_0_2_fu_1829_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_1_1_fu_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_1_2_fu_1843_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_2_1_fu_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_2_2_fu_1857_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_3_1_fu_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal iPack_3_2_fu_1871_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal iSpin_0_1_fu_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln223_fu_1821_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal iSpin_1_1_fu_368 : STD_LOGIC_VECTOR (31 downto 0);
    signal iSpin_2_1_fu_372 : STD_LOGIC_VECTOR (31 downto 0);
    signal iSpin_3_1_fu_376 : STD_LOGIC_VECTOR (31 downto 0);
    signal upSpin_V_1_fu_380 : STD_LOGIC_VECTOR (0 downto 0);
    signal upSpin_V_1_5_fu_2323_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal upSpin_V_1_1_fu_384 : STD_LOGIC_VECTOR (0 downto 0);
    signal upSpin_V_1_2_fu_388 : STD_LOGIC_VECTOR (0 downto 0);
    signal upSpin_V_1_3_fu_392 : STD_LOGIC_VECTOR (0 downto 0);
    signal downSpin_V_1_fu_396 : STD_LOGIC_VECTOR (0 downto 0);
    signal downSpin_V_1_5_fu_2513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal downSpin_V_1_1_fu_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal downSpin_V_1_2_fu_404 : STD_LOGIC_VECTOR (0 downto 0);
    signal downSpin_V_1_3_fu_408 : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_1_fu_412 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_5_fu_2134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_1_fu_416 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_2_fu_420 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_3_fu_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal logRandLocal_1_fu_428 : STD_LOGIC_VECTOR (31 downto 0);
    signal logRandLocal_1_5_fu_2561_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal logRandLocal_1_1_fu_432 : STD_LOGIC_VECTOR (31 downto 0);
    signal logRandLocal_1_2_fu_436 : STD_LOGIC_VECTOR (31 downto 0);
    signal logRandLocal_1_3_fu_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal t_2_cast_fu_1794_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Ofst_fu_1798_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal iPack_0_fu_1807_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln222_fu_1817_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln1_fu_1925_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln228_fu_1933_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln228_fu_1937_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln229_1_fu_1952_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln229_fu_1964_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln229_fu_1960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln229_1_fu_1969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln228_2_fu_2030_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln228_1_fu_2114_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln228_1_fu_2121_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln228_fu_2125_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln228_fu_2130_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_2158_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln819_fu_2171_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_2175_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_s_fu_2186_p65 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_s_fu_2186_p66 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln819_17_fu_2320_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_2351_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln819_2_fu_2364_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_2368_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_16_fu_2379_p65 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_16_fu_2379_p66 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln2_fu_2541_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln229_1_fu_2548_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln229_fu_2552_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln229_fu_2557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter36_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to35 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter16_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter17_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter18_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter19_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter20_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter21_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter22_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter23_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter24_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter25_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter26_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter27_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter28_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter29_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter30_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter31_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter32_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter33_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter34_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter35_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter36_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to37 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_1976 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component QuantumMonteCarloU50_mux_42_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component QuantumMonteCarloU50_mux_647_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        din10 : IN STD_LOGIC_VECTOR (15 downto 0);
        din11 : IN STD_LOGIC_VECTOR (15 downto 0);
        din12 : IN STD_LOGIC_VECTOR (15 downto 0);
        din13 : IN STD_LOGIC_VECTOR (15 downto 0);
        din14 : IN STD_LOGIC_VECTOR (15 downto 0);
        din15 : IN STD_LOGIC_VECTOR (15 downto 0);
        din16 : IN STD_LOGIC_VECTOR (15 downto 0);
        din17 : IN STD_LOGIC_VECTOR (15 downto 0);
        din18 : IN STD_LOGIC_VECTOR (15 downto 0);
        din19 : IN STD_LOGIC_VECTOR (15 downto 0);
        din20 : IN STD_LOGIC_VECTOR (15 downto 0);
        din21 : IN STD_LOGIC_VECTOR (15 downto 0);
        din22 : IN STD_LOGIC_VECTOR (15 downto 0);
        din23 : IN STD_LOGIC_VECTOR (15 downto 0);
        din24 : IN STD_LOGIC_VECTOR (15 downto 0);
        din25 : IN STD_LOGIC_VECTOR (15 downto 0);
        din26 : IN STD_LOGIC_VECTOR (15 downto 0);
        din27 : IN STD_LOGIC_VECTOR (15 downto 0);
        din28 : IN STD_LOGIC_VECTOR (15 downto 0);
        din29 : IN STD_LOGIC_VECTOR (15 downto 0);
        din30 : IN STD_LOGIC_VECTOR (15 downto 0);
        din31 : IN STD_LOGIC_VECTOR (15 downto 0);
        din32 : IN STD_LOGIC_VECTOR (15 downto 0);
        din33 : IN STD_LOGIC_VECTOR (15 downto 0);
        din34 : IN STD_LOGIC_VECTOR (15 downto 0);
        din35 : IN STD_LOGIC_VECTOR (15 downto 0);
        din36 : IN STD_LOGIC_VECTOR (15 downto 0);
        din37 : IN STD_LOGIC_VECTOR (15 downto 0);
        din38 : IN STD_LOGIC_VECTOR (15 downto 0);
        din39 : IN STD_LOGIC_VECTOR (15 downto 0);
        din40 : IN STD_LOGIC_VECTOR (15 downto 0);
        din41 : IN STD_LOGIC_VECTOR (15 downto 0);
        din42 : IN STD_LOGIC_VECTOR (15 downto 0);
        din43 : IN STD_LOGIC_VECTOR (15 downto 0);
        din44 : IN STD_LOGIC_VECTOR (15 downto 0);
        din45 : IN STD_LOGIC_VECTOR (15 downto 0);
        din46 : IN STD_LOGIC_VECTOR (15 downto 0);
        din47 : IN STD_LOGIC_VECTOR (15 downto 0);
        din48 : IN STD_LOGIC_VECTOR (15 downto 0);
        din49 : IN STD_LOGIC_VECTOR (15 downto 0);
        din50 : IN STD_LOGIC_VECTOR (15 downto 0);
        din51 : IN STD_LOGIC_VECTOR (15 downto 0);
        din52 : IN STD_LOGIC_VECTOR (15 downto 0);
        din53 : IN STD_LOGIC_VECTOR (15 downto 0);
        din54 : IN STD_LOGIC_VECTOR (15 downto 0);
        din55 : IN STD_LOGIC_VECTOR (15 downto 0);
        din56 : IN STD_LOGIC_VECTOR (15 downto 0);
        din57 : IN STD_LOGIC_VECTOR (15 downto 0);
        din58 : IN STD_LOGIC_VECTOR (15 downto 0);
        din59 : IN STD_LOGIC_VECTOR (15 downto 0);
        din60 : IN STD_LOGIC_VECTOR (15 downto 0);
        din61 : IN STD_LOGIC_VECTOR (15 downto 0);
        din62 : IN STD_LOGIC_VECTOR (15 downto 0);
        din63 : IN STD_LOGIC_VECTOR (15 downto 0);
        din64 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_42_32_1_1_U67 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => zext_ln222_fu_1817_p1,
        din1 => iPack_0_1_fu_348,
        din2 => iPack_0_1_fu_348,
        din3 => iPack_0_1_fu_348,
        din4 => trunc_ln222_fu_1825_p1,
        dout => iPack_0_2_fu_1829_p6);

    mux_42_32_1_1_U68 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => iPack_1_1_fu_352,
        din1 => zext_ln222_fu_1817_p1,
        din2 => iPack_1_1_fu_352,
        din3 => iPack_1_1_fu_352,
        din4 => trunc_ln222_fu_1825_p1,
        dout => iPack_1_2_fu_1843_p6);

    mux_42_32_1_1_U69 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => iPack_2_1_fu_356,
        din1 => iPack_2_1_fu_356,
        din2 => zext_ln222_fu_1817_p1,
        din3 => iPack_2_1_fu_356,
        din4 => trunc_ln222_fu_1825_p1,
        dout => iPack_2_2_fu_1857_p6);

    mux_42_32_1_1_U70 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => iPack_3_1_fu_360,
        din1 => iPack_3_1_fu_360,
        din2 => iPack_3_1_fu_360,
        din3 => zext_ln222_fu_1817_p1,
        din4 => trunc_ln222_fu_1825_p1,
        dout => iPack_3_2_fu_1871_p6);

    mux_42_32_1_1_U71 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_3,
        din1 => ap_const_lv32_0,
        din2 => ap_const_lv32_1,
        din3 => ap_const_lv32_2,
        din4 => trunc_ln222_reg_2895_pp0_iter36_reg,
        dout => tmp_s_fu_2158_p6);

    mux_647_16_1_1_U72 : component QuantumMonteCarloU50_mux_647_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 16,
        din40_WIDTH => 16,
        din41_WIDTH => 16,
        din42_WIDTH => 16,
        din43_WIDTH => 16,
        din44_WIDTH => 16,
        din45_WIDTH => 16,
        din46_WIDTH => 16,
        din47_WIDTH => 16,
        din48_WIDTH => 16,
        din49_WIDTH => 16,
        din50_WIDTH => 16,
        din51_WIDTH => 16,
        din52_WIDTH => 16,
        din53_WIDTH => 16,
        din54_WIDTH => 16,
        din55_WIDTH => 16,
        din56_WIDTH => 16,
        din57_WIDTH => 16,
        din58_WIDTH => 16,
        din59_WIDTH => 16,
        din60_WIDTH => 16,
        din61_WIDTH => 16,
        din62_WIDTH => 16,
        din63_WIDTH => 16,
        din64_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => trottersLocal_V_0_0_q0,
        din1 => trottersLocal_V_0_1_q0,
        din2 => trottersLocal_V_0_2_q0,
        din3 => trottersLocal_V_0_3_q0,
        din4 => trottersLocal_V_0_4_q0,
        din5 => trottersLocal_V_0_5_q0,
        din6 => trottersLocal_V_0_6_q0,
        din7 => trottersLocal_V_0_7_q0,
        din8 => trottersLocal_V_0_8_q0,
        din9 => trottersLocal_V_0_9_q0,
        din10 => trottersLocal_V_0_10_q0,
        din11 => trottersLocal_V_0_11_q0,
        din12 => trottersLocal_V_0_12_q0,
        din13 => trottersLocal_V_0_13_q0,
        din14 => trottersLocal_V_0_14_q0,
        din15 => trottersLocal_V_0_15_q0,
        din16 => trottersLocal_V_1_0_q0,
        din17 => trottersLocal_V_1_1_q0,
        din18 => trottersLocal_V_1_2_q0,
        din19 => trottersLocal_V_1_3_q0,
        din20 => trottersLocal_V_1_4_q0,
        din21 => trottersLocal_V_1_5_q0,
        din22 => trottersLocal_V_1_6_q0,
        din23 => trottersLocal_V_1_7_q0,
        din24 => trottersLocal_V_1_8_q0,
        din25 => trottersLocal_V_1_9_q0,
        din26 => trottersLocal_V_1_10_q0,
        din27 => trottersLocal_V_1_11_q0,
        din28 => trottersLocal_V_1_12_q0,
        din29 => trottersLocal_V_1_13_q0,
        din30 => trottersLocal_V_1_14_q0,
        din31 => trottersLocal_V_1_15_q0,
        din32 => trottersLocal_V_2_0_q0,
        din33 => trottersLocal_V_2_1_q0,
        din34 => trottersLocal_V_2_2_q0,
        din35 => trottersLocal_V_2_3_q0,
        din36 => trottersLocal_V_2_4_q0,
        din37 => trottersLocal_V_2_5_q0,
        din38 => trottersLocal_V_2_6_q0,
        din39 => trottersLocal_V_2_7_q0,
        din40 => trottersLocal_V_2_8_q0,
        din41 => trottersLocal_V_2_9_q0,
        din42 => trottersLocal_V_2_10_q0,
        din43 => trottersLocal_V_2_11_q0,
        din44 => trottersLocal_V_2_12_q0,
        din45 => trottersLocal_V_2_13_q0,
        din46 => trottersLocal_V_2_14_q0,
        din47 => trottersLocal_V_2_15_q0,
        din48 => trottersLocal_V_3_0_q0,
        din49 => trottersLocal_V_3_1_q0,
        din50 => trottersLocal_V_3_2_q0,
        din51 => trottersLocal_V_3_3_q0,
        din52 => trottersLocal_V_3_4_q0,
        din53 => trottersLocal_V_3_5_q0,
        din54 => trottersLocal_V_3_6_q0,
        din55 => trottersLocal_V_3_7_q0,
        din56 => trottersLocal_V_3_8_q0,
        din57 => trottersLocal_V_3_9_q0,
        din58 => trottersLocal_V_3_10_q0,
        din59 => trottersLocal_V_3_11_q0,
        din60 => trottersLocal_V_3_12_q0,
        din61 => trottersLocal_V_3_13_q0,
        din62 => trottersLocal_V_3_14_q0,
        din63 => trottersLocal_V_3_15_q0,
        din64 => p_Val2_s_fu_2186_p65,
        dout => p_Val2_s_fu_2186_p66);

    mux_42_32_1_1_U73 : component QuantumMonteCarloU50_mux_42_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => ap_const_lv32_1,
        din1 => ap_const_lv32_2,
        din2 => ap_const_lv32_3,
        din3 => ap_const_lv32_0,
        din4 => trunc_ln222_reg_2895_pp0_iter36_reg,
        dout => tmp_15_fu_2351_p6);

    mux_647_16_1_1_U74 : component QuantumMonteCarloU50_mux_647_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 16,
        din40_WIDTH => 16,
        din41_WIDTH => 16,
        din42_WIDTH => 16,
        din43_WIDTH => 16,
        din44_WIDTH => 16,
        din45_WIDTH => 16,
        din46_WIDTH => 16,
        din47_WIDTH => 16,
        din48_WIDTH => 16,
        din49_WIDTH => 16,
        din50_WIDTH => 16,
        din51_WIDTH => 16,
        din52_WIDTH => 16,
        din53_WIDTH => 16,
        din54_WIDTH => 16,
        din55_WIDTH => 16,
        din56_WIDTH => 16,
        din57_WIDTH => 16,
        din58_WIDTH => 16,
        din59_WIDTH => 16,
        din60_WIDTH => 16,
        din61_WIDTH => 16,
        din62_WIDTH => 16,
        din63_WIDTH => 16,
        din64_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => trottersLocal_V_0_0_q0,
        din1 => trottersLocal_V_0_1_q0,
        din2 => trottersLocal_V_0_2_q0,
        din3 => trottersLocal_V_0_3_q0,
        din4 => trottersLocal_V_0_4_q0,
        din5 => trottersLocal_V_0_5_q0,
        din6 => trottersLocal_V_0_6_q0,
        din7 => trottersLocal_V_0_7_q0,
        din8 => trottersLocal_V_0_8_q0,
        din9 => trottersLocal_V_0_9_q0,
        din10 => trottersLocal_V_0_10_q0,
        din11 => trottersLocal_V_0_11_q0,
        din12 => trottersLocal_V_0_12_q0,
        din13 => trottersLocal_V_0_13_q0,
        din14 => trottersLocal_V_0_14_q0,
        din15 => trottersLocal_V_0_15_q0,
        din16 => trottersLocal_V_1_0_q0,
        din17 => trottersLocal_V_1_1_q0,
        din18 => trottersLocal_V_1_2_q0,
        din19 => trottersLocal_V_1_3_q0,
        din20 => trottersLocal_V_1_4_q0,
        din21 => trottersLocal_V_1_5_q0,
        din22 => trottersLocal_V_1_6_q0,
        din23 => trottersLocal_V_1_7_q0,
        din24 => trottersLocal_V_1_8_q0,
        din25 => trottersLocal_V_1_9_q0,
        din26 => trottersLocal_V_1_10_q0,
        din27 => trottersLocal_V_1_11_q0,
        din28 => trottersLocal_V_1_12_q0,
        din29 => trottersLocal_V_1_13_q0,
        din30 => trottersLocal_V_1_14_q0,
        din31 => trottersLocal_V_1_15_q0,
        din32 => trottersLocal_V_2_0_q0,
        din33 => trottersLocal_V_2_1_q0,
        din34 => trottersLocal_V_2_2_q0,
        din35 => trottersLocal_V_2_3_q0,
        din36 => trottersLocal_V_2_4_q0,
        din37 => trottersLocal_V_2_5_q0,
        din38 => trottersLocal_V_2_6_q0,
        din39 => trottersLocal_V_2_7_q0,
        din40 => trottersLocal_V_2_8_q0,
        din41 => trottersLocal_V_2_9_q0,
        din42 => trottersLocal_V_2_10_q0,
        din43 => trottersLocal_V_2_11_q0,
        din44 => trottersLocal_V_2_12_q0,
        din45 => trottersLocal_V_2_13_q0,
        din46 => trottersLocal_V_2_14_q0,
        din47 => trottersLocal_V_2_15_q0,
        din48 => trottersLocal_V_3_0_q0,
        din49 => trottersLocal_V_3_1_q0,
        din50 => trottersLocal_V_3_2_q0,
        din51 => trottersLocal_V_3_3_q0,
        din52 => trottersLocal_V_3_4_q0,
        din53 => trottersLocal_V_3_5_q0,
        din54 => trottersLocal_V_3_6_q0,
        din55 => trottersLocal_V_3_7_q0,
        din56 => trottersLocal_V_3_8_q0,
        din57 => trottersLocal_V_3_9_q0,
        din58 => trottersLocal_V_3_10_q0,
        din59 => trottersLocal_V_3_11_q0,
        din60 => trottersLocal_V_3_12_q0,
        din61 => trottersLocal_V_3_13_q0,
        din62 => trottersLocal_V_3_14_q0,
        din63 => trottersLocal_V_3_15_q0,
        din64 => p_Val2_16_fu_2379_p65,
        dout => p_Val2_16_fu_2379_p66);

    flow_control_loop_pipe_sequential_init_U : component QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter36_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter11_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter12_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter13_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter14_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter15_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter16_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter17_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter18_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter19_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter20_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter21_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter21_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter22_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter22_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter23_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter23_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter24_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter24_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter25_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter25_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter26_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter26_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter27_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter27_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter28_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter28_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter29_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter29_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter30_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter30_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter31_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter31_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter32_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter32_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter33_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter33_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter34_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter34_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter35_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter35_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter36_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter36_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    dH_1_1_fu_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dH_1_1_fu_416 <= dH_1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_reg_2895_pp0_iter35_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
                dH_1_1_fu_416 <= dH_1_5_fu_2134_p1;
            end if; 
        end if;
    end process;

    dH_1_2_fu_420_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dH_1_2_fu_420 <= dH_2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_reg_2895_pp0_iter35_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
                dH_1_2_fu_420 <= dH_1_5_fu_2134_p1;
            end if; 
        end if;
    end process;

    dH_1_3_fu_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dH_1_3_fu_424 <= dH_3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_reg_2895_pp0_iter35_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
                dH_1_3_fu_424 <= dH_1_5_fu_2134_p1;
            end if; 
        end if;
    end process;

    dH_1_fu_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                dH_1_fu_412 <= dH_0_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_reg_2895_pp0_iter35_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
                dH_1_fu_412 <= dH_1_5_fu_2134_p1;
            end if; 
        end if;
    end process;

    downSpin_V_1_1_fu_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    downSpin_V_1_1_fu_400 <= downSpin_V_1_0556;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    downSpin_V_1_1_fu_400 <= downSpin_V_1_5_fu_2513_p3;
                end if;
            end if; 
        end if;
    end process;

    downSpin_V_1_2_fu_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    downSpin_V_1_2_fu_404 <= downSpin_V_2_0557;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    downSpin_V_1_2_fu_404 <= downSpin_V_1_5_fu_2513_p3;
                end if;
            end if; 
        end if;
    end process;

    downSpin_V_1_3_fu_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    downSpin_V_1_3_fu_408 <= downSpin_V_3_0558;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    downSpin_V_1_3_fu_408 <= downSpin_V_1_5_fu_2513_p3;
                end if;
            end if; 
        end if;
    end process;

    downSpin_V_1_fu_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    downSpin_V_1_fu_396 <= downSpin_V_0_0555;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    downSpin_V_1_fu_396 <= downSpin_V_1_5_fu_2513_p3;
                end if;
            end if; 
        end if;
    end process;

    iPack_0_1_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iPack_0_1_fu_348 <= iPack_0_0543;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iPack_0_1_fu_348 <= iPack_0_2_fu_1829_p6;
            end if; 
        end if;
    end process;

    iPack_1_1_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iPack_1_1_fu_352 <= iPack_1_0544;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iPack_1_1_fu_352 <= iPack_1_2_fu_1843_p6;
            end if; 
        end if;
    end process;

    iPack_2_1_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iPack_2_1_fu_356 <= iPack_2_0545;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iPack_2_1_fu_356 <= iPack_2_2_fu_1857_p6;
            end if; 
        end if;
    end process;

    iPack_3_1_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iPack_3_1_fu_360 <= iPack_3_0546;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                iPack_3_1_fu_360 <= iPack_3_2_fu_1871_p6;
            end if; 
        end if;
    end process;

    iSpin_0_1_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iSpin_0_1_fu_364 <= iSpin_0_0547;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_fu_1825_p1 = ap_const_lv2_0))) then 
                iSpin_0_1_fu_364 <= zext_ln223_fu_1821_p1;
            end if; 
        end if;
    end process;

    iSpin_1_1_fu_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iSpin_1_1_fu_368 <= iSpin_1_0548;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_fu_1825_p1 = ap_const_lv2_1))) then 
                iSpin_1_1_fu_368 <= zext_ln223_fu_1821_p1;
            end if; 
        end if;
    end process;

    iSpin_2_1_fu_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iSpin_2_1_fu_372 <= iSpin_2_0549;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_fu_1825_p1 = ap_const_lv2_2))) then 
                iSpin_2_1_fu_372 <= zext_ln223_fu_1821_p1;
            end if; 
        end if;
    end process;

    iSpin_3_1_fu_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                iSpin_3_1_fu_376 <= iSpin_3_0550;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln222_fu_1825_p1 = ap_const_lv2_3))) then 
                iSpin_3_1_fu_376 <= zext_ln223_fu_1821_p1;
            end if; 
        end if;
    end process;

    logRandLocal_1_1_fu_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    logRandLocal_1_1_fu_432 <= logRandLocal_1_0560;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    logRandLocal_1_1_fu_432 <= logRandLocal_1_5_fu_2561_p1;
                end if;
            end if; 
        end if;
    end process;

    logRandLocal_1_2_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    logRandLocal_1_2_fu_436 <= logRandLocal_2_0561;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    logRandLocal_1_2_fu_436 <= logRandLocal_1_5_fu_2561_p1;
                end if;
            end if; 
        end if;
    end process;

    logRandLocal_1_3_fu_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    logRandLocal_1_3_fu_440 <= logRandLocal_3_0562;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    logRandLocal_1_3_fu_440 <= logRandLocal_1_5_fu_2561_p1;
                end if;
            end if; 
        end if;
    end process;

    logRandLocal_1_fu_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    logRandLocal_1_fu_428 <= logRandLocal_0_0559;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    logRandLocal_1_fu_428 <= logRandLocal_1_5_fu_2561_p1;
                end if;
            end if; 
        end if;
    end process;

    t_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                t_fu_344 <= ap_const_lv3_0;
            elsif (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                t_fu_344 <= add_ln214_fu_1776_p2;
            end if; 
        end if;
    end process;

    upSpin_V_1_1_fu_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    upSpin_V_1_1_fu_384 <= upSpin_V_1_0552;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_1) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    upSpin_V_1_1_fu_384 <= upSpin_V_1_5_fu_2323_p3;
                end if;
            end if; 
        end if;
    end process;

    upSpin_V_1_2_fu_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    upSpin_V_1_2_fu_388 <= upSpin_V_2_0553;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_2) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    upSpin_V_1_2_fu_388 <= upSpin_V_1_5_fu_2323_p3;
                end if;
            end if; 
        end if;
    end process;

    upSpin_V_1_3_fu_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    upSpin_V_1_3_fu_392 <= upSpin_V_3_0554;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_3) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    upSpin_V_1_3_fu_392 <= upSpin_V_1_5_fu_2323_p3;
                end if;
            end if; 
        end if;
    end process;

    upSpin_V_1_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    upSpin_V_1_fu_380 <= upSpin_V_0_0551;
                elsif (((trunc_ln222_reg_2895_pp0_iter36_reg = ap_const_lv2_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_1))) then 
                    upSpin_V_1_fu_380 <= upSpin_V_1_5_fu_2323_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln228_1_reg_2939 <= add_ln228_1_fu_2037_p2;
                add_ln229_2_reg_2944 <= add_ln229_2_fu_2042_p2;
                gmem_addr_read_reg_2934 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                gmem_addr_1_read_reg_3269 <= m_axi_gmem_RDATA;
                iSpin_1_reg_2889_pp0_iter10_reg <= iSpin_1_reg_2889_pp0_iter9_reg;
                iSpin_1_reg_2889_pp0_iter11_reg <= iSpin_1_reg_2889_pp0_iter10_reg;
                iSpin_1_reg_2889_pp0_iter12_reg <= iSpin_1_reg_2889_pp0_iter11_reg;
                iSpin_1_reg_2889_pp0_iter13_reg <= iSpin_1_reg_2889_pp0_iter12_reg;
                iSpin_1_reg_2889_pp0_iter14_reg <= iSpin_1_reg_2889_pp0_iter13_reg;
                iSpin_1_reg_2889_pp0_iter15_reg <= iSpin_1_reg_2889_pp0_iter14_reg;
                iSpin_1_reg_2889_pp0_iter16_reg <= iSpin_1_reg_2889_pp0_iter15_reg;
                iSpin_1_reg_2889_pp0_iter17_reg <= iSpin_1_reg_2889_pp0_iter16_reg;
                iSpin_1_reg_2889_pp0_iter18_reg <= iSpin_1_reg_2889_pp0_iter17_reg;
                iSpin_1_reg_2889_pp0_iter19_reg <= iSpin_1_reg_2889_pp0_iter18_reg;
                iSpin_1_reg_2889_pp0_iter1_reg <= iSpin_1_reg_2889;
                iSpin_1_reg_2889_pp0_iter20_reg <= iSpin_1_reg_2889_pp0_iter19_reg;
                iSpin_1_reg_2889_pp0_iter21_reg <= iSpin_1_reg_2889_pp0_iter20_reg;
                iSpin_1_reg_2889_pp0_iter22_reg <= iSpin_1_reg_2889_pp0_iter21_reg;
                iSpin_1_reg_2889_pp0_iter23_reg <= iSpin_1_reg_2889_pp0_iter22_reg;
                iSpin_1_reg_2889_pp0_iter24_reg <= iSpin_1_reg_2889_pp0_iter23_reg;
                iSpin_1_reg_2889_pp0_iter25_reg <= iSpin_1_reg_2889_pp0_iter24_reg;
                iSpin_1_reg_2889_pp0_iter26_reg <= iSpin_1_reg_2889_pp0_iter25_reg;
                iSpin_1_reg_2889_pp0_iter27_reg <= iSpin_1_reg_2889_pp0_iter26_reg;
                iSpin_1_reg_2889_pp0_iter28_reg <= iSpin_1_reg_2889_pp0_iter27_reg;
                iSpin_1_reg_2889_pp0_iter29_reg <= iSpin_1_reg_2889_pp0_iter28_reg;
                iSpin_1_reg_2889_pp0_iter2_reg <= iSpin_1_reg_2889_pp0_iter1_reg;
                iSpin_1_reg_2889_pp0_iter30_reg <= iSpin_1_reg_2889_pp0_iter29_reg;
                iSpin_1_reg_2889_pp0_iter31_reg <= iSpin_1_reg_2889_pp0_iter30_reg;
                iSpin_1_reg_2889_pp0_iter32_reg <= iSpin_1_reg_2889_pp0_iter31_reg;
                iSpin_1_reg_2889_pp0_iter33_reg <= iSpin_1_reg_2889_pp0_iter32_reg;
                iSpin_1_reg_2889_pp0_iter34_reg <= iSpin_1_reg_2889_pp0_iter33_reg;
                iSpin_1_reg_2889_pp0_iter35_reg <= iSpin_1_reg_2889_pp0_iter34_reg;
                iSpin_1_reg_2889_pp0_iter36_reg <= iSpin_1_reg_2889_pp0_iter35_reg;
                iSpin_1_reg_2889_pp0_iter3_reg <= iSpin_1_reg_2889_pp0_iter2_reg;
                iSpin_1_reg_2889_pp0_iter4_reg <= iSpin_1_reg_2889_pp0_iter3_reg;
                iSpin_1_reg_2889_pp0_iter5_reg <= iSpin_1_reg_2889_pp0_iter4_reg;
                iSpin_1_reg_2889_pp0_iter6_reg <= iSpin_1_reg_2889_pp0_iter5_reg;
                iSpin_1_reg_2889_pp0_iter7_reg <= iSpin_1_reg_2889_pp0_iter6_reg;
                iSpin_1_reg_2889_pp0_iter8_reg <= iSpin_1_reg_2889_pp0_iter7_reg;
                iSpin_1_reg_2889_pp0_iter9_reg <= iSpin_1_reg_2889_pp0_iter8_reg;
                icmp_ln214_reg_2885 <= icmp_ln214_fu_1770_p2;
                icmp_ln214_reg_2885_pp0_iter10_reg <= icmp_ln214_reg_2885_pp0_iter9_reg;
                icmp_ln214_reg_2885_pp0_iter11_reg <= icmp_ln214_reg_2885_pp0_iter10_reg;
                icmp_ln214_reg_2885_pp0_iter12_reg <= icmp_ln214_reg_2885_pp0_iter11_reg;
                icmp_ln214_reg_2885_pp0_iter13_reg <= icmp_ln214_reg_2885_pp0_iter12_reg;
                icmp_ln214_reg_2885_pp0_iter14_reg <= icmp_ln214_reg_2885_pp0_iter13_reg;
                icmp_ln214_reg_2885_pp0_iter15_reg <= icmp_ln214_reg_2885_pp0_iter14_reg;
                icmp_ln214_reg_2885_pp0_iter16_reg <= icmp_ln214_reg_2885_pp0_iter15_reg;
                icmp_ln214_reg_2885_pp0_iter17_reg <= icmp_ln214_reg_2885_pp0_iter16_reg;
                icmp_ln214_reg_2885_pp0_iter18_reg <= icmp_ln214_reg_2885_pp0_iter17_reg;
                icmp_ln214_reg_2885_pp0_iter19_reg <= icmp_ln214_reg_2885_pp0_iter18_reg;
                icmp_ln214_reg_2885_pp0_iter1_reg <= icmp_ln214_reg_2885;
                icmp_ln214_reg_2885_pp0_iter20_reg <= icmp_ln214_reg_2885_pp0_iter19_reg;
                icmp_ln214_reg_2885_pp0_iter21_reg <= icmp_ln214_reg_2885_pp0_iter20_reg;
                icmp_ln214_reg_2885_pp0_iter22_reg <= icmp_ln214_reg_2885_pp0_iter21_reg;
                icmp_ln214_reg_2885_pp0_iter23_reg <= icmp_ln214_reg_2885_pp0_iter22_reg;
                icmp_ln214_reg_2885_pp0_iter24_reg <= icmp_ln214_reg_2885_pp0_iter23_reg;
                icmp_ln214_reg_2885_pp0_iter25_reg <= icmp_ln214_reg_2885_pp0_iter24_reg;
                icmp_ln214_reg_2885_pp0_iter26_reg <= icmp_ln214_reg_2885_pp0_iter25_reg;
                icmp_ln214_reg_2885_pp0_iter27_reg <= icmp_ln214_reg_2885_pp0_iter26_reg;
                icmp_ln214_reg_2885_pp0_iter28_reg <= icmp_ln214_reg_2885_pp0_iter27_reg;
                icmp_ln214_reg_2885_pp0_iter29_reg <= icmp_ln214_reg_2885_pp0_iter28_reg;
                icmp_ln214_reg_2885_pp0_iter2_reg <= icmp_ln214_reg_2885_pp0_iter1_reg;
                icmp_ln214_reg_2885_pp0_iter30_reg <= icmp_ln214_reg_2885_pp0_iter29_reg;
                icmp_ln214_reg_2885_pp0_iter31_reg <= icmp_ln214_reg_2885_pp0_iter30_reg;
                icmp_ln214_reg_2885_pp0_iter32_reg <= icmp_ln214_reg_2885_pp0_iter31_reg;
                icmp_ln214_reg_2885_pp0_iter33_reg <= icmp_ln214_reg_2885_pp0_iter32_reg;
                icmp_ln214_reg_2885_pp0_iter34_reg <= icmp_ln214_reg_2885_pp0_iter33_reg;
                icmp_ln214_reg_2885_pp0_iter35_reg <= icmp_ln214_reg_2885_pp0_iter34_reg;
                icmp_ln214_reg_2885_pp0_iter3_reg <= icmp_ln214_reg_2885_pp0_iter2_reg;
                icmp_ln214_reg_2885_pp0_iter4_reg <= icmp_ln214_reg_2885_pp0_iter3_reg;
                icmp_ln214_reg_2885_pp0_iter5_reg <= icmp_ln214_reg_2885_pp0_iter4_reg;
                icmp_ln214_reg_2885_pp0_iter6_reg <= icmp_ln214_reg_2885_pp0_iter5_reg;
                icmp_ln214_reg_2885_pp0_iter7_reg <= icmp_ln214_reg_2885_pp0_iter6_reg;
                icmp_ln214_reg_2885_pp0_iter8_reg <= icmp_ln214_reg_2885_pp0_iter7_reg;
                icmp_ln214_reg_2885_pp0_iter9_reg <= icmp_ln214_reg_2885_pp0_iter8_reg;
                lshr_ln1_reg_2907_pp0_iter10_reg <= lshr_ln1_reg_2907_pp0_iter9_reg;
                lshr_ln1_reg_2907_pp0_iter11_reg <= lshr_ln1_reg_2907_pp0_iter10_reg;
                lshr_ln1_reg_2907_pp0_iter12_reg <= lshr_ln1_reg_2907_pp0_iter11_reg;
                lshr_ln1_reg_2907_pp0_iter13_reg <= lshr_ln1_reg_2907_pp0_iter12_reg;
                lshr_ln1_reg_2907_pp0_iter14_reg <= lshr_ln1_reg_2907_pp0_iter13_reg;
                lshr_ln1_reg_2907_pp0_iter15_reg <= lshr_ln1_reg_2907_pp0_iter14_reg;
                lshr_ln1_reg_2907_pp0_iter16_reg <= lshr_ln1_reg_2907_pp0_iter15_reg;
                lshr_ln1_reg_2907_pp0_iter17_reg <= lshr_ln1_reg_2907_pp0_iter16_reg;
                lshr_ln1_reg_2907_pp0_iter18_reg <= lshr_ln1_reg_2907_pp0_iter17_reg;
                lshr_ln1_reg_2907_pp0_iter19_reg <= lshr_ln1_reg_2907_pp0_iter18_reg;
                lshr_ln1_reg_2907_pp0_iter1_reg <= lshr_ln1_reg_2907;
                lshr_ln1_reg_2907_pp0_iter20_reg <= lshr_ln1_reg_2907_pp0_iter19_reg;
                lshr_ln1_reg_2907_pp0_iter21_reg <= lshr_ln1_reg_2907_pp0_iter20_reg;
                lshr_ln1_reg_2907_pp0_iter22_reg <= lshr_ln1_reg_2907_pp0_iter21_reg;
                lshr_ln1_reg_2907_pp0_iter23_reg <= lshr_ln1_reg_2907_pp0_iter22_reg;
                lshr_ln1_reg_2907_pp0_iter24_reg <= lshr_ln1_reg_2907_pp0_iter23_reg;
                lshr_ln1_reg_2907_pp0_iter25_reg <= lshr_ln1_reg_2907_pp0_iter24_reg;
                lshr_ln1_reg_2907_pp0_iter26_reg <= lshr_ln1_reg_2907_pp0_iter25_reg;
                lshr_ln1_reg_2907_pp0_iter27_reg <= lshr_ln1_reg_2907_pp0_iter26_reg;
                lshr_ln1_reg_2907_pp0_iter28_reg <= lshr_ln1_reg_2907_pp0_iter27_reg;
                lshr_ln1_reg_2907_pp0_iter29_reg <= lshr_ln1_reg_2907_pp0_iter28_reg;
                lshr_ln1_reg_2907_pp0_iter2_reg <= lshr_ln1_reg_2907_pp0_iter1_reg;
                lshr_ln1_reg_2907_pp0_iter30_reg <= lshr_ln1_reg_2907_pp0_iter29_reg;
                lshr_ln1_reg_2907_pp0_iter31_reg <= lshr_ln1_reg_2907_pp0_iter30_reg;
                lshr_ln1_reg_2907_pp0_iter32_reg <= lshr_ln1_reg_2907_pp0_iter31_reg;
                lshr_ln1_reg_2907_pp0_iter33_reg <= lshr_ln1_reg_2907_pp0_iter32_reg;
                lshr_ln1_reg_2907_pp0_iter34_reg <= lshr_ln1_reg_2907_pp0_iter33_reg;
                lshr_ln1_reg_2907_pp0_iter35_reg <= lshr_ln1_reg_2907_pp0_iter34_reg;
                lshr_ln1_reg_2907_pp0_iter3_reg <= lshr_ln1_reg_2907_pp0_iter2_reg;
                lshr_ln1_reg_2907_pp0_iter4_reg <= lshr_ln1_reg_2907_pp0_iter3_reg;
                lshr_ln1_reg_2907_pp0_iter5_reg <= lshr_ln1_reg_2907_pp0_iter4_reg;
                lshr_ln1_reg_2907_pp0_iter6_reg <= lshr_ln1_reg_2907_pp0_iter5_reg;
                lshr_ln1_reg_2907_pp0_iter7_reg <= lshr_ln1_reg_2907_pp0_iter6_reg;
                lshr_ln1_reg_2907_pp0_iter8_reg <= lshr_ln1_reg_2907_pp0_iter7_reg;
                lshr_ln1_reg_2907_pp0_iter9_reg <= lshr_ln1_reg_2907_pp0_iter8_reg;
                trunc_ln222_reg_2895_pp0_iter10_reg <= trunc_ln222_reg_2895_pp0_iter9_reg;
                trunc_ln222_reg_2895_pp0_iter11_reg <= trunc_ln222_reg_2895_pp0_iter10_reg;
                trunc_ln222_reg_2895_pp0_iter12_reg <= trunc_ln222_reg_2895_pp0_iter11_reg;
                trunc_ln222_reg_2895_pp0_iter13_reg <= trunc_ln222_reg_2895_pp0_iter12_reg;
                trunc_ln222_reg_2895_pp0_iter14_reg <= trunc_ln222_reg_2895_pp0_iter13_reg;
                trunc_ln222_reg_2895_pp0_iter15_reg <= trunc_ln222_reg_2895_pp0_iter14_reg;
                trunc_ln222_reg_2895_pp0_iter16_reg <= trunc_ln222_reg_2895_pp0_iter15_reg;
                trunc_ln222_reg_2895_pp0_iter17_reg <= trunc_ln222_reg_2895_pp0_iter16_reg;
                trunc_ln222_reg_2895_pp0_iter18_reg <= trunc_ln222_reg_2895_pp0_iter17_reg;
                trunc_ln222_reg_2895_pp0_iter19_reg <= trunc_ln222_reg_2895_pp0_iter18_reg;
                trunc_ln222_reg_2895_pp0_iter1_reg <= trunc_ln222_reg_2895;
                trunc_ln222_reg_2895_pp0_iter20_reg <= trunc_ln222_reg_2895_pp0_iter19_reg;
                trunc_ln222_reg_2895_pp0_iter21_reg <= trunc_ln222_reg_2895_pp0_iter20_reg;
                trunc_ln222_reg_2895_pp0_iter22_reg <= trunc_ln222_reg_2895_pp0_iter21_reg;
                trunc_ln222_reg_2895_pp0_iter23_reg <= trunc_ln222_reg_2895_pp0_iter22_reg;
                trunc_ln222_reg_2895_pp0_iter24_reg <= trunc_ln222_reg_2895_pp0_iter23_reg;
                trunc_ln222_reg_2895_pp0_iter25_reg <= trunc_ln222_reg_2895_pp0_iter24_reg;
                trunc_ln222_reg_2895_pp0_iter26_reg <= trunc_ln222_reg_2895_pp0_iter25_reg;
                trunc_ln222_reg_2895_pp0_iter27_reg <= trunc_ln222_reg_2895_pp0_iter26_reg;
                trunc_ln222_reg_2895_pp0_iter28_reg <= trunc_ln222_reg_2895_pp0_iter27_reg;
                trunc_ln222_reg_2895_pp0_iter29_reg <= trunc_ln222_reg_2895_pp0_iter28_reg;
                trunc_ln222_reg_2895_pp0_iter2_reg <= trunc_ln222_reg_2895_pp0_iter1_reg;
                trunc_ln222_reg_2895_pp0_iter30_reg <= trunc_ln222_reg_2895_pp0_iter29_reg;
                trunc_ln222_reg_2895_pp0_iter31_reg <= trunc_ln222_reg_2895_pp0_iter30_reg;
                trunc_ln222_reg_2895_pp0_iter32_reg <= trunc_ln222_reg_2895_pp0_iter31_reg;
                trunc_ln222_reg_2895_pp0_iter33_reg <= trunc_ln222_reg_2895_pp0_iter32_reg;
                trunc_ln222_reg_2895_pp0_iter34_reg <= trunc_ln222_reg_2895_pp0_iter33_reg;
                trunc_ln222_reg_2895_pp0_iter35_reg <= trunc_ln222_reg_2895_pp0_iter34_reg;
                trunc_ln222_reg_2895_pp0_iter36_reg <= trunc_ln222_reg_2895_pp0_iter35_reg;
                trunc_ln222_reg_2895_pp0_iter3_reg <= trunc_ln222_reg_2895_pp0_iter2_reg;
                trunc_ln222_reg_2895_pp0_iter4_reg <= trunc_ln222_reg_2895_pp0_iter3_reg;
                trunc_ln222_reg_2895_pp0_iter5_reg <= trunc_ln222_reg_2895_pp0_iter4_reg;
                trunc_ln222_reg_2895_pp0_iter6_reg <= trunc_ln222_reg_2895_pp0_iter5_reg;
                trunc_ln222_reg_2895_pp0_iter7_reg <= trunc_ln222_reg_2895_pp0_iter6_reg;
                trunc_ln222_reg_2895_pp0_iter8_reg <= trunc_ln222_reg_2895_pp0_iter7_reg;
                trunc_ln222_reg_2895_pp0_iter9_reg <= trunc_ln222_reg_2895_pp0_iter8_reg;
                trunc_ln819_3_reg_2901_pp0_iter10_reg <= trunc_ln819_3_reg_2901_pp0_iter9_reg;
                trunc_ln819_3_reg_2901_pp0_iter11_reg <= trunc_ln819_3_reg_2901_pp0_iter10_reg;
                trunc_ln819_3_reg_2901_pp0_iter12_reg <= trunc_ln819_3_reg_2901_pp0_iter11_reg;
                trunc_ln819_3_reg_2901_pp0_iter13_reg <= trunc_ln819_3_reg_2901_pp0_iter12_reg;
                trunc_ln819_3_reg_2901_pp0_iter14_reg <= trunc_ln819_3_reg_2901_pp0_iter13_reg;
                trunc_ln819_3_reg_2901_pp0_iter15_reg <= trunc_ln819_3_reg_2901_pp0_iter14_reg;
                trunc_ln819_3_reg_2901_pp0_iter16_reg <= trunc_ln819_3_reg_2901_pp0_iter15_reg;
                trunc_ln819_3_reg_2901_pp0_iter17_reg <= trunc_ln819_3_reg_2901_pp0_iter16_reg;
                trunc_ln819_3_reg_2901_pp0_iter18_reg <= trunc_ln819_3_reg_2901_pp0_iter17_reg;
                trunc_ln819_3_reg_2901_pp0_iter19_reg <= trunc_ln819_3_reg_2901_pp0_iter18_reg;
                trunc_ln819_3_reg_2901_pp0_iter1_reg <= trunc_ln819_3_reg_2901;
                trunc_ln819_3_reg_2901_pp0_iter20_reg <= trunc_ln819_3_reg_2901_pp0_iter19_reg;
                trunc_ln819_3_reg_2901_pp0_iter21_reg <= trunc_ln819_3_reg_2901_pp0_iter20_reg;
                trunc_ln819_3_reg_2901_pp0_iter22_reg <= trunc_ln819_3_reg_2901_pp0_iter21_reg;
                trunc_ln819_3_reg_2901_pp0_iter23_reg <= trunc_ln819_3_reg_2901_pp0_iter22_reg;
                trunc_ln819_3_reg_2901_pp0_iter24_reg <= trunc_ln819_3_reg_2901_pp0_iter23_reg;
                trunc_ln819_3_reg_2901_pp0_iter25_reg <= trunc_ln819_3_reg_2901_pp0_iter24_reg;
                trunc_ln819_3_reg_2901_pp0_iter26_reg <= trunc_ln819_3_reg_2901_pp0_iter25_reg;
                trunc_ln819_3_reg_2901_pp0_iter27_reg <= trunc_ln819_3_reg_2901_pp0_iter26_reg;
                trunc_ln819_3_reg_2901_pp0_iter28_reg <= trunc_ln819_3_reg_2901_pp0_iter27_reg;
                trunc_ln819_3_reg_2901_pp0_iter29_reg <= trunc_ln819_3_reg_2901_pp0_iter28_reg;
                trunc_ln819_3_reg_2901_pp0_iter2_reg <= trunc_ln819_3_reg_2901_pp0_iter1_reg;
                trunc_ln819_3_reg_2901_pp0_iter30_reg <= trunc_ln819_3_reg_2901_pp0_iter29_reg;
                trunc_ln819_3_reg_2901_pp0_iter31_reg <= trunc_ln819_3_reg_2901_pp0_iter30_reg;
                trunc_ln819_3_reg_2901_pp0_iter32_reg <= trunc_ln819_3_reg_2901_pp0_iter31_reg;
                trunc_ln819_3_reg_2901_pp0_iter33_reg <= trunc_ln819_3_reg_2901_pp0_iter32_reg;
                trunc_ln819_3_reg_2901_pp0_iter34_reg <= trunc_ln819_3_reg_2901_pp0_iter33_reg;
                trunc_ln819_3_reg_2901_pp0_iter35_reg <= trunc_ln819_3_reg_2901_pp0_iter34_reg;
                trunc_ln819_3_reg_2901_pp0_iter36_reg <= trunc_ln819_3_reg_2901_pp0_iter35_reg;
                trunc_ln819_3_reg_2901_pp0_iter3_reg <= trunc_ln819_3_reg_2901_pp0_iter2_reg;
                trunc_ln819_3_reg_2901_pp0_iter4_reg <= trunc_ln819_3_reg_2901_pp0_iter3_reg;
                trunc_ln819_3_reg_2901_pp0_iter5_reg <= trunc_ln819_3_reg_2901_pp0_iter4_reg;
                trunc_ln819_3_reg_2901_pp0_iter6_reg <= trunc_ln819_3_reg_2901_pp0_iter5_reg;
                trunc_ln819_3_reg_2901_pp0_iter7_reg <= trunc_ln819_3_reg_2901_pp0_iter6_reg;
                trunc_ln819_3_reg_2901_pp0_iter8_reg <= trunc_ln819_3_reg_2901_pp0_iter7_reg;
                trunc_ln819_3_reg_2901_pp0_iter9_reg <= trunc_ln819_3_reg_2901_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln214_fu_1770_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                iSpin_1_reg_2889 <= iSpin_1_fu_1803_p1;
                lshr_ln1_reg_2907 <= Ofst_fu_1798_p2(11 downto 8);
                trunc_ln222_reg_2895 <= trunc_ln222_fu_1825_p1;
                trunc_ln228_3_reg_2912 <= add_ln228_fu_1937_p2(63 downto 6);
                trunc_ln229_2_reg_2917 <= add_ln229_1_fu_1969_p2(63 downto 6);
                trunc_ln819_3_reg_2901 <= Ofst_fu_1798_p2(7 downto 4);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter36_stage0, ap_idle_pp0_0to35, ap_idle_pp0_1to37, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to35 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter36_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to37 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    Ofst_fu_1798_p2 <= std_logic_vector(unsigned(trunc_ln8) - unsigned(t_2_cast_fu_1794_p1));
    add_ln214_fu_1776_p2 <= std_logic_vector(unsigned(t_fu_344) + unsigned(ap_const_lv3_1));
    add_ln228_1_fu_2037_p2 <= std_logic_vector(unsigned(trunc_ln228_2_fu_2030_p3) + unsigned(trunc_ln4));
    add_ln228_fu_1937_p2 <= std_logic_vector(unsigned(zext_ln228_fu_1933_p1) + unsigned(h));
    add_ln229_1_fu_1969_p2 <= std_logic_vector(unsigned(add_ln229_fu_1964_p2) + unsigned(zext_ln229_fu_1960_p1));
    add_ln229_2_fu_2042_p2 <= std_logic_vector(unsigned(trunc_ln5) + unsigned(trunc_ln228_2_fu_2030_p3));
    add_ln229_fu_1964_p2 <= std_logic_vector(unsigned(zext_ln228_fu_1933_p1) + unsigned(logRand));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter36, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage0_01001 <= ((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, m_axi_gmem_RVALID, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage1_11001 <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter36, m_axi_gmem_ARREADY, m_axi_gmem_RVALID)
    begin
                ap_block_pp0_stage1_subdone <= (((m_axi_gmem_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (m_axi_gmem_ARREADY = ap_const_logic_0)));
    end process;

        ap_block_state10_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_ARREADY, icmp_ln214_reg_2885)
    begin
                ap_block_state3_io <= ((icmp_ln214_reg_2885 = ap_const_lv1_0) and (m_axi_gmem_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage1_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage1_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage1_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage1_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage1_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage1_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage1_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage1_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage1_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage1_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage1_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage1_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage1_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state73_pp0_stage0_iter36_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state73_pp0_stage0_iter36 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;


    ap_block_state74_pp0_stage1_iter36_assign_proc : process(m_axi_gmem_RVALID)
    begin
                ap_block_state74_pp0_stage1_iter36 <= (m_axi_gmem_RVALID = ap_const_logic_0);
    end process;

        ap_block_state75_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1976_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln214_reg_2885, ap_block_pp0_stage0_11001)
    begin
                ap_condition_1976 <= ((icmp_ln214_reg_2885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln214_fu_1770_p2)
    begin
        if (((icmp_ln214_fu_1770_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter36_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter36, icmp_ln214_reg_2885_pp0_iter35_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter36_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter36_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter36_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter36_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to35_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_0to35 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to35 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to37_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_1to37 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to37 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    dH_0_1_out <= dH_1_fu_412;

    dH_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            dH_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            dH_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    dH_1_1_out <= dH_1_1_fu_416;

    dH_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            dH_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            dH_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    dH_1_5_fu_2134_p1 <= trunc_ln228_fu_2130_p1;
    dH_2_1_out <= dH_1_2_fu_420;

    dH_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            dH_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            dH_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    dH_3_1_out <= dH_1_3_fu_424;

    dH_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            dH_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            dH_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    downSpin_V_0_1_out <= downSpin_V_1_fu_396;

    downSpin_V_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            downSpin_V_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            downSpin_V_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    downSpin_V_1_1_out <= downSpin_V_1_1_fu_400;

    downSpin_V_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            downSpin_V_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            downSpin_V_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    downSpin_V_1_5_fu_2513_p3 <= p_Val2_16_fu_2379_p66(to_integer(unsigned(zext_ln819_17_fu_2320_p1)) downto to_integer(unsigned(zext_ln819_17_fu_2320_p1))) when (to_integer(unsigned(zext_ln819_17_fu_2320_p1))>= 0 and to_integer(unsigned(zext_ln819_17_fu_2320_p1))<=15) else "-";
    downSpin_V_2_1_out <= downSpin_V_1_2_fu_404;

    downSpin_V_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            downSpin_V_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            downSpin_V_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    downSpin_V_3_1_out <= downSpin_V_1_3_fu_408;

    downSpin_V_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            downSpin_V_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            downSpin_V_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, m_axi_gmem_ARREADY, ap_block_pp0_stage1, ap_block_pp0_stage0, icmp_ln214_reg_2885)
    begin
        if ((((icmp_ln214_reg_2885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, m_axi_gmem_RVALID, ap_block_pp0_stage1, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    iPack_0_1_out <= iPack_0_1_fu_348;

    iPack_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iPack_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            iPack_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iPack_0_fu_1807_p4 <= Ofst_fu_1798_p2(11 downto 4);
    iPack_1_1_out <= iPack_1_1_fu_352;

    iPack_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iPack_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            iPack_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iPack_2_1_out <= iPack_2_1_fu_356;

    iPack_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iPack_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            iPack_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iPack_3_1_out <= iPack_3_1_fu_360;

    iPack_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iPack_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            iPack_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iSpin_0_1_out <= iSpin_0_1_fu_364;

    iSpin_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iSpin_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            iSpin_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iSpin_1_1_out <= iSpin_1_1_fu_368;

    iSpin_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iSpin_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            iSpin_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iSpin_1_fu_1803_p1 <= Ofst_fu_1798_p2(4 - 1 downto 0);
    iSpin_2_1_out <= iSpin_2_1_fu_372;

    iSpin_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iSpin_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            iSpin_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    iSpin_3_1_out <= iSpin_3_1_fu_376;

    iSpin_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            iSpin_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            iSpin_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln214_fu_1770_p2 <= "1" when (t_fu_344 = ap_const_lv3_4) else "0";
    logRandLocal_0_1_out <= logRandLocal_1_fu_428;

    logRandLocal_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            logRandLocal_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            logRandLocal_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    logRandLocal_1_1_out <= logRandLocal_1_1_fu_432;

    logRandLocal_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            logRandLocal_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            logRandLocal_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    logRandLocal_1_5_fu_2561_p1 <= trunc_ln229_fu_2557_p1;
    logRandLocal_2_1_out <= logRandLocal_1_2_fu_436;

    logRandLocal_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            logRandLocal_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            logRandLocal_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    logRandLocal_3_1_out <= logRandLocal_1_3_fu_440;

    logRandLocal_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            logRandLocal_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            logRandLocal_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln228_fu_2125_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_read_reg_2934),to_integer(unsigned('0' & zext_ln228_1_fu_2121_p1(31-1 downto 0)))));
    lshr_ln229_fu_2552_p2 <= std_logic_vector(shift_right(unsigned(gmem_addr_1_read_reg_3269),to_integer(unsigned('0' & zext_ln229_1_fu_2548_p1(31-1 downto 0)))));

    m_axi_gmem_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, sext_ln228_fu_2010_p1, sext_ln229_fu_2020_p1, ap_condition_1976)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                m_axi_gmem_ARADDR <= sext_ln229_fu_2020_p1;
            elsif ((ap_const_boolean_1 = ap_condition_1976)) then 
                m_axi_gmem_ARADDR <= sext_ln228_fu_2010_p1;
            else 
                m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_1;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln214_reg_2885, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((icmp_ln214_reg_2885 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    p_Val2_16_fu_2379_p65 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_2368_p3),7));
    p_Val2_s_fu_2186_p65 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_2175_p3),7));
        sext_ln228_fu_2010_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln228_3_reg_2912),64));

        sext_ln229_fu_2020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln229_2_reg_2917),64));

    shl_ln1_fu_1925_p3 <= (Ofst_fu_1798_p2 & ap_const_lv2_0);
    shl_ln228_1_fu_2114_p3 <= (add_ln228_1_reg_2939 & ap_const_lv3_0);
    shl_ln229_1_fu_1952_p3 <= (trunc_ln222_fu_1825_p1 & ap_const_lv14_0);
    shl_ln2_fu_2541_p3 <= (add_ln229_2_reg_2944 & ap_const_lv3_0);
    t_2_cast_fu_1794_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_fu_344),12));
    tmp_2_fu_2175_p3 <= (trunc_ln819_fu_2171_p1 & trunc_ln819_3_reg_2901_pp0_iter36_reg);
    tmp_3_fu_2368_p3 <= (trunc_ln819_2_fu_2364_p1 & trunc_ln819_3_reg_2901_pp0_iter36_reg);
    trottersLocal_V_0_0_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_10_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_11_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_12_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_13_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_14_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_15_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_1_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_2_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_3_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_4_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_5_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_6_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_7_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_8_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_9_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_0_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_0_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_0_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_10_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_11_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_12_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_13_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_14_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_15_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_1_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_2_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_3_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_4_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_5_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_6_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_7_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_8_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_9_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_1_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_1_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_0_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_10_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_11_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_12_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_13_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_14_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_15_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_1_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_2_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_3_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_4_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_5_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_6_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_7_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_8_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_9_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_2_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_2_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_0_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_10_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_11_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_12_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_13_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_14_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_15_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_1_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_2_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_3_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_4_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_5_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_6_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_7_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_8_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_9_address0 <= zext_ln819_fu_2047_p1(4 - 1 downto 0);

    trottersLocal_V_3_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter36, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter36 = ap_const_logic_1))) then 
            trottersLocal_V_3_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln222_fu_1825_p1 <= t_fu_344(2 - 1 downto 0);
    trunc_ln228_2_fu_2030_p3 <= (iSpin_1_reg_2889_pp0_iter35_reg & ap_const_lv2_0);
    trunc_ln228_fu_2130_p1 <= lshr_ln228_fu_2125_p2(32 - 1 downto 0);
    trunc_ln229_fu_2557_p1 <= lshr_ln229_fu_2552_p2(32 - 1 downto 0);
    trunc_ln819_2_fu_2364_p1 <= tmp_15_fu_2351_p6(2 - 1 downto 0);
    trunc_ln819_fu_2171_p1 <= tmp_s_fu_2158_p6(2 - 1 downto 0);
    upSpin_V_0_1_out <= upSpin_V_1_fu_380;

    upSpin_V_0_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            upSpin_V_0_1_out_ap_vld <= ap_const_logic_1;
        else 
            upSpin_V_0_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    upSpin_V_1_1_out <= upSpin_V_1_1_fu_384;

    upSpin_V_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            upSpin_V_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            upSpin_V_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    upSpin_V_1_5_fu_2323_p3 <= p_Val2_s_fu_2186_p66(to_integer(unsigned(zext_ln819_17_fu_2320_p1)) downto to_integer(unsigned(zext_ln819_17_fu_2320_p1))) when (to_integer(unsigned(zext_ln819_17_fu_2320_p1))>= 0 and to_integer(unsigned(zext_ln819_17_fu_2320_p1))<=15) else "-";
    upSpin_V_2_1_out <= upSpin_V_1_2_fu_388;

    upSpin_V_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            upSpin_V_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            upSpin_V_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    upSpin_V_3_1_out <= upSpin_V_1_3_fu_392;

    upSpin_V_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln214_reg_2885_pp0_iter35_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln214_reg_2885_pp0_iter35_reg = ap_const_lv1_1))) then 
            upSpin_V_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            upSpin_V_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln222_fu_1817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iPack_0_fu_1807_p4),32));
    zext_ln223_fu_1821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iSpin_1_fu_1803_p1),32));
    zext_ln228_1_fu_2121_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln228_1_fu_2114_p3),512));
    zext_ln228_fu_1933_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_1925_p3),64));
    zext_ln229_1_fu_2548_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_2541_p3),512));
    zext_ln229_fu_1960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln229_1_fu_1952_p3),64));
    zext_ln819_17_fu_2320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(iSpin_1_reg_2889_pp0_iter36_reg),16));
    zext_ln819_fu_2047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_2907_pp0_iter35_reg),64));
end behav;
