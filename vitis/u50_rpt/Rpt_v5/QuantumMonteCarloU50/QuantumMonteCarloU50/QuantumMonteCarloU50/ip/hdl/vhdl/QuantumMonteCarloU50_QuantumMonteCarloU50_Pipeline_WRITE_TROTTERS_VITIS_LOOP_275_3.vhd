-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_275_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln188 : IN STD_LOGIC_VECTOR (57 downto 0);
    trottersLocal_V_0_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_0_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_0_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_0_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_1_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_1_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_1_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_2_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_2_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_2_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_0_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_1_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_2_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_3_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_4_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_5_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_6_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_7_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_8_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_8_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_9_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_9_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_10_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_10_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_11_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_11_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_12_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_12_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_13_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_13_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_14_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_14_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    trottersLocal_V_3_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    trottersLocal_V_3_15_ce0 : OUT STD_LOGIC;
    trottersLocal_V_3_15_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_275_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv496_lc_1 : STD_LOGIC_VECTOR (495 downto
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111101111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln277_reg_1831 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_reg_1831_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln274_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln274_reg_1492 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln275_fu_1117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln275_reg_1496 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln274_fu_1145_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln274_reg_1501 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln277_fu_1153_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln277_reg_1506 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln277_fu_1235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_1421_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal or_ln_reg_1841 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal zext_ln277_fu_1167_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal phi_ln277_fu_210 : STD_LOGIC_VECTOR (495 downto 0);
    signal select_ln277_fu_1447_p3 : STD_LOGIC_VECTOR (495 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal packOfst_fu_214 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_allocacmp_packOfst_load : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln275_fu_1241_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_fu_218 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_sig_allocacmp_t_load : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln274_2_fu_1137_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten7_fu_222 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_sig_allocacmp_indvar_flatten7_load : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln274_fu_1105_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln274_1_fu_1131_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln274_fu_1123_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln_fu_1157_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln275_fu_1149_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_1_fu_1277_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_1287_p65 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1287_p66 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln274_1_fu_1270_p3 : STD_LOGIC_VECTOR (495 downto 0);
    signal tmp_4_fu_1429_p4 : STD_LOGIC_VECTOR (479 downto 0);
    signal tmp_5_fu_1439_p3 : STD_LOGIC_VECTOR (495 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component QuantumMonteCarloU50_mux_647_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        din3 : IN STD_LOGIC_VECTOR (15 downto 0);
        din4 : IN STD_LOGIC_VECTOR (15 downto 0);
        din5 : IN STD_LOGIC_VECTOR (15 downto 0);
        din6 : IN STD_LOGIC_VECTOR (15 downto 0);
        din7 : IN STD_LOGIC_VECTOR (15 downto 0);
        din8 : IN STD_LOGIC_VECTOR (15 downto 0);
        din9 : IN STD_LOGIC_VECTOR (15 downto 0);
        din10 : IN STD_LOGIC_VECTOR (15 downto 0);
        din11 : IN STD_LOGIC_VECTOR (15 downto 0);
        din12 : IN STD_LOGIC_VECTOR (15 downto 0);
        din13 : IN STD_LOGIC_VECTOR (15 downto 0);
        din14 : IN STD_LOGIC_VECTOR (15 downto 0);
        din15 : IN STD_LOGIC_VECTOR (15 downto 0);
        din16 : IN STD_LOGIC_VECTOR (15 downto 0);
        din17 : IN STD_LOGIC_VECTOR (15 downto 0);
        din18 : IN STD_LOGIC_VECTOR (15 downto 0);
        din19 : IN STD_LOGIC_VECTOR (15 downto 0);
        din20 : IN STD_LOGIC_VECTOR (15 downto 0);
        din21 : IN STD_LOGIC_VECTOR (15 downto 0);
        din22 : IN STD_LOGIC_VECTOR (15 downto 0);
        din23 : IN STD_LOGIC_VECTOR (15 downto 0);
        din24 : IN STD_LOGIC_VECTOR (15 downto 0);
        din25 : IN STD_LOGIC_VECTOR (15 downto 0);
        din26 : IN STD_LOGIC_VECTOR (15 downto 0);
        din27 : IN STD_LOGIC_VECTOR (15 downto 0);
        din28 : IN STD_LOGIC_VECTOR (15 downto 0);
        din29 : IN STD_LOGIC_VECTOR (15 downto 0);
        din30 : IN STD_LOGIC_VECTOR (15 downto 0);
        din31 : IN STD_LOGIC_VECTOR (15 downto 0);
        din32 : IN STD_LOGIC_VECTOR (15 downto 0);
        din33 : IN STD_LOGIC_VECTOR (15 downto 0);
        din34 : IN STD_LOGIC_VECTOR (15 downto 0);
        din35 : IN STD_LOGIC_VECTOR (15 downto 0);
        din36 : IN STD_LOGIC_VECTOR (15 downto 0);
        din37 : IN STD_LOGIC_VECTOR (15 downto 0);
        din38 : IN STD_LOGIC_VECTOR (15 downto 0);
        din39 : IN STD_LOGIC_VECTOR (15 downto 0);
        din40 : IN STD_LOGIC_VECTOR (15 downto 0);
        din41 : IN STD_LOGIC_VECTOR (15 downto 0);
        din42 : IN STD_LOGIC_VECTOR (15 downto 0);
        din43 : IN STD_LOGIC_VECTOR (15 downto 0);
        din44 : IN STD_LOGIC_VECTOR (15 downto 0);
        din45 : IN STD_LOGIC_VECTOR (15 downto 0);
        din46 : IN STD_LOGIC_VECTOR (15 downto 0);
        din47 : IN STD_LOGIC_VECTOR (15 downto 0);
        din48 : IN STD_LOGIC_VECTOR (15 downto 0);
        din49 : IN STD_LOGIC_VECTOR (15 downto 0);
        din50 : IN STD_LOGIC_VECTOR (15 downto 0);
        din51 : IN STD_LOGIC_VECTOR (15 downto 0);
        din52 : IN STD_LOGIC_VECTOR (15 downto 0);
        din53 : IN STD_LOGIC_VECTOR (15 downto 0);
        din54 : IN STD_LOGIC_VECTOR (15 downto 0);
        din55 : IN STD_LOGIC_VECTOR (15 downto 0);
        din56 : IN STD_LOGIC_VECTOR (15 downto 0);
        din57 : IN STD_LOGIC_VECTOR (15 downto 0);
        din58 : IN STD_LOGIC_VECTOR (15 downto 0);
        din59 : IN STD_LOGIC_VECTOR (15 downto 0);
        din60 : IN STD_LOGIC_VECTOR (15 downto 0);
        din61 : IN STD_LOGIC_VECTOR (15 downto 0);
        din62 : IN STD_LOGIC_VECTOR (15 downto 0);
        din63 : IN STD_LOGIC_VECTOR (15 downto 0);
        din64 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_647_16_1_1_U588 : component QuantumMonteCarloU50_mux_647_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        din3_WIDTH => 16,
        din4_WIDTH => 16,
        din5_WIDTH => 16,
        din6_WIDTH => 16,
        din7_WIDTH => 16,
        din8_WIDTH => 16,
        din9_WIDTH => 16,
        din10_WIDTH => 16,
        din11_WIDTH => 16,
        din12_WIDTH => 16,
        din13_WIDTH => 16,
        din14_WIDTH => 16,
        din15_WIDTH => 16,
        din16_WIDTH => 16,
        din17_WIDTH => 16,
        din18_WIDTH => 16,
        din19_WIDTH => 16,
        din20_WIDTH => 16,
        din21_WIDTH => 16,
        din22_WIDTH => 16,
        din23_WIDTH => 16,
        din24_WIDTH => 16,
        din25_WIDTH => 16,
        din26_WIDTH => 16,
        din27_WIDTH => 16,
        din28_WIDTH => 16,
        din29_WIDTH => 16,
        din30_WIDTH => 16,
        din31_WIDTH => 16,
        din32_WIDTH => 16,
        din33_WIDTH => 16,
        din34_WIDTH => 16,
        din35_WIDTH => 16,
        din36_WIDTH => 16,
        din37_WIDTH => 16,
        din38_WIDTH => 16,
        din39_WIDTH => 16,
        din40_WIDTH => 16,
        din41_WIDTH => 16,
        din42_WIDTH => 16,
        din43_WIDTH => 16,
        din44_WIDTH => 16,
        din45_WIDTH => 16,
        din46_WIDTH => 16,
        din47_WIDTH => 16,
        din48_WIDTH => 16,
        din49_WIDTH => 16,
        din50_WIDTH => 16,
        din51_WIDTH => 16,
        din52_WIDTH => 16,
        din53_WIDTH => 16,
        din54_WIDTH => 16,
        din55_WIDTH => 16,
        din56_WIDTH => 16,
        din57_WIDTH => 16,
        din58_WIDTH => 16,
        din59_WIDTH => 16,
        din60_WIDTH => 16,
        din61_WIDTH => 16,
        din62_WIDTH => 16,
        din63_WIDTH => 16,
        din64_WIDTH => 7,
        dout_WIDTH => 16)
    port map (
        din0 => trottersLocal_V_0_0_q0,
        din1 => trottersLocal_V_0_1_q0,
        din2 => trottersLocal_V_0_2_q0,
        din3 => trottersLocal_V_0_3_q0,
        din4 => trottersLocal_V_0_4_q0,
        din5 => trottersLocal_V_0_5_q0,
        din6 => trottersLocal_V_0_6_q0,
        din7 => trottersLocal_V_0_7_q0,
        din8 => trottersLocal_V_0_8_q0,
        din9 => trottersLocal_V_0_9_q0,
        din10 => trottersLocal_V_0_10_q0,
        din11 => trottersLocal_V_0_11_q0,
        din12 => trottersLocal_V_0_12_q0,
        din13 => trottersLocal_V_0_13_q0,
        din14 => trottersLocal_V_0_14_q0,
        din15 => trottersLocal_V_0_15_q0,
        din16 => trottersLocal_V_1_0_q0,
        din17 => trottersLocal_V_1_1_q0,
        din18 => trottersLocal_V_1_2_q0,
        din19 => trottersLocal_V_1_3_q0,
        din20 => trottersLocal_V_1_4_q0,
        din21 => trottersLocal_V_1_5_q0,
        din22 => trottersLocal_V_1_6_q0,
        din23 => trottersLocal_V_1_7_q0,
        din24 => trottersLocal_V_1_8_q0,
        din25 => trottersLocal_V_1_9_q0,
        din26 => trottersLocal_V_1_10_q0,
        din27 => trottersLocal_V_1_11_q0,
        din28 => trottersLocal_V_1_12_q0,
        din29 => trottersLocal_V_1_13_q0,
        din30 => trottersLocal_V_1_14_q0,
        din31 => trottersLocal_V_1_15_q0,
        din32 => trottersLocal_V_2_0_q0,
        din33 => trottersLocal_V_2_1_q0,
        din34 => trottersLocal_V_2_2_q0,
        din35 => trottersLocal_V_2_3_q0,
        din36 => trottersLocal_V_2_4_q0,
        din37 => trottersLocal_V_2_5_q0,
        din38 => trottersLocal_V_2_6_q0,
        din39 => trottersLocal_V_2_7_q0,
        din40 => trottersLocal_V_2_8_q0,
        din41 => trottersLocal_V_2_9_q0,
        din42 => trottersLocal_V_2_10_q0,
        din43 => trottersLocal_V_2_11_q0,
        din44 => trottersLocal_V_2_12_q0,
        din45 => trottersLocal_V_2_13_q0,
        din46 => trottersLocal_V_2_14_q0,
        din47 => trottersLocal_V_2_15_q0,
        din48 => trottersLocal_V_3_0_q0,
        din49 => trottersLocal_V_3_1_q0,
        din50 => trottersLocal_V_3_2_q0,
        din51 => trottersLocal_V_3_3_q0,
        din52 => trottersLocal_V_3_4_q0,
        din53 => trottersLocal_V_3_5_q0,
        din54 => trottersLocal_V_3_6_q0,
        din55 => trottersLocal_V_3_7_q0,
        din56 => trottersLocal_V_3_8_q0,
        din57 => trottersLocal_V_3_9_q0,
        din58 => trottersLocal_V_3_10_q0,
        din59 => trottersLocal_V_3_11_q0,
        din60 => trottersLocal_V_3_12_q0,
        din61 => trottersLocal_V_3_13_q0,
        din62 => trottersLocal_V_3_14_q0,
        din63 => trottersLocal_V_3_15_q0,
        din64 => tmp_s_fu_1287_p65,
        dout => tmp_s_fu_1287_p66);

    flow_control_loop_pipe_sequential_init_U : component QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten7_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln274_fu_1099_p2 = ap_const_lv1_0))) then 
                    indvar_flatten7_fu_222 <= add_ln274_fu_1105_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten7_fu_222 <= ap_const_lv11_0;
                end if;
            end if; 
        end if;
    end process;

    packOfst_fu_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln274_fu_1099_p2 = ap_const_lv1_0))) then 
                    packOfst_fu_214 <= add_ln275_fu_1241_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    packOfst_fu_214 <= ap_const_lv9_0;
                end if;
            end if; 
        end if;
    end process;

    phi_ln277_fu_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    phi_ln277_fu_210 <= ap_const_lv496_lc_1;
                elsif (((icmp_ln274_reg_1492 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    phi_ln277_fu_210 <= select_ln277_fu_1447_p3;
                end if;
            end if; 
        end if;
    end process;

    t_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln274_fu_1099_p2 = ap_const_lv1_0))) then 
                    t_fu_218 <= select_ln274_2_fu_1137_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    t_fu_218 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln274_reg_1492 <= icmp_ln274_fu_1099_p2;
                icmp_ln277_reg_1831_pp0_iter1_reg <= icmp_ln277_reg_1831;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln274_fu_1099_p2 = ap_const_lv1_0))) then
                icmp_ln275_reg_1496 <= icmp_ln275_fu_1117_p2;
                icmp_ln277_reg_1831 <= icmp_ln277_fu_1235_p2;
                trunc_ln274_reg_1501 <= trunc_ln274_fu_1145_p1;
                trunc_ln277_reg_1506 <= trunc_ln277_fu_1153_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln274_reg_1492 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln_reg_1841 <= or_ln_fu_1421_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln274_1_fu_1131_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_t_load) + unsigned(ap_const_lv3_1));
    add_ln274_fu_1105_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten7_load) + unsigned(ap_const_lv11_1));
    add_ln275_fu_1241_p2 <= std_logic_vector(unsigned(select_ln274_fu_1123_p3) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(m_axi_gmem_WREADY, icmp_ln277_reg_1831_pp0_iter1_reg)
    begin
                ap_block_state3_io <= ((icmp_ln277_reg_1831_pp0_iter1_reg = ap_const_lv1_1) and (m_axi_gmem_WREADY = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln274_fu_1099_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln274_fu_1099_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln274_reg_1492)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln274_reg_1492 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten7_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten7_fu_222)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten7_load <= ap_const_lv11_0;
        else 
            ap_sig_allocacmp_indvar_flatten7_load <= indvar_flatten7_fu_222;
        end if; 
    end process;


    ap_sig_allocacmp_packOfst_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, packOfst_fu_214)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_packOfst_load <= ap_const_lv9_0;
        else 
            ap_sig_allocacmp_packOfst_load <= packOfst_fu_214;
        end if; 
    end process;


    ap_sig_allocacmp_t_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, t_fu_218)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_t_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_t_load <= t_fu_218;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(ap_enable_reg_pp0_iter2, m_axi_gmem_WREADY, icmp_ln277_reg_1831_pp0_iter1_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln277_reg_1831_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            gmem_blk_n_W <= m_axi_gmem_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln274_fu_1099_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten7_load = ap_const_lv11_400) else "0";
    icmp_ln275_fu_1117_p2 <= "1" when (ap_sig_allocacmp_packOfst_load = ap_const_lv9_100) else "0";
    icmp_ln277_fu_1235_p2 <= "1" when (trunc_ln275_fu_1149_p1 = ap_const_lv5_1F) else "0";
    lshr_ln_fu_1157_p4 <= select_ln274_fu_1123_p3(7 downto 4);
    m_axi_gmem_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_ARVALID <= ap_const_logic_0;
    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;
    m_axi_gmem_RREADY <= ap_const_logic_0;
    m_axi_gmem_WDATA <= or_ln_reg_1841;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_FFFFFFFFFFFFFFFF;
    m_axi_gmem_WUSER <= ap_const_lv1_0;

    m_axi_gmem_WVALID_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln277_reg_1831_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln277_reg_1831_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            m_axi_gmem_WVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln_fu_1421_p3 <= (tmp_s_fu_1287_p66 & select_ln274_1_fu_1270_p3);
    select_ln274_1_fu_1270_p3 <= 
        ap_const_lv496_lc_1 when (icmp_ln275_reg_1496(0) = '1') else 
        phi_ln277_fu_210;
    select_ln274_2_fu_1137_p3 <= 
        add_ln274_1_fu_1131_p2 when (icmp_ln275_fu_1117_p2(0) = '1') else 
        ap_sig_allocacmp_t_load;
    select_ln274_fu_1123_p3 <= 
        ap_const_lv9_0 when (icmp_ln275_fu_1117_p2(0) = '1') else 
        ap_sig_allocacmp_packOfst_load;
    select_ln277_fu_1447_p3 <= 
        ap_const_lv496_lc_1 when (icmp_ln277_reg_1831(0) = '1') else 
        tmp_5_fu_1439_p3;
    tmp_1_fu_1277_p3 <= (trunc_ln274_reg_1501 & trunc_ln277_reg_1506);
    tmp_4_fu_1429_p4 <= select_ln274_1_fu_1270_p3(495 downto 16);
    tmp_5_fu_1439_p3 <= (tmp_s_fu_1287_p66 & tmp_4_fu_1429_p4);
    tmp_s_fu_1287_p65 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1277_p3),7));
    trottersLocal_V_0_0_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_10_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_11_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_12_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_13_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_14_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_15_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_1_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_2_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_3_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_4_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_5_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_6_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_7_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_8_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_0_9_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_0_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_0_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_0_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_10_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_11_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_12_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_13_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_14_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_15_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_1_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_2_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_3_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_4_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_5_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_6_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_7_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_8_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_1_9_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_1_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_1_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_0_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_10_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_11_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_12_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_13_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_14_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_15_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_1_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_2_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_3_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_4_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_5_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_6_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_7_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_8_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_2_9_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_2_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_2_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_0_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_0_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_10_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_10_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_11_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_11_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_12_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_12_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_13_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_13_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_14_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_14_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_15_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_15_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_1_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_1_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_2_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_2_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_3_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_3_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_4_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_4_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_5_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_5_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_6_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_6_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_7_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_7_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_8_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_8_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trottersLocal_V_3_9_address0 <= zext_ln277_fu_1167_p1(4 - 1 downto 0);

    trottersLocal_V_3_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            trottersLocal_V_3_9_ce0 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln274_fu_1145_p1 <= select_ln274_2_fu_1137_p3(2 - 1 downto 0);
    trunc_ln275_fu_1149_p1 <= select_ln274_fu_1123_p3(5 - 1 downto 0);
    trunc_ln277_fu_1153_p1 <= select_ln274_fu_1123_p3(4 - 1 downto 0);
    zext_ln277_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1157_p4),64));
end behav;
