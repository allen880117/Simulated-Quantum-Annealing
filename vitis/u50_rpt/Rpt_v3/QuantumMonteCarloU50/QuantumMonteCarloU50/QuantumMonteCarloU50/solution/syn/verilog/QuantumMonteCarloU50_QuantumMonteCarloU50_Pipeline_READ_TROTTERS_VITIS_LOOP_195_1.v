// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        sext_ln194,
        trottersLocal_V_0_address0,
        trottersLocal_V_0_ce0,
        trottersLocal_V_0_we0,
        trottersLocal_V_0_d0,
        trottersLocal_V_1_address0,
        trottersLocal_V_1_ce0,
        trottersLocal_V_1_we0,
        trottersLocal_V_1_d0,
        trottersLocal_V_2_address0,
        trottersLocal_V_2_ce0,
        trottersLocal_V_2_we0,
        trottersLocal_V_2_d0,
        trottersLocal_V_3_address0,
        trottersLocal_V_3_ce0,
        trottersLocal_V_3_we0,
        trottersLocal_V_3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [511:0] m_axi_gmem0_WDATA;
output  [63:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [511:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [57:0] sext_ln194;
output  [7:0] trottersLocal_V_0_address0;
output   trottersLocal_V_0_ce0;
output   trottersLocal_V_0_we0;
output  [15:0] trottersLocal_V_0_d0;
output  [7:0] trottersLocal_V_1_address0;
output   trottersLocal_V_1_ce0;
output   trottersLocal_V_1_we0;
output  [15:0] trottersLocal_V_1_d0;
output  [7:0] trottersLocal_V_2_address0;
output   trottersLocal_V_2_ce0;
output   trottersLocal_V_2_we0;
output  [15:0] trottersLocal_V_2_d0;
output  [7:0] trottersLocal_V_3_address0;
output   trottersLocal_V_3_ce0;
output   trottersLocal_V_3_we0;
output  [15:0] trottersLocal_V_3_d0;

reg ap_idle;
reg m_axi_gmem0_RREADY;
reg trottersLocal_V_0_ce0;
reg trottersLocal_V_0_we0;
reg trottersLocal_V_1_ce0;
reg trottersLocal_V_1_we0;
reg trottersLocal_V_2_ce0;
reg trottersLocal_V_2_we0;
reg trottersLocal_V_3_ce0;
reg trottersLocal_V_3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln194_reg_359;
reg   [0:0] icmp_ln197_reg_374;
reg    ap_predicate_op31_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln194_fu_195_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_R;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln194_reg_359_pp0_iter1_reg;
wire   [0:0] icmp_ln195_fu_210_p2;
reg   [0:0] icmp_ln195_reg_363;
reg   [0:0] icmp_ln195_reg_363_pp0_iter1_reg;
wire   [8:0] select_ln194_fu_216_p3;
reg   [8:0] select_ln194_reg_369;
reg   [8:0] select_ln194_reg_369_pp0_iter1_reg;
wire   [0:0] icmp_ln197_fu_228_p2;
reg   [0:0] icmp_ln197_reg_374_pp0_iter1_reg;
reg   [511:0] gmem0_addr_read_reg_378;
reg    ap_condition_exit_pp0_iter1_stage0;
reg   [511:0] ap_phi_mux_empty_phi_fu_162_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_reg_159;
wire   [511:0] zext_ln195_fu_286_p1;
wire   [63:0] zext_ln195_1_fu_291_p1;
reg   [495:0] shiftreg38_fu_80;
wire    ap_loop_init;
reg   [8:0] packOfst_fu_84;
reg   [8:0] ap_sig_allocacmp_packOfst_load;
wire   [8:0] add_ln195_fu_234_p2;
reg   [2:0] t_fu_88;
wire   [2:0] select_ln194_2_fu_275_p3;
reg   [10:0] indvar_flatten_fu_92;
reg   [10:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [10:0] add_ln194_fu_201_p2;
wire   [1:0] trunc_ln194_fu_282_p1;
wire   [15:0] trunc_ln197_fu_298_p1;
wire   [4:0] trunc_ln195_fu_224_p1;
wire   [2:0] add_ln194_1_fu_269_p2;
wire   [495:0] select_ln194_1_fu_262_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

QuantumMonteCarloU50_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln194_fu_195_p2 == 1'd0))) begin
            indvar_flatten_fu_92 <= add_ln194_fu_201_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_92 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln194_fu_195_p2 == 1'd0))) begin
            packOfst_fu_84 <= add_ln195_fu_234_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            packOfst_fu_84 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            shiftreg38_fu_80 <= 496'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            shiftreg38_fu_80 <= {{ap_phi_mux_empty_phi_fu_162_p4[511:16]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_88 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            t_fu_88 <= select_ln194_2_fu_275_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln194_reg_359 <= icmp_ln194_fu_195_p2;
        icmp_ln194_reg_359_pp0_iter1_reg <= icmp_ln194_reg_359;
        icmp_ln195_reg_363_pp0_iter1_reg <= icmp_ln195_reg_363;
        icmp_ln197_reg_374_pp0_iter1_reg <= icmp_ln197_reg_374;
        select_ln194_reg_369_pp0_iter1_reg <= select_ln194_reg_369;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op31_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem0_addr_read_reg_378 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln194_fu_195_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln195_reg_363 <= icmp_ln195_fu_210_p2;
        icmp_ln197_reg_374 <= icmp_ln197_fu_228_p2;
        select_ln194_reg_369 <= select_ln194_fu_216_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln194_fu_195_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln194_reg_359 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln194_reg_359_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln197_reg_374_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_phi_fu_162_p4 = zext_ln195_fu_286_p1;
        end else if ((icmp_ln197_reg_374_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_phi_fu_162_p4 = gmem0_addr_read_reg_378;
        end else begin
            ap_phi_mux_empty_phi_fu_162_p4 = ap_phi_reg_pp0_iter2_empty_reg_159;
        end
    end else begin
        ap_phi_mux_empty_phi_fu_162_p4 = ap_phi_reg_pp0_iter2_empty_reg_159;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_92;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_packOfst_load = 9'd0;
    end else begin
        ap_sig_allocacmp_packOfst_load = packOfst_fu_84;
    end
end

always @ (*) begin
    if (((ap_predicate_op31_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op31_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_0_ce0 = 1'b1;
    end else begin
        trottersLocal_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln194_fu_282_p1 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_0_we0 = 1'b1;
    end else begin
        trottersLocal_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_1_ce0 = 1'b1;
    end else begin
        trottersLocal_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln194_fu_282_p1 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_1_we0 = 1'b1;
    end else begin
        trottersLocal_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_2_ce0 = 1'b1;
    end else begin
        trottersLocal_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln194_fu_282_p1 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_2_we0 = 1'b1;
    end else begin
        trottersLocal_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_3_ce0 = 1'b1;
    end else begin
        trottersLocal_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln194_fu_282_p1 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trottersLocal_V_3_we0 = 1'b1;
    end else begin
        trottersLocal_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln194_1_fu_269_p2 = (t_fu_88 + 3'd1);

assign add_ln194_fu_201_p2 = (ap_sig_allocacmp_indvar_flatten_load + 11'd1);

assign add_ln195_fu_234_p2 = (select_ln194_fu_216_p3 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_predicate_op31_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_predicate_op31_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op31_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter2_empty_reg_159 = 'bx;

always @ (*) begin
    ap_predicate_op31_read_state2 = ((icmp_ln197_reg_374 == 1'd1) & (icmp_ln194_reg_359 == 1'd0));
end

assign icmp_ln194_fu_195_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_210_p2 = ((ap_sig_allocacmp_packOfst_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_228_p2 = ((trunc_ln195_fu_224_p1 == 5'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 512'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 64'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign select_ln194_1_fu_262_p3 = ((icmp_ln195_reg_363_pp0_iter1_reg[0:0] == 1'b1) ? 496'd0 : shiftreg38_fu_80);

assign select_ln194_2_fu_275_p3 = ((icmp_ln195_reg_363_pp0_iter1_reg[0:0] == 1'b1) ? add_ln194_1_fu_269_p2 : t_fu_88);

assign select_ln194_fu_216_p3 = ((icmp_ln195_fu_210_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_packOfst_load);

assign trottersLocal_V_0_address0 = zext_ln195_1_fu_291_p1;

assign trottersLocal_V_0_d0 = trunc_ln197_fu_298_p1;

assign trottersLocal_V_1_address0 = zext_ln195_1_fu_291_p1;

assign trottersLocal_V_1_d0 = trunc_ln197_fu_298_p1;

assign trottersLocal_V_2_address0 = zext_ln195_1_fu_291_p1;

assign trottersLocal_V_2_d0 = trunc_ln197_fu_298_p1;

assign trottersLocal_V_3_address0 = zext_ln195_1_fu_291_p1;

assign trottersLocal_V_3_d0 = trunc_ln197_fu_298_p1;

assign trunc_ln194_fu_282_p1 = select_ln194_2_fu_275_p3[1:0];

assign trunc_ln195_fu_224_p1 = select_ln194_fu_216_p3[4:0];

assign trunc_ln197_fu_298_p1 = ap_phi_mux_empty_phi_fu_162_p4[15:0];

assign zext_ln195_1_fu_291_p1 = select_ln194_reg_369_pp0_iter1_reg;

assign zext_ln195_fu_286_p1 = select_ln194_1_fu_262_p3;

endmodule //QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1
