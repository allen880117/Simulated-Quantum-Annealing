-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity QuantumMonteCarloU50 is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM2_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM2_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM2_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM3_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_DATA_WIDTH : INTEGER := 512;
    C_M_AXI_GMEM3_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM3_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM2_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM2_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM3_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM3_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    m_axi_gmem2_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem2_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_WREADY : IN STD_LOGIC;
    m_axi_gmem2_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem2_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_WUSER_WIDTH-1 downto 0);
    m_axi_gmem2_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ADDR_WIDTH-1 downto 0);
    m_axi_gmem2_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RVALID : IN STD_LOGIC;
    m_axi_gmem2_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_DATA_WIDTH-1 downto 0);
    m_axi_gmem2_RLAST : IN STD_LOGIC;
    m_axi_gmem2_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_RUSER_WIDTH-1 downto 0);
    m_axi_gmem2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BVALID : IN STD_LOGIC;
    m_axi_gmem2_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_ID_WIDTH-1 downto 0);
    m_axi_gmem2_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM2_BUSER_WIDTH-1 downto 0);
    m_axi_gmem3_AWVALID : OUT STD_LOGIC;
    m_axi_gmem3_AWREADY : IN STD_LOGIC;
    m_axi_gmem3_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem3_WVALID : OUT STD_LOGIC;
    m_axi_gmem3_WREADY : IN STD_LOGIC;
    m_axi_gmem3_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem3_WLAST : OUT STD_LOGIC;
    m_axi_gmem3_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_WUSER_WIDTH-1 downto 0);
    m_axi_gmem3_ARVALID : OUT STD_LOGIC;
    m_axi_gmem3_ARREADY : IN STD_LOGIC;
    m_axi_gmem3_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ADDR_WIDTH-1 downto 0);
    m_axi_gmem3_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem3_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RVALID : IN STD_LOGIC;
    m_axi_gmem3_RREADY : OUT STD_LOGIC;
    m_axi_gmem3_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_DATA_WIDTH-1 downto 0);
    m_axi_gmem3_RLAST : IN STD_LOGIC;
    m_axi_gmem3_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_RUSER_WIDTH-1 downto 0);
    m_axi_gmem3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BVALID : IN STD_LOGIC;
    m_axi_gmem3_BREADY : OUT STD_LOGIC;
    m_axi_gmem3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem3_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_ID_WIDTH-1 downto 0);
    m_axi_gmem3_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM3_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of QuantumMonteCarloU50 is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "QuantumMonteCarloU50_QuantumMonteCarloU50,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.613629,HLS_SYN_LAT=3543735,HLS_SYN_TPT=none,HLS_SYN_MEM=156,HLS_SYN_DSP=0,HLS_SYN_FF=514226,HLS_SYN_LUT=297386,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state107 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state108 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state109 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state110 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state111 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state112 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state113 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state114 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state115 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state116 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state117 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state118 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state119 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state120 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state121 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state122 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state123 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state124 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state125 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state126 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state127 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state128 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state129 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state130 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state131 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state132 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state133 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state134 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state135 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state136 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state137 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state138 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state139 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state140 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state141 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state142 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state143 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state144 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state145 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state146 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state147 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state148 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state149 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state150 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state151 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state152 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state153 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state154 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state155 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state157 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state158 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state159 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state160 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state161 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state162 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state163 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state164 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state165 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state166 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state167 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state168 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state169 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state170 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state171 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state172 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state173 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state174 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state175 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state176 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state177 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state178 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state179 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state180 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state181 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state182 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state183 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state184 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state185 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state186 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state187 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state188 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state189 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state190 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state191 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state192 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state193 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state194 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state195 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state196 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state197 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state198 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state199 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state200 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state201 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state202 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state203 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state204 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state205 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state206 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state207 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state208 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state209 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state210 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state211 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state212 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state213 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state214 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state215 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state216 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state217 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state218 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state219 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state220 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state221 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state222 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state223 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state224 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state225 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state226 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state227 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state228 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state229 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state230 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state231 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state232 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state233 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state234 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state235 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state236 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state237 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state238 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state239 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state240 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state241 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state242 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state243 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state244 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state245 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state246 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state247 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state248 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state249 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state250 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state251 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state252 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state253 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state254 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state255 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state256 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state257 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state258 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state259 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state260 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state261 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state262 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state263 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state264 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state265 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state266 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state267 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state268 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state269 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state270 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state271 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state272 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state273 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state274 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state275 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state276 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state277 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state278 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state279 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state280 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state281 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state282 : STD_LOGIC_VECTOR (293 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state283 : STD_LOGIC_VECTOR (293 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state284 : STD_LOGIC_VECTOR (293 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state285 : STD_LOGIC_VECTOR (293 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state286 : STD_LOGIC_VECTOR (293 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state287 : STD_LOGIC_VECTOR (293 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state288 : STD_LOGIC_VECTOR (293 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state289 : STD_LOGIC_VECTOR (293 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state290 : STD_LOGIC_VECTOR (293 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state291 : STD_LOGIC_VECTOR (293 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state292 : STD_LOGIC_VECTOR (293 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state293 : STD_LOGIC_VECTOR (293 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state294 : STD_LOGIC_VECTOR (293 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_125 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100101";
    constant ap_const_lv32_94 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_91 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010001";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_92 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010010";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_93 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010011";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_DC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011100";
    constant ap_const_lv32_DD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011101";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_DB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_DA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_DE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011110";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_E1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_41000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000001000000000000000000000000";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv13_1003 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000011";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_FFE : STD_LOGIC_VECTOR (11 downto 0) := "111111111110";
    constant ap_const_lv12_FFD : STD_LOGIC_VECTOR (11 downto 0) := "111111111101";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_800 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (293 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal trotters : STD_LOGIC_VECTOR (63 downto 0);
    signal Jcoup : STD_LOGIC_VECTOR (63 downto 0);
    signal h : STD_LOGIC_VECTOR (63 downto 0);
    signal Jperp : STD_LOGIC_VECTOR (31 downto 0);
    signal Beta : STD_LOGIC_VECTOR (31 downto 0);
    signal logRand : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state224 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state224 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state294 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state294 : signal is "none";
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state149 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state149 : signal is "none";
    signal tmp_fu_1510_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal gmem2_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state145 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state145 : signal is "none";
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal ap_CS_fsm_state146 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state146 : signal is "none";
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal ap_CS_fsm_state147 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state147 : signal is "none";
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal ap_CS_fsm_state148 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state148 : signal is "none";
    signal gmem3_blk_n_AR : STD_LOGIC;
    signal gmem3_blk_n_R : STD_LOGIC;
    signal trunc_ln_reg_1576 : STD_LOGIC_VECTOR (57 downto 0);
    signal gmem0_addr_reg_1583 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal grp_fu_698_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dHTunnel_reg_1622 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_fu_728_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln234_reg_1630 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln235_fu_732_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln235_reg_1638 : STD_LOGIC_VECTOR (5 downto 0);
    signal stage_1_reg_1646 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal add_ln214_fu_745_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln214_reg_1661 : STD_LOGIC_VECTOR (12 downto 0);
    signal Ofst_fu_751_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal Ofst_reg_1666 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln214_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln234_6_reg_1673 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln235_4_reg_1678 : STD_LOGIC_VECTOR (57 downto 0);
    signal packOfst_1_reg_1695 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_2_fu_844_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_2_reg_1701 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_8_reg_1706 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln7_reg_1711 : STD_LOGIC_VECTOR (57 downto 0);
    signal packOfst_2_reg_1728 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_5_fu_939_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_5_reg_1734 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_s_reg_1739 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln235_6_reg_1744 : STD_LOGIC_VECTOR (57 downto 0);
    signal packOfst_3_reg_1749 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_12_fu_1014_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_12_reg_1755 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_11_reg_1760 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln235_8_reg_1765 : STD_LOGIC_VECTOR (57 downto 0);
    signal gmem2_addr_read_reg_1794 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem3_addr_read_reg_1799 : STD_LOGIC_VECTOR (511 downto 0);
    signal spinOfst_fu_1106_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal spinOfst_reg_1804 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln234_1_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_1_reg_1813 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_1_fu_1165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_1_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_addr_1_read_reg_1823 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem3_addr_1_read_reg_1828 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln234_3_fu_1198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_3_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_2_fu_1224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_2_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_addr_2_read_reg_1843 : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem3_addr_2_read_reg_1848 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln223_fu_1239_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln223_reg_1853 : STD_LOGIC_VECTOR (63 downto 0);
    signal packOfst_fu_1244_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal packOfst_reg_1858 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln234_7_fu_1298_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln234_7_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_3_fu_1324_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln235_3_reg_1898 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_addr_3_read_reg_1913 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln234_7_fu_1340_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_7_reg_1918 : STD_LOGIC_VECTOR (5 downto 0);
    signal gmem3_addr_3_read_reg_1923 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln235_7_fu_1345_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln235_7_reg_1928 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_s_fu_1353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1933 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_129_fu_1361_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_129_reg_1938 : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_0_fu_1369_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_0_reg_1943 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_fu_1372_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_reg_1948 : STD_LOGIC_VECTOR (31 downto 0);
    signal spinOfst_1_fu_1375_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal spinOfst_1_reg_1953 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_130_fu_1384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_130_reg_1958 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_131_fu_1392_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_131_reg_1963 : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_1_fu_1400_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_reg_1968 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_1_fu_1403_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_1_reg_1973 : STD_LOGIC_VECTOR (31 downto 0);
    signal spinOfst_2_fu_1406_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal spinOfst_2_reg_1978 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_132_fu_1415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_132_reg_1983 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_133_fu_1423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_133_reg_1988 : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_2_fu_1431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_2_reg_1993 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_2_fu_1434_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_2_reg_1998 : STD_LOGIC_VECTOR (31 downto 0);
    signal spinOfst_3_fu_1437_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal spinOfst_3_reg_2003 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_134_fu_1446_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_134_reg_2008 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_135_fu_1454_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_135_reg_2013 : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_3_fu_1482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_3_reg_2018 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_3_fu_1506_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln235_3_reg_2023 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2028 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln8_fu_1517_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln8_reg_2032 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln249_fu_1545_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln249_reg_2045 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state221 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state221 : signal is "none";
    signal tmp_1923_fu_1537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal step_1_fu_1553_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal step_1_reg_2053 : STD_LOGIC_VECTOR (12 downto 0);
    signal packOfst_5_fu_1559_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal packOfst_5_reg_2058 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_TrotterUnit_fu_555_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state222 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state222 : signal is "none";
    signal grp_TrotterUnit_fu_569_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_TrotterUnit_fu_583_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_TrotterUnit_fu_597_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal trottersLocal_V_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_0_ce0 : STD_LOGIC;
    signal trottersLocal_V_0_we0 : STD_LOGIC;
    signal trottersLocal_V_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_0_ce1 : STD_LOGIC;
    signal trottersLocal_V_0_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_1_ce0 : STD_LOGIC;
    signal trottersLocal_V_1_we0 : STD_LOGIC;
    signal trottersLocal_V_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_1_ce1 : STD_LOGIC;
    signal trottersLocal_V_1_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_2_ce0 : STD_LOGIC;
    signal trottersLocal_V_2_we0 : STD_LOGIC;
    signal trottersLocal_V_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_2_ce1 : STD_LOGIC;
    signal trottersLocal_V_2_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_3_ce0 : STD_LOGIC;
    signal trottersLocal_V_3_we0 : STD_LOGIC;
    signal trottersLocal_V_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal trottersLocal_V_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trottersLocal_V_3_ce1 : STD_LOGIC;
    signal trottersLocal_V_3_q1 : STD_LOGIC_VECTOR (15 downto 0);
    signal JcoupLocal_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal JcoupLocal_0_ce0 : STD_LOGIC;
    signal JcoupLocal_0_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal JcoupLocal_0_ce1 : STD_LOGIC;
    signal JcoupLocal_0_we1 : STD_LOGIC;
    signal JcoupLocal_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal JcoupLocal_1_ce0 : STD_LOGIC;
    signal JcoupLocal_1_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal JcoupLocal_1_ce1 : STD_LOGIC;
    signal JcoupLocal_1_we1 : STD_LOGIC;
    signal JcoupLocal_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal JcoupLocal_2_ce0 : STD_LOGIC;
    signal JcoupLocal_2_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal JcoupLocal_2_ce1 : STD_LOGIC;
    signal JcoupLocal_2_we1 : STD_LOGIC;
    signal JcoupLocal_3_ce0 : STD_LOGIC;
    signal JcoupLocal_3_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal JcoupLocal_3_ce1 : STD_LOGIC;
    signal JcoupLocal_3_we1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_idle : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_ready : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_we0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_we0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_we0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_we0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_done : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_idle : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_ready : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WLAST : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_RREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_BREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_ce1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_we1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_TrotterUnit_fu_555_ap_start : STD_LOGIC;
    signal grp_TrotterUnit_fu_555_ap_done : STD_LOGIC;
    signal grp_TrotterUnit_fu_555_ap_idle : STD_LOGIC;
    signal grp_TrotterUnit_fu_555_ap_ready : STD_LOGIC;
    signal grp_TrotterUnit_fu_555_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_555_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_555_JcoupLocal_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_555_JcoupLocal_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_ap_start : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_ap_done : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_ap_idle : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_ap_ready : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_569_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_569_JcoupLocal_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_569_JcoupLocal_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_ap_start : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_ap_done : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_ap_idle : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_ap_ready : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_583_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_583_JcoupLocal_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_583_JcoupLocal_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_ap_start : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_ap_done : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_ap_idle : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_ap_ready : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_597_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnit_fu_597_JcoupLocal_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnit_fu_597_JcoupLocal_ce0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_ap_start : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_ap_done : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_ap_idle : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_ap_ready : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnitFinal_fu_611_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_trotters_we0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_611_trotters_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_TrotterUnitFinal_fu_628_ap_start : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_ap_done : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_ap_idle : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_ap_ready : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnitFinal_fu_628_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_trotters_we0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_628_trotters_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_TrotterUnitFinal_fu_645_ap_start : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_ap_done : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_ap_idle : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_ap_ready : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnitFinal_fu_645_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_trotters_we0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_645_trotters_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_TrotterUnitFinal_fu_662_ap_start : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_ap_done : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_ap_idle : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_ap_ready : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_trotters_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_TrotterUnitFinal_fu_662_trotters_ce0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_trotters_we0 : STD_LOGIC;
    signal grp_TrotterUnitFinal_fu_662_trotters_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_done : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_idle : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_ready : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_we1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_ce1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_we1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_we1 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_idle : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_ready : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_ce0 : STD_LOGIC;
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_ce0 : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARVALID : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RREADY : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_AWREADY : STD_LOGIC;
    signal gmem2_WREADY : STD_LOGIC;
    signal gmem2_ARVALID : STD_LOGIC;
    signal gmem2_ARREADY : STD_LOGIC;
    signal gmem2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem2_RVALID : STD_LOGIC;
    signal gmem2_RREADY : STD_LOGIC;
    signal gmem2_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem2_RLAST : STD_LOGIC;
    signal gmem2_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BVALID : STD_LOGIC;
    signal gmem2_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem2_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_AWREADY : STD_LOGIC;
    signal gmem3_WREADY : STD_LOGIC;
    signal gmem3_ARVALID : STD_LOGIC;
    signal gmem3_ARREADY : STD_LOGIC;
    signal gmem3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem3_RVALID : STD_LOGIC;
    signal gmem3_RREADY : STD_LOGIC;
    signal gmem3_RDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal gmem3_RLAST : STD_LOGIC;
    signal gmem3_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BVALID : STD_LOGIC;
    signal gmem3_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem3_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem3_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dH_3_0_reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state220 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state220 : signal is "none";
    signal ap_block_state220_on_subcall_done : BOOLEAN;
    signal ap_block_state222_on_subcall_done : BOOLEAN;
    signal dH_2_0_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_1_0_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal dH_0_0_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal packOfst_4_reg_514 : STD_LOGIC_VECTOR (8 downto 0);
    signal step_reg_525 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state219 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state219 : signal is "none";
    signal grp_TrotterUnit_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnit_fu_569_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnit_fu_583_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnit_fu_597_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnitFinal_fu_611_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state223 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state223 : signal is "none";
    signal grp_TrotterUnitFinal_fu_628_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnitFinal_fu_645_ap_start_reg : STD_LOGIC := '0';
    signal grp_TrotterUnitFinal_fu_662_ap_start_reg : STD_LOGIC := '0';
    signal grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg : STD_LOGIC := '0';
    signal grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state225 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state225 : signal is "none";
    signal ap_CS_fsm_state226 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state226 : signal is "none";
    signal zext_ln230_fu_1253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_1_fu_1259_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_2_fu_1264_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln230_3_fu_1328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln194_fu_718_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln235_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_1_fu_892_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln235_1_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_2_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln235_2_fu_1076_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_3_fu_1086_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln235_3_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln241_fu_1526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state75_io : BOOLEAN;
    signal ap_block_state76_io : BOOLEAN;
    signal ap_block_state77_io : BOOLEAN;
    signal ap_block_state78_io : BOOLEAN;
    signal ap_block_state145 : BOOLEAN;
    signal ap_block_state146 : BOOLEAN;
    signal ap_block_state147 : BOOLEAN;
    signal ap_block_state148 : BOOLEAN;
    signal ap_block_state149_io : BOOLEAN;
    signal stage_fu_198 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal shl_ln1_fu_755_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln234_fu_763_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln234_fu_767_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln235_fu_782_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ofst_1_fu_817_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln234_2_fu_832_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln234_2_fu_840_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln234_1_fu_848_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln1_fu_863_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln235_1_fu_873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln235_2_fu_877_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ofst_2_fu_912_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln234_4_fu_927_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln234_4_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln234_2_fu_943_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln235_1_fu_958_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln235_3_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln235_4_fu_972_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ofst_3_fu_987_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln234_6_fu_1002_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln234_6_fu_1010_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln234_3_fu_1018_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln235_2_fu_1033_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln235_4_fu_1043_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln235_5_fu_1047_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln235_6_fu_1051_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln234_4_fu_1109_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_4_fu_1117_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln234_1_fu_1122_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln234_1_fu_1130_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln234_fu_1134_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln235_1_fu_1143_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln2_fu_1148_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln235_fu_1156_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln235_fu_1160_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln6_fu_1169_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_5_fu_1176_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln234_3_fu_1181_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln234_3_fu_1189_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln234_1_fu_1193_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln235_3_fu_1202_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln235_1_fu_1207_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln235_2_fu_1215_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln235_1_fu_1219_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal shl_ln_fu_1228_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln223_fu_1235_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln234_9_fu_1269_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln234_6_fu_1276_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln234_5_fu_1281_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln234_5_fu_1289_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln234_2_fu_1293_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln235_5_fu_1302_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln235_2_fu_1307_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln235_4_fu_1315_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln235_2_fu_1319_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln234_10_fu_1333_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln819_fu_1350_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln819_1_fu_1380_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln819_2_fu_1411_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln819_3_fu_1442_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln234_7_fu_1462_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln234_7_fu_1469_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln234_3_fu_1473_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln234_13_fu_1478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln235_3_fu_1486_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln235_6_fu_1493_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln235_3_fu_1497_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal trunc_ln235_5_fu_1502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_698_ce : STD_LOGIC;
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (293 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal ap_ST_fsm_state107_blk : STD_LOGIC;
    signal ap_ST_fsm_state108_blk : STD_LOGIC;
    signal ap_ST_fsm_state109_blk : STD_LOGIC;
    signal ap_ST_fsm_state110_blk : STD_LOGIC;
    signal ap_ST_fsm_state111_blk : STD_LOGIC;
    signal ap_ST_fsm_state112_blk : STD_LOGIC;
    signal ap_ST_fsm_state113_blk : STD_LOGIC;
    signal ap_ST_fsm_state114_blk : STD_LOGIC;
    signal ap_ST_fsm_state115_blk : STD_LOGIC;
    signal ap_ST_fsm_state116_blk : STD_LOGIC;
    signal ap_ST_fsm_state117_blk : STD_LOGIC;
    signal ap_ST_fsm_state118_blk : STD_LOGIC;
    signal ap_ST_fsm_state119_blk : STD_LOGIC;
    signal ap_ST_fsm_state120_blk : STD_LOGIC;
    signal ap_ST_fsm_state121_blk : STD_LOGIC;
    signal ap_ST_fsm_state122_blk : STD_LOGIC;
    signal ap_ST_fsm_state123_blk : STD_LOGIC;
    signal ap_ST_fsm_state124_blk : STD_LOGIC;
    signal ap_ST_fsm_state125_blk : STD_LOGIC;
    signal ap_ST_fsm_state126_blk : STD_LOGIC;
    signal ap_ST_fsm_state127_blk : STD_LOGIC;
    signal ap_ST_fsm_state128_blk : STD_LOGIC;
    signal ap_ST_fsm_state129_blk : STD_LOGIC;
    signal ap_ST_fsm_state130_blk : STD_LOGIC;
    signal ap_ST_fsm_state131_blk : STD_LOGIC;
    signal ap_ST_fsm_state132_blk : STD_LOGIC;
    signal ap_ST_fsm_state133_blk : STD_LOGIC;
    signal ap_ST_fsm_state134_blk : STD_LOGIC;
    signal ap_ST_fsm_state135_blk : STD_LOGIC;
    signal ap_ST_fsm_state136_blk : STD_LOGIC;
    signal ap_ST_fsm_state137_blk : STD_LOGIC;
    signal ap_ST_fsm_state138_blk : STD_LOGIC;
    signal ap_ST_fsm_state139_blk : STD_LOGIC;
    signal ap_ST_fsm_state140_blk : STD_LOGIC;
    signal ap_ST_fsm_state141_blk : STD_LOGIC;
    signal ap_ST_fsm_state142_blk : STD_LOGIC;
    signal ap_ST_fsm_state143_blk : STD_LOGIC;
    signal ap_ST_fsm_state144_blk : STD_LOGIC;
    signal ap_ST_fsm_state145_blk : STD_LOGIC;
    signal ap_ST_fsm_state146_blk : STD_LOGIC;
    signal ap_ST_fsm_state147_blk : STD_LOGIC;
    signal ap_ST_fsm_state148_blk : STD_LOGIC;
    signal ap_ST_fsm_state149_blk : STD_LOGIC;
    signal ap_ST_fsm_state150_blk : STD_LOGIC;
    signal ap_ST_fsm_state151_blk : STD_LOGIC;
    signal ap_ST_fsm_state152_blk : STD_LOGIC;
    signal ap_ST_fsm_state153_blk : STD_LOGIC;
    signal ap_ST_fsm_state154_blk : STD_LOGIC;
    signal ap_ST_fsm_state155_blk : STD_LOGIC;
    signal ap_ST_fsm_state156_blk : STD_LOGIC;
    signal ap_ST_fsm_state157_blk : STD_LOGIC;
    signal ap_ST_fsm_state158_blk : STD_LOGIC;
    signal ap_ST_fsm_state159_blk : STD_LOGIC;
    signal ap_ST_fsm_state160_blk : STD_LOGIC;
    signal ap_ST_fsm_state161_blk : STD_LOGIC;
    signal ap_ST_fsm_state162_blk : STD_LOGIC;
    signal ap_ST_fsm_state163_blk : STD_LOGIC;
    signal ap_ST_fsm_state164_blk : STD_LOGIC;
    signal ap_ST_fsm_state165_blk : STD_LOGIC;
    signal ap_ST_fsm_state166_blk : STD_LOGIC;
    signal ap_ST_fsm_state167_blk : STD_LOGIC;
    signal ap_ST_fsm_state168_blk : STD_LOGIC;
    signal ap_ST_fsm_state169_blk : STD_LOGIC;
    signal ap_ST_fsm_state170_blk : STD_LOGIC;
    signal ap_ST_fsm_state171_blk : STD_LOGIC;
    signal ap_ST_fsm_state172_blk : STD_LOGIC;
    signal ap_ST_fsm_state173_blk : STD_LOGIC;
    signal ap_ST_fsm_state174_blk : STD_LOGIC;
    signal ap_ST_fsm_state175_blk : STD_LOGIC;
    signal ap_ST_fsm_state176_blk : STD_LOGIC;
    signal ap_ST_fsm_state177_blk : STD_LOGIC;
    signal ap_ST_fsm_state178_blk : STD_LOGIC;
    signal ap_ST_fsm_state179_blk : STD_LOGIC;
    signal ap_ST_fsm_state180_blk : STD_LOGIC;
    signal ap_ST_fsm_state181_blk : STD_LOGIC;
    signal ap_ST_fsm_state182_blk : STD_LOGIC;
    signal ap_ST_fsm_state183_blk : STD_LOGIC;
    signal ap_ST_fsm_state184_blk : STD_LOGIC;
    signal ap_ST_fsm_state185_blk : STD_LOGIC;
    signal ap_ST_fsm_state186_blk : STD_LOGIC;
    signal ap_ST_fsm_state187_blk : STD_LOGIC;
    signal ap_ST_fsm_state188_blk : STD_LOGIC;
    signal ap_ST_fsm_state189_blk : STD_LOGIC;
    signal ap_ST_fsm_state190_blk : STD_LOGIC;
    signal ap_ST_fsm_state191_blk : STD_LOGIC;
    signal ap_ST_fsm_state192_blk : STD_LOGIC;
    signal ap_ST_fsm_state193_blk : STD_LOGIC;
    signal ap_ST_fsm_state194_blk : STD_LOGIC;
    signal ap_ST_fsm_state195_blk : STD_LOGIC;
    signal ap_ST_fsm_state196_blk : STD_LOGIC;
    signal ap_ST_fsm_state197_blk : STD_LOGIC;
    signal ap_ST_fsm_state198_blk : STD_LOGIC;
    signal ap_ST_fsm_state199_blk : STD_LOGIC;
    signal ap_ST_fsm_state200_blk : STD_LOGIC;
    signal ap_ST_fsm_state201_blk : STD_LOGIC;
    signal ap_ST_fsm_state202_blk : STD_LOGIC;
    signal ap_ST_fsm_state203_blk : STD_LOGIC;
    signal ap_ST_fsm_state204_blk : STD_LOGIC;
    signal ap_ST_fsm_state205_blk : STD_LOGIC;
    signal ap_ST_fsm_state206_blk : STD_LOGIC;
    signal ap_ST_fsm_state207_blk : STD_LOGIC;
    signal ap_ST_fsm_state208_blk : STD_LOGIC;
    signal ap_ST_fsm_state209_blk : STD_LOGIC;
    signal ap_ST_fsm_state210_blk : STD_LOGIC;
    signal ap_ST_fsm_state211_blk : STD_LOGIC;
    signal ap_ST_fsm_state212_blk : STD_LOGIC;
    signal ap_ST_fsm_state213_blk : STD_LOGIC;
    signal ap_ST_fsm_state214_blk : STD_LOGIC;
    signal ap_ST_fsm_state215_blk : STD_LOGIC;
    signal ap_ST_fsm_state216_blk : STD_LOGIC;
    signal ap_ST_fsm_state217_blk : STD_LOGIC;
    signal ap_ST_fsm_state218_blk : STD_LOGIC;
    signal ap_ST_fsm_state219_blk : STD_LOGIC;
    signal ap_ST_fsm_state220_blk : STD_LOGIC;
    signal ap_ST_fsm_state221_blk : STD_LOGIC;
    signal ap_ST_fsm_state222_blk : STD_LOGIC;
    signal ap_block_state223_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state223_blk : STD_LOGIC;
    signal ap_ST_fsm_state224_blk : STD_LOGIC;
    signal ap_ST_fsm_state225_blk : STD_LOGIC;
    signal ap_ST_fsm_state226_blk : STD_LOGIC;
    signal ap_ST_fsm_state227_blk : STD_LOGIC;
    signal ap_ST_fsm_state228_blk : STD_LOGIC;
    signal ap_ST_fsm_state229_blk : STD_LOGIC;
    signal ap_ST_fsm_state230_blk : STD_LOGIC;
    signal ap_ST_fsm_state231_blk : STD_LOGIC;
    signal ap_ST_fsm_state232_blk : STD_LOGIC;
    signal ap_ST_fsm_state233_blk : STD_LOGIC;
    signal ap_ST_fsm_state234_blk : STD_LOGIC;
    signal ap_ST_fsm_state235_blk : STD_LOGIC;
    signal ap_ST_fsm_state236_blk : STD_LOGIC;
    signal ap_ST_fsm_state237_blk : STD_LOGIC;
    signal ap_ST_fsm_state238_blk : STD_LOGIC;
    signal ap_ST_fsm_state239_blk : STD_LOGIC;
    signal ap_ST_fsm_state240_blk : STD_LOGIC;
    signal ap_ST_fsm_state241_blk : STD_LOGIC;
    signal ap_ST_fsm_state242_blk : STD_LOGIC;
    signal ap_ST_fsm_state243_blk : STD_LOGIC;
    signal ap_ST_fsm_state244_blk : STD_LOGIC;
    signal ap_ST_fsm_state245_blk : STD_LOGIC;
    signal ap_ST_fsm_state246_blk : STD_LOGIC;
    signal ap_ST_fsm_state247_blk : STD_LOGIC;
    signal ap_ST_fsm_state248_blk : STD_LOGIC;
    signal ap_ST_fsm_state249_blk : STD_LOGIC;
    signal ap_ST_fsm_state250_blk : STD_LOGIC;
    signal ap_ST_fsm_state251_blk : STD_LOGIC;
    signal ap_ST_fsm_state252_blk : STD_LOGIC;
    signal ap_ST_fsm_state253_blk : STD_LOGIC;
    signal ap_ST_fsm_state254_blk : STD_LOGIC;
    signal ap_ST_fsm_state255_blk : STD_LOGIC;
    signal ap_ST_fsm_state256_blk : STD_LOGIC;
    signal ap_ST_fsm_state257_blk : STD_LOGIC;
    signal ap_ST_fsm_state258_blk : STD_LOGIC;
    signal ap_ST_fsm_state259_blk : STD_LOGIC;
    signal ap_ST_fsm_state260_blk : STD_LOGIC;
    signal ap_ST_fsm_state261_blk : STD_LOGIC;
    signal ap_ST_fsm_state262_blk : STD_LOGIC;
    signal ap_ST_fsm_state263_blk : STD_LOGIC;
    signal ap_ST_fsm_state264_blk : STD_LOGIC;
    signal ap_ST_fsm_state265_blk : STD_LOGIC;
    signal ap_ST_fsm_state266_blk : STD_LOGIC;
    signal ap_ST_fsm_state267_blk : STD_LOGIC;
    signal ap_ST_fsm_state268_blk : STD_LOGIC;
    signal ap_ST_fsm_state269_blk : STD_LOGIC;
    signal ap_ST_fsm_state270_blk : STD_LOGIC;
    signal ap_ST_fsm_state271_blk : STD_LOGIC;
    signal ap_ST_fsm_state272_blk : STD_LOGIC;
    signal ap_ST_fsm_state273_blk : STD_LOGIC;
    signal ap_ST_fsm_state274_blk : STD_LOGIC;
    signal ap_ST_fsm_state275_blk : STD_LOGIC;
    signal ap_ST_fsm_state276_blk : STD_LOGIC;
    signal ap_ST_fsm_state277_blk : STD_LOGIC;
    signal ap_ST_fsm_state278_blk : STD_LOGIC;
    signal ap_ST_fsm_state279_blk : STD_LOGIC;
    signal ap_ST_fsm_state280_blk : STD_LOGIC;
    signal ap_ST_fsm_state281_blk : STD_LOGIC;
    signal ap_ST_fsm_state282_blk : STD_LOGIC;
    signal ap_ST_fsm_state283_blk : STD_LOGIC;
    signal ap_ST_fsm_state284_blk : STD_LOGIC;
    signal ap_ST_fsm_state285_blk : STD_LOGIC;
    signal ap_ST_fsm_state286_blk : STD_LOGIC;
    signal ap_ST_fsm_state287_blk : STD_LOGIC;
    signal ap_ST_fsm_state288_blk : STD_LOGIC;
    signal ap_ST_fsm_state289_blk : STD_LOGIC;
    signal ap_ST_fsm_state290_blk : STD_LOGIC;
    signal ap_ST_fsm_state291_blk : STD_LOGIC;
    signal ap_ST_fsm_state292_blk : STD_LOGIC;
    signal ap_ST_fsm_state293_blk : STD_LOGIC;
    signal ap_ST_fsm_state294_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln194 : IN STD_LOGIC_VECTOR (57 downto 0);
        trottersLocal_V_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_0_ce0 : OUT STD_LOGIC;
        trottersLocal_V_0_we0 : OUT STD_LOGIC;
        trottersLocal_V_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_1_ce0 : OUT STD_LOGIC;
        trottersLocal_V_1_we0 : OUT STD_LOGIC;
        trottersLocal_V_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_2_ce0 : OUT STD_LOGIC;
        trottersLocal_V_2_we0 : OUT STD_LOGIC;
        trottersLocal_V_2_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_3_ce0 : OUT STD_LOGIC;
        trottersLocal_V_3_we0 : OUT STD_LOGIC;
        trottersLocal_V_3_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem1_AWVALID : OUT STD_LOGIC;
        m_axi_gmem1_AWREADY : IN STD_LOGIC;
        m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WVALID : OUT STD_LOGIC;
        m_axi_gmem1_WREADY : IN STD_LOGIC;
        m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_WLAST : OUT STD_LOGIC;
        m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARVALID : OUT STD_LOGIC;
        m_axi_gmem1_ARREADY : IN STD_LOGIC;
        m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RVALID : IN STD_LOGIC;
        m_axi_gmem1_RREADY : OUT STD_LOGIC;
        m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem1_RLAST : IN STD_LOGIC;
        m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BVALID : IN STD_LOGIC;
        m_axi_gmem1_BREADY : OUT STD_LOGIC;
        m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln241 : IN STD_LOGIC_VECTOR (57 downto 0);
        JcoupLocal_0_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_0_ce1 : OUT STD_LOGIC;
        JcoupLocal_0_we1 : OUT STD_LOGIC;
        JcoupLocal_0_d1 : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component QuantumMonteCarloU50_TrotterUnit IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_offset : IN STD_LOGIC_VECTOR (1 downto 0);
        stage : IN STD_LOGIC_VECTOR (12 downto 0);
        packOfst : IN STD_LOGIC_VECTOR (7 downto 0);
        trotters_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trotters_ce0 : OUT STD_LOGIC;
        trotters_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        dH_read_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        dH_read : IN STD_LOGIC_VECTOR (31 downto 0);
        JcoupLocal_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_ce0 : OUT STD_LOGIC;
        JcoupLocal_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component QuantumMonteCarloU50_TrotterUnitFinal IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_offset : IN STD_LOGIC_VECTOR (1 downto 0);
        stage : IN STD_LOGIC_VECTOR (12 downto 0);
        iPack : IN STD_LOGIC_VECTOR (7 downto 0);
        iSpin : IN STD_LOGIC_VECTOR (3 downto 0);
        trotters_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trotters_ce0 : OUT STD_LOGIC;
        trotters_we0 : OUT STD_LOGIC;
        trotters_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        trotters_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        dH : IN STD_LOGIC_VECTOR (31 downto 0);
        upSpin : IN STD_LOGIC_VECTOR (0 downto 0);
        downSpin : IN STD_LOGIC_VECTOR (0 downto 0);
        Beta : IN STD_LOGIC_VECTOR (31 downto 0);
        dHTunnel : IN STD_LOGIC_VECTOR (31 downto 0);
        logRandNumber : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        JcoupLocal_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_2_ce0 : OUT STD_LOGIC;
        JcoupLocal_2_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        JcoupLocal_2_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_2_ce1 : OUT STD_LOGIC;
        JcoupLocal_2_we1 : OUT STD_LOGIC;
        JcoupLocal_2_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
        JcoupLocal_3_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_3_ce1 : OUT STD_LOGIC;
        JcoupLocal_3_we1 : OUT STD_LOGIC;
        JcoupLocal_3_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
        JcoupLocal_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_1_ce0 : OUT STD_LOGIC;
        JcoupLocal_1_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        JcoupLocal_1_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_1_ce1 : OUT STD_LOGIC;
        JcoupLocal_1_we1 : OUT STD_LOGIC;
        JcoupLocal_1_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
        JcoupLocal_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        JcoupLocal_0_ce0 : OUT STD_LOGIC;
        JcoupLocal_0_q0 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln194 : IN STD_LOGIC_VECTOR (57 downto 0);
        trottersLocal_V_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_0_ce0 : OUT STD_LOGIC;
        trottersLocal_V_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_1_ce0 : OUT STD_LOGIC;
        trottersLocal_V_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_2_ce0 : OUT STD_LOGIC;
        trottersLocal_V_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        trottersLocal_V_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        trottersLocal_V_3_ce0 : OUT STD_LOGIC;
        trottersLocal_V_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuantumMonteCarloU50_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component QuantumMonteCarloU50_trottersLocal_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component QuantumMonteCarloU50_JcoupLocal_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;


    component QuantumMonteCarloU50_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        trotters : OUT STD_LOGIC_VECTOR (63 downto 0);
        Jcoup : OUT STD_LOGIC_VECTOR (63 downto 0);
        h : OUT STD_LOGIC_VECTOR (63 downto 0);
        Jperp : OUT STD_LOGIC_VECTOR (31 downto 0);
        Beta : OUT STD_LOGIC_VECTOR (31 downto 0);
        logRand : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component QuantumMonteCarloU50_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component QuantumMonteCarloU50_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component QuantumMonteCarloU50_gmem2_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component QuantumMonteCarloU50_gmem3_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (63 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    trottersLocal_V_0_U : component QuantumMonteCarloU50_trottersLocal_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => trottersLocal_V_0_address0,
        ce0 => trottersLocal_V_0_ce0,
        we0 => trottersLocal_V_0_we0,
        d0 => trottersLocal_V_0_d0,
        q0 => trottersLocal_V_0_q0,
        address1 => trottersLocal_V_0_address1,
        ce1 => trottersLocal_V_0_ce1,
        q1 => trottersLocal_V_0_q1);

    trottersLocal_V_1_U : component QuantumMonteCarloU50_trottersLocal_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => trottersLocal_V_1_address0,
        ce0 => trottersLocal_V_1_ce0,
        we0 => trottersLocal_V_1_we0,
        d0 => trottersLocal_V_1_d0,
        q0 => trottersLocal_V_1_q0,
        address1 => trottersLocal_V_1_address1,
        ce1 => trottersLocal_V_1_ce1,
        q1 => trottersLocal_V_1_q1);

    trottersLocal_V_2_U : component QuantumMonteCarloU50_trottersLocal_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => trottersLocal_V_2_address0,
        ce0 => trottersLocal_V_2_ce0,
        we0 => trottersLocal_V_2_we0,
        d0 => trottersLocal_V_2_d0,
        q0 => trottersLocal_V_2_q0,
        address1 => trottersLocal_V_2_address1,
        ce1 => trottersLocal_V_2_ce1,
        q1 => trottersLocal_V_2_q1);

    trottersLocal_V_3_U : component QuantumMonteCarloU50_trottersLocal_V_0
    generic map (
        DataWidth => 16,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => trottersLocal_V_3_address0,
        ce0 => trottersLocal_V_3_ce0,
        we0 => trottersLocal_V_3_we0,
        d0 => trottersLocal_V_3_d0,
        q0 => trottersLocal_V_3_q0,
        address1 => trottersLocal_V_3_address1,
        ce1 => trottersLocal_V_3_ce1,
        q1 => trottersLocal_V_3_q1);

    JcoupLocal_0_U : component QuantumMonteCarloU50_JcoupLocal_0
    generic map (
        DataWidth => 512,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => JcoupLocal_0_address0,
        ce0 => JcoupLocal_0_ce0,
        q0 => JcoupLocal_0_q0,
        address1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_address1,
        ce1 => JcoupLocal_0_ce1,
        we1 => JcoupLocal_0_we1,
        d1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_d1);

    JcoupLocal_1_U : component QuantumMonteCarloU50_JcoupLocal_0
    generic map (
        DataWidth => 512,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => JcoupLocal_1_address0,
        ce0 => JcoupLocal_1_ce0,
        q0 => JcoupLocal_1_q0,
        address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address1,
        ce1 => JcoupLocal_1_ce1,
        we1 => JcoupLocal_1_we1,
        d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_d1);

    JcoupLocal_2_U : component QuantumMonteCarloU50_JcoupLocal_0
    generic map (
        DataWidth => 512,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => JcoupLocal_2_address0,
        ce0 => JcoupLocal_2_ce0,
        q0 => JcoupLocal_2_q0,
        address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address1,
        ce1 => JcoupLocal_2_ce1,
        we1 => JcoupLocal_2_we1,
        d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_d1);

    JcoupLocal_3_U : component QuantumMonteCarloU50_JcoupLocal_0
    generic map (
        DataWidth => 512,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_TrotterUnit_fu_597_JcoupLocal_address0,
        ce0 => JcoupLocal_3_ce0,
        q0 => JcoupLocal_3_q0,
        address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_address1,
        ce1 => JcoupLocal_3_ce1,
        we1 => JcoupLocal_3_we1,
        d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_d1);

    grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536 : component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start,
        ap_done => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done,
        ap_idle => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_idle,
        ap_ready => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_ready,
        m_axi_gmem0_AWVALID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => gmem0_RLAST,
        m_axi_gmem0_RID => gmem0_RID,
        m_axi_gmem0_RUSER => gmem0_RUSER,
        m_axi_gmem0_RRESP => gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln194 => trunc_ln_reg_1576,
        trottersLocal_V_0_address0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_address0,
        trottersLocal_V_0_ce0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_ce0,
        trottersLocal_V_0_we0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_we0,
        trottersLocal_V_0_d0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_d0,
        trottersLocal_V_1_address0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_address0,
        trottersLocal_V_1_ce0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_ce0,
        trottersLocal_V_1_we0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_we0,
        trottersLocal_V_1_d0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_d0,
        trottersLocal_V_2_address0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_address0,
        trottersLocal_V_2_ce0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_ce0,
        trottersLocal_V_2_we0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_we0,
        trottersLocal_V_2_d0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_d0,
        trottersLocal_V_3_address0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_address0,
        trottersLocal_V_3_ce0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_ce0,
        trottersLocal_V_3_we0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_we0,
        trottersLocal_V_3_d0 => grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_d0);

    grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547 : component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start,
        ap_done => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_done,
        ap_idle => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_idle,
        ap_ready => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_ready,
        m_axi_gmem1_AWVALID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY => ap_const_logic_0,
        m_axi_gmem1_AWADDR => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY => ap_const_logic_0,
        m_axi_gmem1_WDATA => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WLAST,
        m_axi_gmem1_WID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WID,
        m_axi_gmem1_WUSER => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY => gmem1_ARREADY,
        m_axi_gmem1_ARADDR => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID => gmem1_RVALID,
        m_axi_gmem1_RREADY => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA => gmem1_RDATA,
        m_axi_gmem1_RLAST => gmem1_RLAST,
        m_axi_gmem1_RID => gmem1_RID,
        m_axi_gmem1_RUSER => gmem1_RUSER,
        m_axi_gmem1_RRESP => gmem1_RRESP,
        m_axi_gmem1_BVALID => ap_const_logic_0,
        m_axi_gmem1_BREADY => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP => ap_const_lv2_0,
        m_axi_gmem1_BID => ap_const_lv1_0,
        m_axi_gmem1_BUSER => ap_const_lv1_0,
        sext_ln241 => trunc_ln8_reg_2032,
        JcoupLocal_0_address1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_address1,
        JcoupLocal_0_ce1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_ce1,
        JcoupLocal_0_we1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_we1,
        JcoupLocal_0_d1 => grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_d1);

    grp_TrotterUnit_fu_555 : component QuantumMonteCarloU50_TrotterUnit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnit_fu_555_ap_start,
        ap_done => grp_TrotterUnit_fu_555_ap_done,
        ap_idle => grp_TrotterUnit_fu_555_ap_idle,
        ap_ready => grp_TrotterUnit_fu_555_ap_ready,
        t_offset => ap_const_lv2_0,
        stage => stage_1_reg_1646,
        packOfst => trunc_ln249_reg_2045,
        trotters_address0 => grp_TrotterUnit_fu_555_trotters_address0,
        trotters_ce0 => grp_TrotterUnit_fu_555_trotters_ce0,
        trotters_q0 => trottersLocal_V_0_q0,
        dH_read_2 => dH_0_0_reg_504,
        dH_read => dH_0_0_reg_504,
        JcoupLocal_address0 => grp_TrotterUnit_fu_555_JcoupLocal_address0,
        JcoupLocal_ce0 => grp_TrotterUnit_fu_555_JcoupLocal_ce0,
        JcoupLocal_q0 => JcoupLocal_0_q0,
        ap_return => grp_TrotterUnit_fu_555_ap_return);

    grp_TrotterUnit_fu_569 : component QuantumMonteCarloU50_TrotterUnit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnit_fu_569_ap_start,
        ap_done => grp_TrotterUnit_fu_569_ap_done,
        ap_idle => grp_TrotterUnit_fu_569_ap_idle,
        ap_ready => grp_TrotterUnit_fu_569_ap_ready,
        t_offset => ap_const_lv2_1,
        stage => stage_1_reg_1646,
        packOfst => trunc_ln249_reg_2045,
        trotters_address0 => grp_TrotterUnit_fu_569_trotters_address0,
        trotters_ce0 => grp_TrotterUnit_fu_569_trotters_ce0,
        trotters_q0 => trottersLocal_V_1_q0,
        dH_read_2 => dH_1_0_reg_494,
        dH_read => dH_1_0_reg_494,
        JcoupLocal_address0 => grp_TrotterUnit_fu_569_JcoupLocal_address0,
        JcoupLocal_ce0 => grp_TrotterUnit_fu_569_JcoupLocal_ce0,
        JcoupLocal_q0 => JcoupLocal_1_q0,
        ap_return => grp_TrotterUnit_fu_569_ap_return);

    grp_TrotterUnit_fu_583 : component QuantumMonteCarloU50_TrotterUnit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnit_fu_583_ap_start,
        ap_done => grp_TrotterUnit_fu_583_ap_done,
        ap_idle => grp_TrotterUnit_fu_583_ap_idle,
        ap_ready => grp_TrotterUnit_fu_583_ap_ready,
        t_offset => ap_const_lv2_2,
        stage => stage_1_reg_1646,
        packOfst => trunc_ln249_reg_2045,
        trotters_address0 => grp_TrotterUnit_fu_583_trotters_address0,
        trotters_ce0 => grp_TrotterUnit_fu_583_trotters_ce0,
        trotters_q0 => trottersLocal_V_2_q0,
        dH_read_2 => dH_2_0_reg_484,
        dH_read => dH_2_0_reg_484,
        JcoupLocal_address0 => grp_TrotterUnit_fu_583_JcoupLocal_address0,
        JcoupLocal_ce0 => grp_TrotterUnit_fu_583_JcoupLocal_ce0,
        JcoupLocal_q0 => JcoupLocal_2_q0,
        ap_return => grp_TrotterUnit_fu_583_ap_return);

    grp_TrotterUnit_fu_597 : component QuantumMonteCarloU50_TrotterUnit
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnit_fu_597_ap_start,
        ap_done => grp_TrotterUnit_fu_597_ap_done,
        ap_idle => grp_TrotterUnit_fu_597_ap_idle,
        ap_ready => grp_TrotterUnit_fu_597_ap_ready,
        t_offset => ap_const_lv2_3,
        stage => stage_1_reg_1646,
        packOfst => trunc_ln249_reg_2045,
        trotters_address0 => grp_TrotterUnit_fu_597_trotters_address0,
        trotters_ce0 => grp_TrotterUnit_fu_597_trotters_ce0,
        trotters_q0 => trottersLocal_V_3_q0,
        dH_read_2 => dH_3_0_reg_474,
        dH_read => dH_3_0_reg_474,
        JcoupLocal_address0 => grp_TrotterUnit_fu_597_JcoupLocal_address0,
        JcoupLocal_ce0 => grp_TrotterUnit_fu_597_JcoupLocal_ce0,
        JcoupLocal_q0 => JcoupLocal_3_q0,
        ap_return => grp_TrotterUnit_fu_597_ap_return);

    grp_TrotterUnitFinal_fu_611 : component QuantumMonteCarloU50_TrotterUnitFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnitFinal_fu_611_ap_start,
        ap_done => grp_TrotterUnitFinal_fu_611_ap_done,
        ap_idle => grp_TrotterUnitFinal_fu_611_ap_idle,
        ap_ready => grp_TrotterUnitFinal_fu_611_ap_ready,
        t_offset => ap_const_lv2_0,
        stage => stage_1_reg_1646,
        iPack => packOfst_reg_1858,
        iSpin => spinOfst_reg_1804,
        trotters_address0 => grp_TrotterUnitFinal_fu_611_trotters_address0,
        trotters_ce0 => grp_TrotterUnitFinal_fu_611_trotters_ce0,
        trotters_we0 => grp_TrotterUnitFinal_fu_611_trotters_we0,
        trotters_d0 => grp_TrotterUnitFinal_fu_611_trotters_d0,
        trotters_q0 => trottersLocal_V_0_q0,
        dH => dH_0_0_reg_504,
        upSpin => p_Result_s_reg_1933,
        downSpin => p_Result_129_reg_1938,
        Beta => Beta,
        dHTunnel => dHTunnel_reg_1622,
        logRandNumber => bitcast_ln235_reg_1948);

    grp_TrotterUnitFinal_fu_628 : component QuantumMonteCarloU50_TrotterUnitFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnitFinal_fu_628_ap_start,
        ap_done => grp_TrotterUnitFinal_fu_628_ap_done,
        ap_idle => grp_TrotterUnitFinal_fu_628_ap_idle,
        ap_ready => grp_TrotterUnitFinal_fu_628_ap_ready,
        t_offset => ap_const_lv2_1,
        stage => stage_1_reg_1646,
        iPack => packOfst_1_reg_1695,
        iSpin => spinOfst_1_reg_1953,
        trotters_address0 => grp_TrotterUnitFinal_fu_628_trotters_address0,
        trotters_ce0 => grp_TrotterUnitFinal_fu_628_trotters_ce0,
        trotters_we0 => grp_TrotterUnitFinal_fu_628_trotters_we0,
        trotters_d0 => grp_TrotterUnitFinal_fu_628_trotters_d0,
        trotters_q0 => trottersLocal_V_1_q0,
        dH => dH_1_0_reg_494,
        upSpin => p_Result_130_reg_1958,
        downSpin => p_Result_131_reg_1963,
        Beta => Beta,
        dHTunnel => dHTunnel_reg_1622,
        logRandNumber => bitcast_ln235_1_reg_1973);

    grp_TrotterUnitFinal_fu_645 : component QuantumMonteCarloU50_TrotterUnitFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnitFinal_fu_645_ap_start,
        ap_done => grp_TrotterUnitFinal_fu_645_ap_done,
        ap_idle => grp_TrotterUnitFinal_fu_645_ap_idle,
        ap_ready => grp_TrotterUnitFinal_fu_645_ap_ready,
        t_offset => ap_const_lv2_2,
        stage => stage_1_reg_1646,
        iPack => packOfst_2_reg_1728,
        iSpin => spinOfst_2_reg_1978,
        trotters_address0 => grp_TrotterUnitFinal_fu_645_trotters_address0,
        trotters_ce0 => grp_TrotterUnitFinal_fu_645_trotters_ce0,
        trotters_we0 => grp_TrotterUnitFinal_fu_645_trotters_we0,
        trotters_d0 => grp_TrotterUnitFinal_fu_645_trotters_d0,
        trotters_q0 => trottersLocal_V_2_q0,
        dH => dH_2_0_reg_484,
        upSpin => p_Result_132_reg_1983,
        downSpin => p_Result_133_reg_1988,
        Beta => Beta,
        dHTunnel => dHTunnel_reg_1622,
        logRandNumber => bitcast_ln235_2_reg_1998);

    grp_TrotterUnitFinal_fu_662 : component QuantumMonteCarloU50_TrotterUnitFinal
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_TrotterUnitFinal_fu_662_ap_start,
        ap_done => grp_TrotterUnitFinal_fu_662_ap_done,
        ap_idle => grp_TrotterUnitFinal_fu_662_ap_idle,
        ap_ready => grp_TrotterUnitFinal_fu_662_ap_ready,
        t_offset => ap_const_lv2_3,
        stage => stage_1_reg_1646,
        iPack => packOfst_3_reg_1749,
        iSpin => spinOfst_3_reg_2003,
        trotters_address0 => grp_TrotterUnitFinal_fu_662_trotters_address0,
        trotters_ce0 => grp_TrotterUnitFinal_fu_662_trotters_ce0,
        trotters_we0 => grp_TrotterUnitFinal_fu_662_trotters_we0,
        trotters_d0 => grp_TrotterUnitFinal_fu_662_trotters_d0,
        trotters_q0 => trottersLocal_V_3_q0,
        dH => dH_3_0_reg_474,
        upSpin => p_Result_134_reg_2008,
        downSpin => p_Result_135_reg_2013,
        Beta => Beta,
        dHTunnel => dHTunnel_reg_1622,
        logRandNumber => bitcast_ln235_3_reg_2023);

    grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679 : component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start,
        ap_done => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_done,
        ap_idle => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_idle,
        ap_ready => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_ready,
        JcoupLocal_2_address0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address0,
        JcoupLocal_2_ce0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce0,
        JcoupLocal_2_q0 => JcoupLocal_2_q0,
        JcoupLocal_2_address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address1,
        JcoupLocal_2_ce1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce1,
        JcoupLocal_2_we1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_we1,
        JcoupLocal_2_d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_d1,
        JcoupLocal_3_address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_address1,
        JcoupLocal_3_ce1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_ce1,
        JcoupLocal_3_we1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_we1,
        JcoupLocal_3_d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_d1,
        JcoupLocal_1_address0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address0,
        JcoupLocal_1_ce0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce0,
        JcoupLocal_1_q0 => JcoupLocal_1_q0,
        JcoupLocal_1_address1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address1,
        JcoupLocal_1_ce1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce1,
        JcoupLocal_1_we1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_we1,
        JcoupLocal_1_d1 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_d1,
        JcoupLocal_0_address0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_address0,
        JcoupLocal_0_ce0 => grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_ce0,
        JcoupLocal_0_q0 => JcoupLocal_0_q0);

    grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687 : component QuantumMonteCarloU50_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start,
        ap_done => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done,
        ap_idle => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_idle,
        ap_ready => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_ready,
        m_axi_gmem0_AWVALID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv512_lc_1,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => gmem0_BRESP,
        m_axi_gmem0_BID => gmem0_BID,
        m_axi_gmem0_BUSER => gmem0_BUSER,
        sext_ln194 => trunc_ln_reg_1576,
        trottersLocal_V_0_address0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_address0,
        trottersLocal_V_0_ce0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_ce0,
        trottersLocal_V_0_q0 => trottersLocal_V_0_q0,
        trottersLocal_V_1_address0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_address0,
        trottersLocal_V_1_ce0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_ce0,
        trottersLocal_V_1_q0 => trottersLocal_V_1_q0,
        trottersLocal_V_2_address0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_address0,
        trottersLocal_V_2_ce0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_ce0,
        trottersLocal_V_2_q0 => trottersLocal_V_2_q0,
        trottersLocal_V_3_address0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_address0,
        trottersLocal_V_3_ce0 => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_ce0,
        trottersLocal_V_3_q0 => trottersLocal_V_3_q0);

    control_s_axi_U : component QuantumMonteCarloU50_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        trotters => trotters,
        Jcoup => Jcoup,
        h => h,
        Jperp => Jperp,
        Beta => Beta,
        logRand => logRand,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component QuantumMonteCarloU50_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARID => gmem0_ARID,
        I_ARLEN => gmem0_ARLEN,
        I_ARSIZE => gmem0_ARSIZE,
        I_ARLOCK => gmem0_ARLOCK,
        I_ARCACHE => gmem0_ARCACHE,
        I_ARQOS => gmem0_ARQOS,
        I_ARPROT => gmem0_ARPROT,
        I_ARUSER => gmem0_ARUSER,
        I_ARBURST => gmem0_ARBURST,
        I_ARREGION => gmem0_ARREGION,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => gmem0_AWADDR,
        I_AWID => gmem0_AWID,
        I_AWLEN => gmem0_AWLEN,
        I_AWSIZE => gmem0_AWSIZE,
        I_AWLOCK => gmem0_AWLOCK,
        I_AWCACHE => gmem0_AWCACHE,
        I_AWQOS => gmem0_AWQOS,
        I_AWPROT => gmem0_AWPROT,
        I_AWUSER => gmem0_AWUSER,
        I_AWBURST => gmem0_AWBURST,
        I_AWREGION => gmem0_AWREGION,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WDATA,
        I_WID => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WID,
        I_WUSER => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WUSER,
        I_WLAST => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WLAST,
        I_WSTRB => grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    gmem1_m_axi_U : component QuantumMonteCarloU50_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem1_ARVALID,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => gmem1_ARADDR,
        I_ARID => gmem1_ARID,
        I_ARLEN => gmem1_ARLEN,
        I_ARSIZE => gmem1_ARSIZE,
        I_ARLOCK => gmem1_ARLOCK,
        I_ARCACHE => gmem1_ARCACHE,
        I_ARQOS => gmem1_ARQOS,
        I_ARPROT => gmem1_ARPROT,
        I_ARUSER => gmem1_ARUSER,
        I_ARBURST => gmem1_ARBURST,
        I_ARREGION => gmem1_ARREGION,
        I_RVALID => gmem1_RVALID,
        I_RREADY => gmem1_RREADY,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem1_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem1_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    gmem2_m_axi_U : component QuantumMonteCarloU50_gmem2_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM2_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM2_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM2_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM2_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM2_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM2_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM2_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM2_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM2_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM2_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM2_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem2_AWVALID,
        AWREADY => m_axi_gmem2_AWREADY,
        AWADDR => m_axi_gmem2_AWADDR,
        AWID => m_axi_gmem2_AWID,
        AWLEN => m_axi_gmem2_AWLEN,
        AWSIZE => m_axi_gmem2_AWSIZE,
        AWBURST => m_axi_gmem2_AWBURST,
        AWLOCK => m_axi_gmem2_AWLOCK,
        AWCACHE => m_axi_gmem2_AWCACHE,
        AWPROT => m_axi_gmem2_AWPROT,
        AWQOS => m_axi_gmem2_AWQOS,
        AWREGION => m_axi_gmem2_AWREGION,
        AWUSER => m_axi_gmem2_AWUSER,
        WVALID => m_axi_gmem2_WVALID,
        WREADY => m_axi_gmem2_WREADY,
        WDATA => m_axi_gmem2_WDATA,
        WSTRB => m_axi_gmem2_WSTRB,
        WLAST => m_axi_gmem2_WLAST,
        WID => m_axi_gmem2_WID,
        WUSER => m_axi_gmem2_WUSER,
        ARVALID => m_axi_gmem2_ARVALID,
        ARREADY => m_axi_gmem2_ARREADY,
        ARADDR => m_axi_gmem2_ARADDR,
        ARID => m_axi_gmem2_ARID,
        ARLEN => m_axi_gmem2_ARLEN,
        ARSIZE => m_axi_gmem2_ARSIZE,
        ARBURST => m_axi_gmem2_ARBURST,
        ARLOCK => m_axi_gmem2_ARLOCK,
        ARCACHE => m_axi_gmem2_ARCACHE,
        ARPROT => m_axi_gmem2_ARPROT,
        ARQOS => m_axi_gmem2_ARQOS,
        ARREGION => m_axi_gmem2_ARREGION,
        ARUSER => m_axi_gmem2_ARUSER,
        RVALID => m_axi_gmem2_RVALID,
        RREADY => m_axi_gmem2_RREADY,
        RDATA => m_axi_gmem2_RDATA,
        RLAST => m_axi_gmem2_RLAST,
        RID => m_axi_gmem2_RID,
        RUSER => m_axi_gmem2_RUSER,
        RRESP => m_axi_gmem2_RRESP,
        BVALID => m_axi_gmem2_BVALID,
        BREADY => m_axi_gmem2_BREADY,
        BRESP => m_axi_gmem2_BRESP,
        BID => m_axi_gmem2_BID,
        BUSER => m_axi_gmem2_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem2_ARVALID,
        I_ARREADY => gmem2_ARREADY,
        I_ARADDR => gmem2_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem2_RVALID,
        I_RREADY => gmem2_RREADY,
        I_RDATA => gmem2_RDATA,
        I_RID => gmem2_RID,
        I_RUSER => gmem2_RUSER,
        I_RRESP => gmem2_RRESP,
        I_RLAST => gmem2_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem2_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem2_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem2_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem2_BRESP,
        I_BID => gmem2_BID,
        I_BUSER => gmem2_BUSER);

    gmem3_m_axi_U : component QuantumMonteCarloU50_gmem3_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 512,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM3_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM3_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM3_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM3_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM3_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM3_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM3_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM3_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM3_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM3_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM3_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem3_AWVALID,
        AWREADY => m_axi_gmem3_AWREADY,
        AWADDR => m_axi_gmem3_AWADDR,
        AWID => m_axi_gmem3_AWID,
        AWLEN => m_axi_gmem3_AWLEN,
        AWSIZE => m_axi_gmem3_AWSIZE,
        AWBURST => m_axi_gmem3_AWBURST,
        AWLOCK => m_axi_gmem3_AWLOCK,
        AWCACHE => m_axi_gmem3_AWCACHE,
        AWPROT => m_axi_gmem3_AWPROT,
        AWQOS => m_axi_gmem3_AWQOS,
        AWREGION => m_axi_gmem3_AWREGION,
        AWUSER => m_axi_gmem3_AWUSER,
        WVALID => m_axi_gmem3_WVALID,
        WREADY => m_axi_gmem3_WREADY,
        WDATA => m_axi_gmem3_WDATA,
        WSTRB => m_axi_gmem3_WSTRB,
        WLAST => m_axi_gmem3_WLAST,
        WID => m_axi_gmem3_WID,
        WUSER => m_axi_gmem3_WUSER,
        ARVALID => m_axi_gmem3_ARVALID,
        ARREADY => m_axi_gmem3_ARREADY,
        ARADDR => m_axi_gmem3_ARADDR,
        ARID => m_axi_gmem3_ARID,
        ARLEN => m_axi_gmem3_ARLEN,
        ARSIZE => m_axi_gmem3_ARSIZE,
        ARBURST => m_axi_gmem3_ARBURST,
        ARLOCK => m_axi_gmem3_ARLOCK,
        ARCACHE => m_axi_gmem3_ARCACHE,
        ARPROT => m_axi_gmem3_ARPROT,
        ARQOS => m_axi_gmem3_ARQOS,
        ARREGION => m_axi_gmem3_ARREGION,
        ARUSER => m_axi_gmem3_ARUSER,
        RVALID => m_axi_gmem3_RVALID,
        RREADY => m_axi_gmem3_RREADY,
        RDATA => m_axi_gmem3_RDATA,
        RLAST => m_axi_gmem3_RLAST,
        RID => m_axi_gmem3_RID,
        RUSER => m_axi_gmem3_RUSER,
        RRESP => m_axi_gmem3_RRESP,
        BVALID => m_axi_gmem3_BVALID,
        BREADY => m_axi_gmem3_BREADY,
        BRESP => m_axi_gmem3_BRESP,
        BID => m_axi_gmem3_BID,
        BUSER => m_axi_gmem3_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem3_ARVALID,
        I_ARREADY => gmem3_ARREADY,
        I_ARADDR => gmem3_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem3_RVALID,
        I_RREADY => gmem3_RREADY,
        I_RDATA => gmem3_RDATA,
        I_RID => gmem3_RID,
        I_RUSER => gmem3_RUSER,
        I_RRESP => gmem3_RRESP,
        I_RLAST => gmem3_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem3_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem3_WREADY,
        I_WDATA => ap_const_lv512_lc_1,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv64_0,
        I_BVALID => gmem3_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem3_BRESP,
        I_BID => gmem3_BID,
        I_BUSER => gmem3_BUSER);

    fmul_32ns_32ns_32_4_max_dsp_1_U115 : component QuantumMonteCarloU50_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => Jperp,
        din1 => ap_const_lv32_41000000,
        ce => grp_fu_698_ce,
        dout => grp_fu_698_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state294) and (gmem0_BVALID = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state219)) then 
                    grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_ready = ap_const_logic_1)) then 
                    grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
                    grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_ready = ap_const_logic_1)) then 
                    grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_ready = ap_const_logic_1)) then 
                    grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state225)) then 
                    grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_ready = ap_const_logic_1)) then 
                    grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnitFinal_fu_611_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnitFinal_fu_611_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnitFinal_fu_611_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnitFinal_fu_611_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnitFinal_fu_611_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnitFinal_fu_628_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnitFinal_fu_628_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnitFinal_fu_628_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnitFinal_fu_628_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnitFinal_fu_628_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnitFinal_fu_645_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnitFinal_fu_645_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnitFinal_fu_645_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnitFinal_fu_645_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnitFinal_fu_645_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnitFinal_fu_662_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnitFinal_fu_662_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnitFinal_fu_662_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnitFinal_fu_662_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnitFinal_fu_662_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnit_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnit_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnit_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnit_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnit_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnit_fu_569_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnit_fu_569_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnit_fu_569_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnit_fu_569_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnit_fu_569_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnit_fu_583_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnit_fu_583_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnit_fu_583_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnit_fu_583_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnit_fu_583_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_TrotterUnit_fu_597_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_TrotterUnit_fu_597_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                    grp_TrotterUnit_fu_597_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_TrotterUnit_fu_597_ap_ready = ap_const_logic_1)) then 
                    grp_TrotterUnit_fu_597_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    dH_0_0_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                dH_0_0_reg_504 <= grp_TrotterUnit_fu_555_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                dH_0_0_reg_504 <= dH_0_reg_1943;
            end if; 
        end if;
    end process;

    dH_1_0_reg_494_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                dH_1_0_reg_494 <= grp_TrotterUnit_fu_569_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                dH_1_0_reg_494 <= dH_1_reg_1968;
            end if; 
        end if;
    end process;

    dH_2_0_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                dH_2_0_reg_484 <= grp_TrotterUnit_fu_583_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                dH_2_0_reg_484 <= dH_2_reg_1993;
            end if; 
        end if;
    end process;

    dH_3_0_reg_474_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                dH_3_0_reg_474 <= grp_TrotterUnit_fu_597_ap_return;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                dH_3_0_reg_474 <= dH_3_reg_2018;
            end if; 
        end if;
    end process;

    packOfst_4_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                packOfst_4_reg_514 <= packOfst_5_reg_2058;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                packOfst_4_reg_514 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    stage_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                stage_fu_198 <= ap_const_lv13_0;
            elsif (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then 
                stage_fu_198 <= add_ln214_reg_1661;
            end if; 
        end if;
    end process;

    step_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then 
                step_reg_525 <= step_1_reg_2053;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then 
                step_reg_525 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln214_fu_739_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                Ofst_reg_1666 <= Ofst_fu_751_p1;
                trunc_ln234_6_reg_1673 <= add_ln234_fu_767_p2(63 downto 6);
                trunc_ln235_4_reg_1678 <= add_ln235_fu_782_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                add_ln214_reg_1661 <= add_ln214_fu_745_p2;
                stage_1_reg_1646 <= stage_fu_198;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state148)) then
                add_ln223_reg_1853 <= add_ln223_fu_1239_p2;
                add_ln234_7_reg_1918 <= add_ln234_7_fu_1340_p2;
                add_ln235_7_reg_1928 <= add_ln235_7_fu_1345_p2;
                gmem2_addr_3_read_reg_1913 <= gmem2_RDATA;
                gmem3_addr_3_read_reg_1923 <= gmem3_RDATA;
                packOfst_reg_1858 <= stage_fu_198(11 downto 4);
                trunc_ln234_7_reg_1893 <= trunc_ln234_7_fu_1298_p1;
                trunc_ln235_3_reg_1898 <= trunc_ln235_3_fu_1324_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state149)) then
                bitcast_ln235_1_reg_1973 <= bitcast_ln235_1_fu_1403_p1;
                bitcast_ln235_2_reg_1998 <= bitcast_ln235_2_fu_1434_p1;
                bitcast_ln235_3_reg_2023 <= bitcast_ln235_3_fu_1506_p1;
                bitcast_ln235_reg_1948 <= bitcast_ln235_fu_1372_p1;
                dH_0_reg_1943 <= dH_0_fu_1369_p1;
                dH_1_reg_1968 <= dH_1_fu_1400_p1;
                dH_2_reg_1993 <= dH_2_fu_1431_p1;
                dH_3_reg_2018 <= dH_3_fu_1482_p1;
                p_Result_129_reg_1938 <= p_Result_129_fu_1361_p3;
                p_Result_130_reg_1958 <= p_Result_130_fu_1384_p3;
                p_Result_131_reg_1963 <= p_Result_131_fu_1392_p3;
                p_Result_132_reg_1983 <= p_Result_132_fu_1415_p3;
                p_Result_133_reg_1988 <= p_Result_133_fu_1423_p3;
                p_Result_134_reg_2008 <= p_Result_134_fu_1446_p3;
                p_Result_135_reg_2013 <= p_Result_135_fu_1454_p3;
                p_Result_s_reg_1933 <= p_Result_s_fu_1353_p3;
                spinOfst_1_reg_1953 <= spinOfst_1_fu_1375_p2;
                spinOfst_2_reg_1978 <= spinOfst_2_fu_1406_p2;
                spinOfst_3_reg_2003 <= spinOfst_3_fu_1437_p2;
                tmp_reg_2028 <= stage_fu_198(12 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                dHTunnel_reg_1622 <= grp_fu_698_p2;
                trunc_ln234_reg_1630 <= trunc_ln234_fu_728_p1;
                trunc_ln235_reg_1638 <= trunc_ln235_fu_732_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                gmem0_addr_reg_1583 <= sext_ln194_fu_718_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state146)) then
                gmem2_addr_1_read_reg_1823 <= gmem2_RDATA;
                gmem3_addr_1_read_reg_1828 <= gmem3_RDATA;
                spinOfst_reg_1804 <= spinOfst_fu_1106_p1;
                trunc_ln234_1_reg_1813 <= trunc_ln234_1_fu_1139_p1;
                trunc_ln235_1_reg_1818 <= trunc_ln235_1_fu_1165_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state147)) then
                gmem2_addr_2_read_reg_1843 <= gmem2_RDATA;
                gmem3_addr_2_read_reg_1848 <= gmem3_RDATA;
                trunc_ln234_3_reg_1833 <= trunc_ln234_3_fu_1198_p1;
                trunc_ln235_2_reg_1838 <= trunc_ln235_2_fu_1224_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state145)) then
                gmem2_addr_read_reg_1794 <= gmem2_RDATA;
                gmem3_addr_read_reg_1799 <= gmem3_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                packOfst_1_reg_1695 <= Ofst_1_fu_817_p2(11 downto 4);
                trunc_ln234_2_reg_1701 <= trunc_ln234_2_fu_844_p1;
                trunc_ln234_8_reg_1706 <= add_ln234_1_fu_848_p2(63 downto 6);
                trunc_ln7_reg_1711 <= add_ln235_2_fu_877_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                packOfst_2_reg_1728 <= Ofst_2_fu_912_p2(11 downto 4);
                packOfst_3_reg_1749 <= Ofst_3_fu_987_p2(11 downto 4);
                trunc_ln234_11_reg_1760 <= add_ln234_3_fu_1018_p2(63 downto 6);
                trunc_ln234_12_reg_1755 <= trunc_ln234_12_fu_1014_p1;
                trunc_ln234_5_reg_1734 <= trunc_ln234_5_fu_939_p1;
                trunc_ln234_s_reg_1739 <= add_ln234_2_fu_943_p2(63 downto 6);
                trunc_ln235_6_reg_1744 <= add_ln235_4_fu_972_p2(63 downto 6);
                trunc_ln235_8_reg_1765 <= add_ln235_6_fu_1051_p2(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1923_fu_1537_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state221))) then
                packOfst_5_reg_2058 <= packOfst_5_fu_1559_p2;
                step_1_reg_2053 <= step_1_fu_1553_p2;
                trunc_ln249_reg_2045 <= trunc_ln249_fu_1545_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149))) then
                trunc_ln8_reg_2032 <= add_ln223_reg_1853(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln_reg_1576 <= trotters(63 downto 6);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state224, ap_CS_fsm_state294, ap_CS_fsm_state149, tmp_fu_1510_p3, ap_CS_fsm_state75, ap_CS_fsm_state145, ap_CS_fsm_state76, ap_CS_fsm_state146, ap_CS_fsm_state77, ap_CS_fsm_state147, ap_CS_fsm_state78, ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state74, icmp_ln214_fu_739_p2, ap_CS_fsm_state221, tmp_1923_fu_1537_p3, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done, gmem0_AWREADY, gmem0_ARREADY, gmem0_BVALID, gmem2_RVALID, gmem3_RVALID, ap_CS_fsm_state220, ap_block_state220_on_subcall_done, ap_block_state222_on_subcall_done, ap_CS_fsm_state223, ap_CS_fsm_state226, ap_block_state75_io, ap_block_state76_io, ap_block_state77_io, ap_block_state78_io, ap_block_state149_io, ap_block_state223_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                if (((grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state73;
                end if;
            when ap_ST_fsm_state74 => 
                if (((icmp_ln214_fu_739_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state224;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state75 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state75) and (ap_const_boolean_0 = ap_block_state75_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state76;
                else
                    ap_NS_fsm <= ap_ST_fsm_state75;
                end if;
            when ap_ST_fsm_state76 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_const_boolean_0 = ap_block_state76_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state77 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state77) and (ap_const_boolean_0 = ap_block_state77_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state78;
                else
                    ap_NS_fsm <= ap_ST_fsm_state77;
                end if;
            when ap_ST_fsm_state78 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state78) and (ap_const_boolean_0 = ap_block_state78_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state79;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                ap_NS_fsm <= ap_ST_fsm_state90;
            when ap_ST_fsm_state90 => 
                ap_NS_fsm <= ap_ST_fsm_state91;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                ap_NS_fsm <= ap_ST_fsm_state99;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                ap_NS_fsm <= ap_ST_fsm_state101;
            when ap_ST_fsm_state101 => 
                ap_NS_fsm <= ap_ST_fsm_state102;
            when ap_ST_fsm_state102 => 
                ap_NS_fsm <= ap_ST_fsm_state103;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state107;
            when ap_ST_fsm_state107 => 
                ap_NS_fsm <= ap_ST_fsm_state108;
            when ap_ST_fsm_state108 => 
                ap_NS_fsm <= ap_ST_fsm_state109;
            when ap_ST_fsm_state109 => 
                ap_NS_fsm <= ap_ST_fsm_state110;
            when ap_ST_fsm_state110 => 
                ap_NS_fsm <= ap_ST_fsm_state111;
            when ap_ST_fsm_state111 => 
                ap_NS_fsm <= ap_ST_fsm_state112;
            when ap_ST_fsm_state112 => 
                ap_NS_fsm <= ap_ST_fsm_state113;
            when ap_ST_fsm_state113 => 
                ap_NS_fsm <= ap_ST_fsm_state114;
            when ap_ST_fsm_state114 => 
                ap_NS_fsm <= ap_ST_fsm_state115;
            when ap_ST_fsm_state115 => 
                ap_NS_fsm <= ap_ST_fsm_state116;
            when ap_ST_fsm_state116 => 
                ap_NS_fsm <= ap_ST_fsm_state117;
            when ap_ST_fsm_state117 => 
                ap_NS_fsm <= ap_ST_fsm_state118;
            when ap_ST_fsm_state118 => 
                ap_NS_fsm <= ap_ST_fsm_state119;
            when ap_ST_fsm_state119 => 
                ap_NS_fsm <= ap_ST_fsm_state120;
            when ap_ST_fsm_state120 => 
                ap_NS_fsm <= ap_ST_fsm_state121;
            when ap_ST_fsm_state121 => 
                ap_NS_fsm <= ap_ST_fsm_state122;
            when ap_ST_fsm_state122 => 
                ap_NS_fsm <= ap_ST_fsm_state123;
            when ap_ST_fsm_state123 => 
                ap_NS_fsm <= ap_ST_fsm_state124;
            when ap_ST_fsm_state124 => 
                ap_NS_fsm <= ap_ST_fsm_state125;
            when ap_ST_fsm_state125 => 
                ap_NS_fsm <= ap_ST_fsm_state126;
            when ap_ST_fsm_state126 => 
                ap_NS_fsm <= ap_ST_fsm_state127;
            when ap_ST_fsm_state127 => 
                ap_NS_fsm <= ap_ST_fsm_state128;
            when ap_ST_fsm_state128 => 
                ap_NS_fsm <= ap_ST_fsm_state129;
            when ap_ST_fsm_state129 => 
                ap_NS_fsm <= ap_ST_fsm_state130;
            when ap_ST_fsm_state130 => 
                ap_NS_fsm <= ap_ST_fsm_state131;
            when ap_ST_fsm_state131 => 
                ap_NS_fsm <= ap_ST_fsm_state132;
            when ap_ST_fsm_state132 => 
                ap_NS_fsm <= ap_ST_fsm_state133;
            when ap_ST_fsm_state133 => 
                ap_NS_fsm <= ap_ST_fsm_state134;
            when ap_ST_fsm_state134 => 
                ap_NS_fsm <= ap_ST_fsm_state135;
            when ap_ST_fsm_state135 => 
                ap_NS_fsm <= ap_ST_fsm_state136;
            when ap_ST_fsm_state136 => 
                ap_NS_fsm <= ap_ST_fsm_state137;
            when ap_ST_fsm_state137 => 
                ap_NS_fsm <= ap_ST_fsm_state138;
            when ap_ST_fsm_state138 => 
                ap_NS_fsm <= ap_ST_fsm_state139;
            when ap_ST_fsm_state139 => 
                ap_NS_fsm <= ap_ST_fsm_state140;
            when ap_ST_fsm_state140 => 
                ap_NS_fsm <= ap_ST_fsm_state141;
            when ap_ST_fsm_state141 => 
                ap_NS_fsm <= ap_ST_fsm_state142;
            when ap_ST_fsm_state142 => 
                ap_NS_fsm <= ap_ST_fsm_state143;
            when ap_ST_fsm_state143 => 
                ap_NS_fsm <= ap_ST_fsm_state144;
            when ap_ST_fsm_state144 => 
                ap_NS_fsm <= ap_ST_fsm_state145;
            when ap_ST_fsm_state145 => 
                if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state145))) then
                    ap_NS_fsm <= ap_ST_fsm_state146;
                else
                    ap_NS_fsm <= ap_ST_fsm_state145;
                end if;
            when ap_ST_fsm_state146 => 
                if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state146))) then
                    ap_NS_fsm <= ap_ST_fsm_state147;
                else
                    ap_NS_fsm <= ap_ST_fsm_state146;
                end if;
            when ap_ST_fsm_state147 => 
                if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state147))) then
                    ap_NS_fsm <= ap_ST_fsm_state148;
                else
                    ap_NS_fsm <= ap_ST_fsm_state147;
                end if;
            when ap_ST_fsm_state148 => 
                if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then
                    ap_NS_fsm <= ap_ST_fsm_state149;
                else
                    ap_NS_fsm <= ap_ST_fsm_state148;
                end if;
            when ap_ST_fsm_state149 => 
                if (((tmp_fu_1510_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state149) and (ap_const_boolean_0 = ap_block_state149_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state220;
                elsif (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149) and (ap_const_boolean_0 = ap_block_state149_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state150;
                else
                    ap_NS_fsm <= ap_ST_fsm_state149;
                end if;
            when ap_ST_fsm_state150 => 
                ap_NS_fsm <= ap_ST_fsm_state151;
            when ap_ST_fsm_state151 => 
                ap_NS_fsm <= ap_ST_fsm_state152;
            when ap_ST_fsm_state152 => 
                ap_NS_fsm <= ap_ST_fsm_state153;
            when ap_ST_fsm_state153 => 
                ap_NS_fsm <= ap_ST_fsm_state154;
            when ap_ST_fsm_state154 => 
                ap_NS_fsm <= ap_ST_fsm_state155;
            when ap_ST_fsm_state155 => 
                ap_NS_fsm <= ap_ST_fsm_state156;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state157;
            when ap_ST_fsm_state157 => 
                ap_NS_fsm <= ap_ST_fsm_state158;
            when ap_ST_fsm_state158 => 
                ap_NS_fsm <= ap_ST_fsm_state159;
            when ap_ST_fsm_state159 => 
                ap_NS_fsm <= ap_ST_fsm_state160;
            when ap_ST_fsm_state160 => 
                ap_NS_fsm <= ap_ST_fsm_state161;
            when ap_ST_fsm_state161 => 
                ap_NS_fsm <= ap_ST_fsm_state162;
            when ap_ST_fsm_state162 => 
                ap_NS_fsm <= ap_ST_fsm_state163;
            when ap_ST_fsm_state163 => 
                ap_NS_fsm <= ap_ST_fsm_state164;
            when ap_ST_fsm_state164 => 
                ap_NS_fsm <= ap_ST_fsm_state165;
            when ap_ST_fsm_state165 => 
                ap_NS_fsm <= ap_ST_fsm_state166;
            when ap_ST_fsm_state166 => 
                ap_NS_fsm <= ap_ST_fsm_state167;
            when ap_ST_fsm_state167 => 
                ap_NS_fsm <= ap_ST_fsm_state168;
            when ap_ST_fsm_state168 => 
                ap_NS_fsm <= ap_ST_fsm_state169;
            when ap_ST_fsm_state169 => 
                ap_NS_fsm <= ap_ST_fsm_state170;
            when ap_ST_fsm_state170 => 
                ap_NS_fsm <= ap_ST_fsm_state171;
            when ap_ST_fsm_state171 => 
                ap_NS_fsm <= ap_ST_fsm_state172;
            when ap_ST_fsm_state172 => 
                ap_NS_fsm <= ap_ST_fsm_state173;
            when ap_ST_fsm_state173 => 
                ap_NS_fsm <= ap_ST_fsm_state174;
            when ap_ST_fsm_state174 => 
                ap_NS_fsm <= ap_ST_fsm_state175;
            when ap_ST_fsm_state175 => 
                ap_NS_fsm <= ap_ST_fsm_state176;
            when ap_ST_fsm_state176 => 
                ap_NS_fsm <= ap_ST_fsm_state177;
            when ap_ST_fsm_state177 => 
                ap_NS_fsm <= ap_ST_fsm_state178;
            when ap_ST_fsm_state178 => 
                ap_NS_fsm <= ap_ST_fsm_state179;
            when ap_ST_fsm_state179 => 
                ap_NS_fsm <= ap_ST_fsm_state180;
            when ap_ST_fsm_state180 => 
                ap_NS_fsm <= ap_ST_fsm_state181;
            when ap_ST_fsm_state181 => 
                ap_NS_fsm <= ap_ST_fsm_state182;
            when ap_ST_fsm_state182 => 
                ap_NS_fsm <= ap_ST_fsm_state183;
            when ap_ST_fsm_state183 => 
                ap_NS_fsm <= ap_ST_fsm_state184;
            when ap_ST_fsm_state184 => 
                ap_NS_fsm <= ap_ST_fsm_state185;
            when ap_ST_fsm_state185 => 
                ap_NS_fsm <= ap_ST_fsm_state186;
            when ap_ST_fsm_state186 => 
                ap_NS_fsm <= ap_ST_fsm_state187;
            when ap_ST_fsm_state187 => 
                ap_NS_fsm <= ap_ST_fsm_state188;
            when ap_ST_fsm_state188 => 
                ap_NS_fsm <= ap_ST_fsm_state189;
            when ap_ST_fsm_state189 => 
                ap_NS_fsm <= ap_ST_fsm_state190;
            when ap_ST_fsm_state190 => 
                ap_NS_fsm <= ap_ST_fsm_state191;
            when ap_ST_fsm_state191 => 
                ap_NS_fsm <= ap_ST_fsm_state192;
            when ap_ST_fsm_state192 => 
                ap_NS_fsm <= ap_ST_fsm_state193;
            when ap_ST_fsm_state193 => 
                ap_NS_fsm <= ap_ST_fsm_state194;
            when ap_ST_fsm_state194 => 
                ap_NS_fsm <= ap_ST_fsm_state195;
            when ap_ST_fsm_state195 => 
                ap_NS_fsm <= ap_ST_fsm_state196;
            when ap_ST_fsm_state196 => 
                ap_NS_fsm <= ap_ST_fsm_state197;
            when ap_ST_fsm_state197 => 
                ap_NS_fsm <= ap_ST_fsm_state198;
            when ap_ST_fsm_state198 => 
                ap_NS_fsm <= ap_ST_fsm_state199;
            when ap_ST_fsm_state199 => 
                ap_NS_fsm <= ap_ST_fsm_state200;
            when ap_ST_fsm_state200 => 
                ap_NS_fsm <= ap_ST_fsm_state201;
            when ap_ST_fsm_state201 => 
                ap_NS_fsm <= ap_ST_fsm_state202;
            when ap_ST_fsm_state202 => 
                ap_NS_fsm <= ap_ST_fsm_state203;
            when ap_ST_fsm_state203 => 
                ap_NS_fsm <= ap_ST_fsm_state204;
            when ap_ST_fsm_state204 => 
                ap_NS_fsm <= ap_ST_fsm_state205;
            when ap_ST_fsm_state205 => 
                ap_NS_fsm <= ap_ST_fsm_state206;
            when ap_ST_fsm_state206 => 
                ap_NS_fsm <= ap_ST_fsm_state207;
            when ap_ST_fsm_state207 => 
                ap_NS_fsm <= ap_ST_fsm_state208;
            when ap_ST_fsm_state208 => 
                ap_NS_fsm <= ap_ST_fsm_state209;
            when ap_ST_fsm_state209 => 
                ap_NS_fsm <= ap_ST_fsm_state210;
            when ap_ST_fsm_state210 => 
                ap_NS_fsm <= ap_ST_fsm_state211;
            when ap_ST_fsm_state211 => 
                ap_NS_fsm <= ap_ST_fsm_state212;
            when ap_ST_fsm_state212 => 
                ap_NS_fsm <= ap_ST_fsm_state213;
            when ap_ST_fsm_state213 => 
                ap_NS_fsm <= ap_ST_fsm_state214;
            when ap_ST_fsm_state214 => 
                ap_NS_fsm <= ap_ST_fsm_state215;
            when ap_ST_fsm_state215 => 
                ap_NS_fsm <= ap_ST_fsm_state216;
            when ap_ST_fsm_state216 => 
                ap_NS_fsm <= ap_ST_fsm_state217;
            when ap_ST_fsm_state217 => 
                ap_NS_fsm <= ap_ST_fsm_state218;
            when ap_ST_fsm_state218 => 
                ap_NS_fsm <= ap_ST_fsm_state219;
            when ap_ST_fsm_state219 => 
                ap_NS_fsm <= ap_ST_fsm_state220;
            when ap_ST_fsm_state220 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state220) and (ap_const_boolean_0 = ap_block_state220_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state221;
                else
                    ap_NS_fsm <= ap_ST_fsm_state220;
                end if;
            when ap_ST_fsm_state221 => 
                if (((tmp_1923_fu_1537_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state221))) then
                    ap_NS_fsm <= ap_ST_fsm_state223;
                else
                    ap_NS_fsm <= ap_ST_fsm_state222;
                end if;
            when ap_ST_fsm_state222 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state222) and (ap_const_boolean_0 = ap_block_state222_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state221;
                else
                    ap_NS_fsm <= ap_ST_fsm_state222;
                end if;
            when ap_ST_fsm_state223 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state223) and (ap_const_boolean_0 = ap_block_state223_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state223;
                end if;
            when ap_ST_fsm_state224 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state224) and (gmem0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state225;
                else
                    ap_NS_fsm <= ap_ST_fsm_state224;
                end if;
            when ap_ST_fsm_state225 => 
                ap_NS_fsm <= ap_ST_fsm_state226;
            when ap_ST_fsm_state226 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state226) and (grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state227;
                else
                    ap_NS_fsm <= ap_ST_fsm_state226;
                end if;
            when ap_ST_fsm_state227 => 
                ap_NS_fsm <= ap_ST_fsm_state228;
            when ap_ST_fsm_state228 => 
                ap_NS_fsm <= ap_ST_fsm_state229;
            when ap_ST_fsm_state229 => 
                ap_NS_fsm <= ap_ST_fsm_state230;
            when ap_ST_fsm_state230 => 
                ap_NS_fsm <= ap_ST_fsm_state231;
            when ap_ST_fsm_state231 => 
                ap_NS_fsm <= ap_ST_fsm_state232;
            when ap_ST_fsm_state232 => 
                ap_NS_fsm <= ap_ST_fsm_state233;
            when ap_ST_fsm_state233 => 
                ap_NS_fsm <= ap_ST_fsm_state234;
            when ap_ST_fsm_state234 => 
                ap_NS_fsm <= ap_ST_fsm_state235;
            when ap_ST_fsm_state235 => 
                ap_NS_fsm <= ap_ST_fsm_state236;
            when ap_ST_fsm_state236 => 
                ap_NS_fsm <= ap_ST_fsm_state237;
            when ap_ST_fsm_state237 => 
                ap_NS_fsm <= ap_ST_fsm_state238;
            when ap_ST_fsm_state238 => 
                ap_NS_fsm <= ap_ST_fsm_state239;
            when ap_ST_fsm_state239 => 
                ap_NS_fsm <= ap_ST_fsm_state240;
            when ap_ST_fsm_state240 => 
                ap_NS_fsm <= ap_ST_fsm_state241;
            when ap_ST_fsm_state241 => 
                ap_NS_fsm <= ap_ST_fsm_state242;
            when ap_ST_fsm_state242 => 
                ap_NS_fsm <= ap_ST_fsm_state243;
            when ap_ST_fsm_state243 => 
                ap_NS_fsm <= ap_ST_fsm_state244;
            when ap_ST_fsm_state244 => 
                ap_NS_fsm <= ap_ST_fsm_state245;
            when ap_ST_fsm_state245 => 
                ap_NS_fsm <= ap_ST_fsm_state246;
            when ap_ST_fsm_state246 => 
                ap_NS_fsm <= ap_ST_fsm_state247;
            when ap_ST_fsm_state247 => 
                ap_NS_fsm <= ap_ST_fsm_state248;
            when ap_ST_fsm_state248 => 
                ap_NS_fsm <= ap_ST_fsm_state249;
            when ap_ST_fsm_state249 => 
                ap_NS_fsm <= ap_ST_fsm_state250;
            when ap_ST_fsm_state250 => 
                ap_NS_fsm <= ap_ST_fsm_state251;
            when ap_ST_fsm_state251 => 
                ap_NS_fsm <= ap_ST_fsm_state252;
            when ap_ST_fsm_state252 => 
                ap_NS_fsm <= ap_ST_fsm_state253;
            when ap_ST_fsm_state253 => 
                ap_NS_fsm <= ap_ST_fsm_state254;
            when ap_ST_fsm_state254 => 
                ap_NS_fsm <= ap_ST_fsm_state255;
            when ap_ST_fsm_state255 => 
                ap_NS_fsm <= ap_ST_fsm_state256;
            when ap_ST_fsm_state256 => 
                ap_NS_fsm <= ap_ST_fsm_state257;
            when ap_ST_fsm_state257 => 
                ap_NS_fsm <= ap_ST_fsm_state258;
            when ap_ST_fsm_state258 => 
                ap_NS_fsm <= ap_ST_fsm_state259;
            when ap_ST_fsm_state259 => 
                ap_NS_fsm <= ap_ST_fsm_state260;
            when ap_ST_fsm_state260 => 
                ap_NS_fsm <= ap_ST_fsm_state261;
            when ap_ST_fsm_state261 => 
                ap_NS_fsm <= ap_ST_fsm_state262;
            when ap_ST_fsm_state262 => 
                ap_NS_fsm <= ap_ST_fsm_state263;
            when ap_ST_fsm_state263 => 
                ap_NS_fsm <= ap_ST_fsm_state264;
            when ap_ST_fsm_state264 => 
                ap_NS_fsm <= ap_ST_fsm_state265;
            when ap_ST_fsm_state265 => 
                ap_NS_fsm <= ap_ST_fsm_state266;
            when ap_ST_fsm_state266 => 
                ap_NS_fsm <= ap_ST_fsm_state267;
            when ap_ST_fsm_state267 => 
                ap_NS_fsm <= ap_ST_fsm_state268;
            when ap_ST_fsm_state268 => 
                ap_NS_fsm <= ap_ST_fsm_state269;
            when ap_ST_fsm_state269 => 
                ap_NS_fsm <= ap_ST_fsm_state270;
            when ap_ST_fsm_state270 => 
                ap_NS_fsm <= ap_ST_fsm_state271;
            when ap_ST_fsm_state271 => 
                ap_NS_fsm <= ap_ST_fsm_state272;
            when ap_ST_fsm_state272 => 
                ap_NS_fsm <= ap_ST_fsm_state273;
            when ap_ST_fsm_state273 => 
                ap_NS_fsm <= ap_ST_fsm_state274;
            when ap_ST_fsm_state274 => 
                ap_NS_fsm <= ap_ST_fsm_state275;
            when ap_ST_fsm_state275 => 
                ap_NS_fsm <= ap_ST_fsm_state276;
            when ap_ST_fsm_state276 => 
                ap_NS_fsm <= ap_ST_fsm_state277;
            when ap_ST_fsm_state277 => 
                ap_NS_fsm <= ap_ST_fsm_state278;
            when ap_ST_fsm_state278 => 
                ap_NS_fsm <= ap_ST_fsm_state279;
            when ap_ST_fsm_state279 => 
                ap_NS_fsm <= ap_ST_fsm_state280;
            when ap_ST_fsm_state280 => 
                ap_NS_fsm <= ap_ST_fsm_state281;
            when ap_ST_fsm_state281 => 
                ap_NS_fsm <= ap_ST_fsm_state282;
            when ap_ST_fsm_state282 => 
                ap_NS_fsm <= ap_ST_fsm_state283;
            when ap_ST_fsm_state283 => 
                ap_NS_fsm <= ap_ST_fsm_state284;
            when ap_ST_fsm_state284 => 
                ap_NS_fsm <= ap_ST_fsm_state285;
            when ap_ST_fsm_state285 => 
                ap_NS_fsm <= ap_ST_fsm_state286;
            when ap_ST_fsm_state286 => 
                ap_NS_fsm <= ap_ST_fsm_state287;
            when ap_ST_fsm_state287 => 
                ap_NS_fsm <= ap_ST_fsm_state288;
            when ap_ST_fsm_state288 => 
                ap_NS_fsm <= ap_ST_fsm_state289;
            when ap_ST_fsm_state289 => 
                ap_NS_fsm <= ap_ST_fsm_state290;
            when ap_ST_fsm_state290 => 
                ap_NS_fsm <= ap_ST_fsm_state291;
            when ap_ST_fsm_state291 => 
                ap_NS_fsm <= ap_ST_fsm_state292;
            when ap_ST_fsm_state292 => 
                ap_NS_fsm <= ap_ST_fsm_state293;
            when ap_ST_fsm_state293 => 
                ap_NS_fsm <= ap_ST_fsm_state294;
            when ap_ST_fsm_state294 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state294) and (gmem0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state294;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    JcoupLocal_0_address0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_555_JcoupLocal_address0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_address0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_0_address0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_0_address0 <= grp_TrotterUnit_fu_555_JcoupLocal_address0;
        else 
            JcoupLocal_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    JcoupLocal_0_ce0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_555_JcoupLocal_ce0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_ce0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_0_ce0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_0_ce0 <= grp_TrotterUnit_fu_555_JcoupLocal_ce0;
        else 
            JcoupLocal_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_0_ce1_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_ce1, ap_CS_fsm_state220)
    begin
        if (((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220))) then 
            JcoupLocal_0_ce1 <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_ce1;
        else 
            JcoupLocal_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_0_we1_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_we1, ap_CS_fsm_state220)
    begin
        if (((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220))) then 
            JcoupLocal_0_we1 <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_JcoupLocal_0_we1;
        else 
            JcoupLocal_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_1_address0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_569_JcoupLocal_address0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_1_address0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_1_address0 <= grp_TrotterUnit_fu_569_JcoupLocal_address0;
        else 
            JcoupLocal_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    JcoupLocal_1_ce0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_569_JcoupLocal_ce0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_1_ce0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_1_ce0 <= grp_TrotterUnit_fu_569_JcoupLocal_ce0;
        else 
            JcoupLocal_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_1_ce1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_1_ce1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_ce1;
        else 
            JcoupLocal_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_1_we1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_we1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_1_we1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_1_we1;
        else 
            JcoupLocal_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_2_address0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_583_JcoupLocal_address0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_2_address0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_2_address0 <= grp_TrotterUnit_fu_583_JcoupLocal_address0;
        else 
            JcoupLocal_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    JcoupLocal_2_ce0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_583_JcoupLocal_ce0, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_2_ce0 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_2_ce0 <= grp_TrotterUnit_fu_583_JcoupLocal_ce0;
        else 
            JcoupLocal_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_2_ce1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_2_ce1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_ce1;
        else 
            JcoupLocal_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_2_we1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_we1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_2_we1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_2_we1;
        else 
            JcoupLocal_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_3_ce0_assign_proc : process(ap_CS_fsm_state222, grp_TrotterUnit_fu_597_JcoupLocal_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            JcoupLocal_3_ce0 <= grp_TrotterUnit_fu_597_JcoupLocal_ce0;
        else 
            JcoupLocal_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_3_ce1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_ce1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_3_ce1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_ce1;
        else 
            JcoupLocal_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    JcoupLocal_3_we1_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_we1, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            JcoupLocal_3_we1 <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_JcoupLocal_3_we1;
        else 
            JcoupLocal_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    Ofst_1_fu_817_p2 <= std_logic_vector(unsigned(Ofst_reg_1666) + unsigned(ap_const_lv12_FFF));
    Ofst_2_fu_912_p2 <= std_logic_vector(unsigned(Ofst_reg_1666) + unsigned(ap_const_lv12_FFE));
    Ofst_3_fu_987_p2 <= std_logic_vector(unsigned(Ofst_reg_1666) + unsigned(ap_const_lv12_FFD));
    Ofst_fu_751_p1 <= stage_fu_198(12 - 1 downto 0);
    add_ln214_fu_745_p2 <= std_logic_vector(unsigned(stage_fu_198) + unsigned(ap_const_lv13_1));
    add_ln223_fu_1239_p2 <= std_logic_vector(unsigned(zext_ln223_fu_1235_p1) + unsigned(Jcoup));
    add_ln234_1_fu_848_p2 <= std_logic_vector(unsigned(zext_ln234_2_fu_840_p1) + unsigned(h));
    add_ln234_2_fu_943_p2 <= std_logic_vector(unsigned(zext_ln234_4_fu_935_p1) + unsigned(h));
    add_ln234_3_fu_1018_p2 <= std_logic_vector(unsigned(zext_ln234_6_fu_1010_p1) + unsigned(h));
    add_ln234_4_fu_1117_p2 <= std_logic_vector(unsigned(trunc_ln234_4_fu_1109_p3) + unsigned(trunc_ln234_reg_1630));
    add_ln234_5_fu_1176_p2 <= std_logic_vector(unsigned(trunc_ln6_fu_1169_p3) + unsigned(trunc_ln234_reg_1630));
    add_ln234_6_fu_1276_p2 <= std_logic_vector(unsigned(trunc_ln234_9_fu_1269_p3) + unsigned(trunc_ln234_reg_1630));
    add_ln234_7_fu_1340_p2 <= std_logic_vector(unsigned(trunc_ln234_10_fu_1333_p3) + unsigned(trunc_ln234_reg_1630));
    add_ln234_fu_767_p2 <= std_logic_vector(unsigned(zext_ln234_fu_763_p1) + unsigned(h));
    add_ln235_1_fu_1143_p2 <= std_logic_vector(unsigned(trunc_ln234_4_fu_1109_p3) + unsigned(trunc_ln235_reg_1638));
    add_ln235_2_fu_877_p2 <= std_logic_vector(unsigned(zext_ln235_1_fu_873_p1) + unsigned(logRand));
    add_ln235_3_fu_1202_p2 <= std_logic_vector(unsigned(trunc_ln235_reg_1638) + unsigned(trunc_ln6_fu_1169_p3));
    add_ln235_4_fu_972_p2 <= std_logic_vector(unsigned(zext_ln235_3_fu_968_p1) + unsigned(logRand));
    add_ln235_5_fu_1302_p2 <= std_logic_vector(unsigned(trunc_ln235_reg_1638) + unsigned(trunc_ln234_9_fu_1269_p3));
    add_ln235_6_fu_1051_p2 <= std_logic_vector(unsigned(zext_ln235_5_fu_1047_p1) + unsigned(logRand));
    add_ln235_7_fu_1345_p2 <= std_logic_vector(unsigned(trunc_ln235_reg_1638) + unsigned(trunc_ln234_10_fu_1333_p3));
    add_ln235_fu_782_p2 <= std_logic_vector(unsigned(zext_ln234_fu_763_p1) + unsigned(logRand));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state145 <= ap_CS_fsm(144);
    ap_CS_fsm_state146 <= ap_CS_fsm(145);
    ap_CS_fsm_state147 <= ap_CS_fsm(146);
    ap_CS_fsm_state148 <= ap_CS_fsm(147);
    ap_CS_fsm_state149 <= ap_CS_fsm(148);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state219 <= ap_CS_fsm(218);
    ap_CS_fsm_state220 <= ap_CS_fsm(219);
    ap_CS_fsm_state221 <= ap_CS_fsm(220);
    ap_CS_fsm_state222 <= ap_CS_fsm(221);
    ap_CS_fsm_state223 <= ap_CS_fsm(222);
    ap_CS_fsm_state224 <= ap_CS_fsm(223);
    ap_CS_fsm_state225 <= ap_CS_fsm(224);
    ap_CS_fsm_state226 <= ap_CS_fsm(225);
    ap_CS_fsm_state294 <= ap_CS_fsm(293);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_ST_fsm_state100_blk <= ap_const_logic_0;
    ap_ST_fsm_state101_blk <= ap_const_logic_0;
    ap_ST_fsm_state102_blk <= ap_const_logic_0;
    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;
    ap_ST_fsm_state107_blk <= ap_const_logic_0;
    ap_ST_fsm_state108_blk <= ap_const_logic_0;
    ap_ST_fsm_state109_blk <= ap_const_logic_0;
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state110_blk <= ap_const_logic_0;
    ap_ST_fsm_state111_blk <= ap_const_logic_0;
    ap_ST_fsm_state112_blk <= ap_const_logic_0;
    ap_ST_fsm_state113_blk <= ap_const_logic_0;
    ap_ST_fsm_state114_blk <= ap_const_logic_0;
    ap_ST_fsm_state115_blk <= ap_const_logic_0;
    ap_ST_fsm_state116_blk <= ap_const_logic_0;
    ap_ST_fsm_state117_blk <= ap_const_logic_0;
    ap_ST_fsm_state118_blk <= ap_const_logic_0;
    ap_ST_fsm_state119_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state120_blk <= ap_const_logic_0;
    ap_ST_fsm_state121_blk <= ap_const_logic_0;
    ap_ST_fsm_state122_blk <= ap_const_logic_0;
    ap_ST_fsm_state123_blk <= ap_const_logic_0;
    ap_ST_fsm_state124_blk <= ap_const_logic_0;
    ap_ST_fsm_state125_blk <= ap_const_logic_0;
    ap_ST_fsm_state126_blk <= ap_const_logic_0;
    ap_ST_fsm_state127_blk <= ap_const_logic_0;
    ap_ST_fsm_state128_blk <= ap_const_logic_0;
    ap_ST_fsm_state129_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state130_blk <= ap_const_logic_0;
    ap_ST_fsm_state131_blk <= ap_const_logic_0;
    ap_ST_fsm_state132_blk <= ap_const_logic_0;
    ap_ST_fsm_state133_blk <= ap_const_logic_0;
    ap_ST_fsm_state134_blk <= ap_const_logic_0;
    ap_ST_fsm_state135_blk <= ap_const_logic_0;
    ap_ST_fsm_state136_blk <= ap_const_logic_0;
    ap_ST_fsm_state137_blk <= ap_const_logic_0;
    ap_ST_fsm_state138_blk <= ap_const_logic_0;
    ap_ST_fsm_state139_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state140_blk <= ap_const_logic_0;
    ap_ST_fsm_state141_blk <= ap_const_logic_0;
    ap_ST_fsm_state142_blk <= ap_const_logic_0;
    ap_ST_fsm_state143_blk <= ap_const_logic_0;
    ap_ST_fsm_state144_blk <= ap_const_logic_0;

    ap_ST_fsm_state145_blk_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
        if (((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state145_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state145_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state146_blk_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
        if (((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state146_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state146_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state147_blk_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
        if (((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state147_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state147_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state148_blk_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
        if (((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state148_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state148_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state149_blk_assign_proc : process(ap_block_state149_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state149_io)) then 
            ap_ST_fsm_state149_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state149_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state150_blk <= ap_const_logic_0;
    ap_ST_fsm_state151_blk <= ap_const_logic_0;
    ap_ST_fsm_state152_blk <= ap_const_logic_0;
    ap_ST_fsm_state153_blk <= ap_const_logic_0;
    ap_ST_fsm_state154_blk <= ap_const_logic_0;
    ap_ST_fsm_state155_blk <= ap_const_logic_0;
    ap_ST_fsm_state156_blk <= ap_const_logic_0;
    ap_ST_fsm_state157_blk <= ap_const_logic_0;
    ap_ST_fsm_state158_blk <= ap_const_logic_0;
    ap_ST_fsm_state159_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state160_blk <= ap_const_logic_0;
    ap_ST_fsm_state161_blk <= ap_const_logic_0;
    ap_ST_fsm_state162_blk <= ap_const_logic_0;
    ap_ST_fsm_state163_blk <= ap_const_logic_0;
    ap_ST_fsm_state164_blk <= ap_const_logic_0;
    ap_ST_fsm_state165_blk <= ap_const_logic_0;
    ap_ST_fsm_state166_blk <= ap_const_logic_0;
    ap_ST_fsm_state167_blk <= ap_const_logic_0;
    ap_ST_fsm_state168_blk <= ap_const_logic_0;
    ap_ST_fsm_state169_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state170_blk <= ap_const_logic_0;
    ap_ST_fsm_state171_blk <= ap_const_logic_0;
    ap_ST_fsm_state172_blk <= ap_const_logic_0;
    ap_ST_fsm_state173_blk <= ap_const_logic_0;
    ap_ST_fsm_state174_blk <= ap_const_logic_0;
    ap_ST_fsm_state175_blk <= ap_const_logic_0;
    ap_ST_fsm_state176_blk <= ap_const_logic_0;
    ap_ST_fsm_state177_blk <= ap_const_logic_0;
    ap_ST_fsm_state178_blk <= ap_const_logic_0;
    ap_ST_fsm_state179_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state180_blk <= ap_const_logic_0;
    ap_ST_fsm_state181_blk <= ap_const_logic_0;
    ap_ST_fsm_state182_blk <= ap_const_logic_0;
    ap_ST_fsm_state183_blk <= ap_const_logic_0;
    ap_ST_fsm_state184_blk <= ap_const_logic_0;
    ap_ST_fsm_state185_blk <= ap_const_logic_0;
    ap_ST_fsm_state186_blk <= ap_const_logic_0;
    ap_ST_fsm_state187_blk <= ap_const_logic_0;
    ap_ST_fsm_state188_blk <= ap_const_logic_0;
    ap_ST_fsm_state189_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state190_blk <= ap_const_logic_0;
    ap_ST_fsm_state191_blk <= ap_const_logic_0;
    ap_ST_fsm_state192_blk <= ap_const_logic_0;
    ap_ST_fsm_state193_blk <= ap_const_logic_0;
    ap_ST_fsm_state194_blk <= ap_const_logic_0;
    ap_ST_fsm_state195_blk <= ap_const_logic_0;
    ap_ST_fsm_state196_blk <= ap_const_logic_0;
    ap_ST_fsm_state197_blk <= ap_const_logic_0;
    ap_ST_fsm_state198_blk <= ap_const_logic_0;
    ap_ST_fsm_state199_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state200_blk <= ap_const_logic_0;
    ap_ST_fsm_state201_blk <= ap_const_logic_0;
    ap_ST_fsm_state202_blk <= ap_const_logic_0;
    ap_ST_fsm_state203_blk <= ap_const_logic_0;
    ap_ST_fsm_state204_blk <= ap_const_logic_0;
    ap_ST_fsm_state205_blk <= ap_const_logic_0;
    ap_ST_fsm_state206_blk <= ap_const_logic_0;
    ap_ST_fsm_state207_blk <= ap_const_logic_0;
    ap_ST_fsm_state208_blk <= ap_const_logic_0;
    ap_ST_fsm_state209_blk <= ap_const_logic_0;
    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state210_blk <= ap_const_logic_0;
    ap_ST_fsm_state211_blk <= ap_const_logic_0;
    ap_ST_fsm_state212_blk <= ap_const_logic_0;
    ap_ST_fsm_state213_blk <= ap_const_logic_0;
    ap_ST_fsm_state214_blk <= ap_const_logic_0;
    ap_ST_fsm_state215_blk <= ap_const_logic_0;
    ap_ST_fsm_state216_blk <= ap_const_logic_0;
    ap_ST_fsm_state217_blk <= ap_const_logic_0;
    ap_ST_fsm_state218_blk <= ap_const_logic_0;
    ap_ST_fsm_state219_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state220_blk_assign_proc : process(ap_block_state220_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state220_on_subcall_done)) then 
            ap_ST_fsm_state220_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state220_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state221_blk <= ap_const_logic_0;

    ap_ST_fsm_state222_blk_assign_proc : process(ap_block_state222_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state222_on_subcall_done)) then 
            ap_ST_fsm_state222_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state222_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state223_blk_assign_proc : process(ap_block_state223_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state223_on_subcall_done)) then 
            ap_ST_fsm_state223_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state223_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state224_blk_assign_proc : process(gmem0_AWREADY)
    begin
        if ((gmem0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state224_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state224_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state225_blk <= ap_const_logic_0;

    ap_ST_fsm_state226_blk_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done)
    begin
        if ((grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state226_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state226_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state227_blk <= ap_const_logic_0;
    ap_ST_fsm_state228_blk <= ap_const_logic_0;
    ap_ST_fsm_state229_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state230_blk <= ap_const_logic_0;
    ap_ST_fsm_state231_blk <= ap_const_logic_0;
    ap_ST_fsm_state232_blk <= ap_const_logic_0;
    ap_ST_fsm_state233_blk <= ap_const_logic_0;
    ap_ST_fsm_state234_blk <= ap_const_logic_0;
    ap_ST_fsm_state235_blk <= ap_const_logic_0;
    ap_ST_fsm_state236_blk <= ap_const_logic_0;
    ap_ST_fsm_state237_blk <= ap_const_logic_0;
    ap_ST_fsm_state238_blk <= ap_const_logic_0;
    ap_ST_fsm_state239_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state240_blk <= ap_const_logic_0;
    ap_ST_fsm_state241_blk <= ap_const_logic_0;
    ap_ST_fsm_state242_blk <= ap_const_logic_0;
    ap_ST_fsm_state243_blk <= ap_const_logic_0;
    ap_ST_fsm_state244_blk <= ap_const_logic_0;
    ap_ST_fsm_state245_blk <= ap_const_logic_0;
    ap_ST_fsm_state246_blk <= ap_const_logic_0;
    ap_ST_fsm_state247_blk <= ap_const_logic_0;
    ap_ST_fsm_state248_blk <= ap_const_logic_0;
    ap_ST_fsm_state249_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state250_blk <= ap_const_logic_0;
    ap_ST_fsm_state251_blk <= ap_const_logic_0;
    ap_ST_fsm_state252_blk <= ap_const_logic_0;
    ap_ST_fsm_state253_blk <= ap_const_logic_0;
    ap_ST_fsm_state254_blk <= ap_const_logic_0;
    ap_ST_fsm_state255_blk <= ap_const_logic_0;
    ap_ST_fsm_state256_blk <= ap_const_logic_0;
    ap_ST_fsm_state257_blk <= ap_const_logic_0;
    ap_ST_fsm_state258_blk <= ap_const_logic_0;
    ap_ST_fsm_state259_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state260_blk <= ap_const_logic_0;
    ap_ST_fsm_state261_blk <= ap_const_logic_0;
    ap_ST_fsm_state262_blk <= ap_const_logic_0;
    ap_ST_fsm_state263_blk <= ap_const_logic_0;
    ap_ST_fsm_state264_blk <= ap_const_logic_0;
    ap_ST_fsm_state265_blk <= ap_const_logic_0;
    ap_ST_fsm_state266_blk <= ap_const_logic_0;
    ap_ST_fsm_state267_blk <= ap_const_logic_0;
    ap_ST_fsm_state268_blk <= ap_const_logic_0;
    ap_ST_fsm_state269_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state270_blk <= ap_const_logic_0;
    ap_ST_fsm_state271_blk <= ap_const_logic_0;
    ap_ST_fsm_state272_blk <= ap_const_logic_0;
    ap_ST_fsm_state273_blk <= ap_const_logic_0;
    ap_ST_fsm_state274_blk <= ap_const_logic_0;
    ap_ST_fsm_state275_blk <= ap_const_logic_0;
    ap_ST_fsm_state276_blk <= ap_const_logic_0;
    ap_ST_fsm_state277_blk <= ap_const_logic_0;
    ap_ST_fsm_state278_blk <= ap_const_logic_0;
    ap_ST_fsm_state279_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state280_blk <= ap_const_logic_0;
    ap_ST_fsm_state281_blk <= ap_const_logic_0;
    ap_ST_fsm_state282_blk <= ap_const_logic_0;
    ap_ST_fsm_state283_blk <= ap_const_logic_0;
    ap_ST_fsm_state284_blk <= ap_const_logic_0;
    ap_ST_fsm_state285_blk <= ap_const_logic_0;
    ap_ST_fsm_state286_blk <= ap_const_logic_0;
    ap_ST_fsm_state287_blk <= ap_const_logic_0;
    ap_ST_fsm_state288_blk <= ap_const_logic_0;
    ap_ST_fsm_state289_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state290_blk <= ap_const_logic_0;
    ap_ST_fsm_state291_blk <= ap_const_logic_0;
    ap_ST_fsm_state292_blk <= ap_const_logic_0;
    ap_ST_fsm_state293_blk <= ap_const_logic_0;

    ap_ST_fsm_state294_blk_assign_proc : process(gmem0_BVALID)
    begin
        if ((gmem0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state294_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state294_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem0_ARREADY)
    begin
        if ((gmem0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;

    ap_ST_fsm_state73_blk_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done)
    begin
        if ((grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state73_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state73_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state74_blk <= ap_const_logic_0;

    ap_ST_fsm_state75_blk_assign_proc : process(ap_block_state75_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state75_io)) then 
            ap_ST_fsm_state75_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state75_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state76_blk_assign_proc : process(ap_block_state76_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state76_io)) then 
            ap_ST_fsm_state76_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state76_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state77_blk_assign_proc : process(ap_block_state77_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state77_io)) then 
            ap_ST_fsm_state77_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state77_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state78_blk_assign_proc : process(ap_block_state78_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state78_io)) then 
            ap_ST_fsm_state78_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state78_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;
    ap_ST_fsm_state89_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state90_blk <= ap_const_logic_0;
    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;
    ap_ST_fsm_state98_blk <= ap_const_logic_0;
    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state145_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
                ap_block_state145 <= ((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0));
    end process;


    ap_block_state146_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
                ap_block_state146 <= ((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0));
    end process;


    ap_block_state147_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
                ap_block_state147 <= ((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0));
    end process;


    ap_block_state148_assign_proc : process(gmem2_RVALID, gmem3_RVALID)
    begin
                ap_block_state148 <= ((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0));
    end process;


    ap_block_state149_io_assign_proc : process(tmp_fu_1510_p3, gmem1_ARREADY)
    begin
                ap_block_state149_io <= ((tmp_fu_1510_p3 = ap_const_lv1_0) and (gmem1_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state220_on_subcall_done_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_done)
    begin
                ap_block_state220_on_subcall_done <= ((grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_done = ap_const_logic_0) and (tmp_reg_2028 = ap_const_lv1_0));
    end process;


    ap_block_state222_on_subcall_done_assign_proc : process(grp_TrotterUnit_fu_555_ap_done, grp_TrotterUnit_fu_569_ap_done, grp_TrotterUnit_fu_583_ap_done, grp_TrotterUnit_fu_597_ap_done)
    begin
                ap_block_state222_on_subcall_done <= ((grp_TrotterUnit_fu_597_ap_done = ap_const_logic_0) or (grp_TrotterUnit_fu_583_ap_done = ap_const_logic_0) or (grp_TrotterUnit_fu_569_ap_done = ap_const_logic_0) or (grp_TrotterUnit_fu_555_ap_done = ap_const_logic_0));
    end process;


    ap_block_state223_on_subcall_done_assign_proc : process(grp_TrotterUnitFinal_fu_611_ap_done, grp_TrotterUnitFinal_fu_628_ap_done, grp_TrotterUnitFinal_fu_645_ap_done, grp_TrotterUnitFinal_fu_662_ap_done, grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_done)
    begin
                ap_block_state223_on_subcall_done <= ((grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_done = ap_const_logic_0) or (grp_TrotterUnitFinal_fu_662_ap_done = ap_const_logic_0) or (grp_TrotterUnitFinal_fu_645_ap_done = ap_const_logic_0) or (grp_TrotterUnitFinal_fu_628_ap_done = ap_const_logic_0) or (grp_TrotterUnitFinal_fu_611_ap_done = ap_const_logic_0));
    end process;


    ap_block_state75_io_assign_proc : process(gmem2_ARREADY, gmem3_ARREADY)
    begin
                ap_block_state75_io <= ((gmem3_ARREADY = ap_const_logic_0) or (gmem2_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state76_io_assign_proc : process(gmem2_ARREADY, gmem3_ARREADY)
    begin
                ap_block_state76_io <= ((gmem3_ARREADY = ap_const_logic_0) or (gmem2_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state77_io_assign_proc : process(gmem2_ARREADY, gmem3_ARREADY)
    begin
                ap_block_state77_io <= ((gmem3_ARREADY = ap_const_logic_0) or (gmem2_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state78_io_assign_proc : process(gmem2_ARREADY, gmem3_ARREADY)
    begin
                ap_block_state78_io <= ((gmem3_ARREADY = ap_const_logic_0) or (gmem2_ARREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state294, gmem0_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state294) and (gmem0_BVALID = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state294, gmem0_BVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state294) and (gmem0_BVALID = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln235_1_fu_1403_p1 <= trunc_ln235_2_reg_1838;
    bitcast_ln235_2_fu_1434_p1 <= trunc_ln235_3_reg_1898;
    bitcast_ln235_3_fu_1506_p1 <= trunc_ln235_5_fu_1502_p1;
    bitcast_ln235_fu_1372_p1 <= trunc_ln235_1_reg_1818;
    dH_0_fu_1369_p1 <= trunc_ln234_1_reg_1813;
    dH_1_fu_1400_p1 <= trunc_ln234_3_reg_1833;
    dH_2_fu_1431_p1 <= trunc_ln234_7_reg_1893;
    dH_3_fu_1482_p1 <= trunc_ln234_13_fu_1478_p1;

    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARADDR, gmem0_ARREADY, ap_CS_fsm_state72, sext_ln194_fu_718_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARADDR <= sext_ln194_fu_718_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARADDR <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARBURST_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARBURST, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARBURST <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARBURST;
        else 
            gmem0_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    gmem0_ARCACHE_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARCACHE, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARCACHE <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARCACHE;
        else 
            gmem0_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_ARID_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARID, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARID <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARID;
        else 
            gmem0_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLEN, gmem0_ARREADY, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARLEN <= ap_const_lv32_20;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARLEN <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLOCK_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLOCK, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARLOCK <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARLOCK;
        else 
            gmem0_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    gmem0_ARPROT_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARPROT, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARPROT <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARPROT;
        else 
            gmem0_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    gmem0_ARQOS_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARQOS, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARQOS <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARQOS;
        else 
            gmem0_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_ARREGION_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARREGION, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARREGION <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARREGION;
        else 
            gmem0_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_ARSIZE_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARSIZE, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARSIZE <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARSIZE;
        else 
            gmem0_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    gmem0_ARUSER_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARUSER, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARUSER <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARUSER;
        else 
            gmem0_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARVALID, gmem0_ARREADY, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_ARVALID <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWADDR_assign_proc : process(ap_CS_fsm_state224, gmem0_addr_reg_1583, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWADDR, gmem0_AWREADY, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state224) and (gmem0_AWREADY = ap_const_logic_1))) then 
            gmem0_AWADDR <= gmem0_addr_reg_1583;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWADDR <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWADDR;
        else 
            gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWBURST_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWBURST, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWBURST <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWBURST;
        else 
            gmem0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    gmem0_AWCACHE_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWCACHE, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWCACHE <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWCACHE;
        else 
            gmem0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_AWID_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWID, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWID <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWID;
        else 
            gmem0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    gmem0_AWLEN_assign_proc : process(ap_CS_fsm_state224, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLEN, gmem0_AWREADY, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state224) and (gmem0_AWREADY = ap_const_logic_1))) then 
            gmem0_AWLEN <= ap_const_lv32_20;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWLEN <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLEN;
        else 
            gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWLOCK_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLOCK, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWLOCK <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWLOCK;
        else 
            gmem0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    gmem0_AWPROT_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWPROT, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWPROT <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWPROT;
        else 
            gmem0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    gmem0_AWQOS_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWQOS, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWQOS <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWQOS;
        else 
            gmem0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_AWREGION_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWREGION, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWREGION <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWREGION;
        else 
            gmem0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    gmem0_AWSIZE_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWSIZE, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWSIZE <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWSIZE;
        else 
            gmem0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    gmem0_AWUSER_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWUSER, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWUSER <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWUSER;
        else 
            gmem0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state224, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWVALID, gmem0_AWREADY, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state224) and (gmem0_AWREADY = ap_const_logic_1))) then 
            gmem0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_AWVALID <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(ap_CS_fsm_state294, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_BREADY, gmem0_BVALID, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state294) and (gmem0_BVALID = ap_const_logic_1))) then 
            gmem0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_BREADY <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_RREADY, ap_CS_fsm_state72)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72))) then 
            gmem0_RREADY <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WVALID, ap_CS_fsm_state225, ap_CS_fsm_state226)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state226) or (ap_const_logic_1 = ap_CS_fsm_state225))) then 
            gmem0_WVALID <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state224)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state224)) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state294)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state294)) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_ARADDR_assign_proc : process(ap_CS_fsm_state149, tmp_fu_1510_p3, tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARADDR, ap_CS_fsm_state220, ap_CS_fsm_state219, sext_ln241_fu_1526_p1, ap_block_state149_io)
    begin
        if (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149) and (ap_const_boolean_0 = ap_block_state149_io))) then 
            gmem1_ARADDR <= sext_ln241_fu_1526_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARADDR <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARADDR;
        else 
            gmem1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARBURST_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARBURST, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARBURST <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARBURST;
        else 
            gmem1_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    gmem1_ARCACHE_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARCACHE, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARCACHE <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARCACHE;
        else 
            gmem1_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    gmem1_ARID_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARID, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARID <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARID;
        else 
            gmem1_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    gmem1_ARLEN_assign_proc : process(ap_CS_fsm_state149, tmp_fu_1510_p3, tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLEN, ap_CS_fsm_state220, ap_CS_fsm_state219, ap_block_state149_io)
    begin
        if (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149) and (ap_const_boolean_0 = ap_block_state149_io))) then 
            gmem1_ARLEN <= ap_const_lv32_100;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARLEN <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLEN;
        else 
            gmem1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_ARLOCK_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLOCK, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARLOCK <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARLOCK;
        else 
            gmem1_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    gmem1_ARPROT_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARPROT, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARPROT <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARPROT;
        else 
            gmem1_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    gmem1_ARQOS_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARQOS, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARQOS <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARQOS;
        else 
            gmem1_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    gmem1_ARREGION_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARREGION, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARREGION <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARREGION;
        else 
            gmem1_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    gmem1_ARSIZE_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARSIZE, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARSIZE <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARSIZE;
        else 
            gmem1_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    gmem1_ARUSER_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARUSER, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARUSER <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARUSER;
        else 
            gmem1_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    gmem1_ARVALID_assign_proc : process(ap_CS_fsm_state149, tmp_fu_1510_p3, tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARVALID, ap_CS_fsm_state220, ap_CS_fsm_state219, ap_block_state149_io)
    begin
        if (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149) and (ap_const_boolean_0 = ap_block_state149_io))) then 
            gmem1_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_ARVALID <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_ARVALID;
        else 
            gmem1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_RREADY_assign_proc : process(tmp_reg_2028, grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_RREADY, ap_CS_fsm_state220, ap_CS_fsm_state219)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state219) or ((tmp_reg_2028 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state220)))) then 
            gmem1_RREADY <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_m_axi_gmem1_RREADY;
        else 
            gmem1_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state149, tmp_fu_1510_p3)
    begin
        if (((tmp_fu_1510_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state149))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_ARADDR_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, sext_ln234_fu_797_p1, sext_ln234_1_fu_892_p1, sext_ln234_2_fu_1066_p1, sext_ln234_3_fu_1086_p1, ap_block_state75_io, ap_block_state76_io, ap_block_state77_io, ap_block_state78_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) and (ap_const_boolean_0 = ap_block_state78_io))) then 
            gmem2_ARADDR <= sext_ln234_3_fu_1086_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) and (ap_const_boolean_0 = ap_block_state77_io))) then 
            gmem2_ARADDR <= sext_ln234_2_fu_1066_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_const_boolean_0 = ap_block_state76_io))) then 
            gmem2_ARADDR <= sext_ln234_1_fu_892_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) and (ap_const_boolean_0 = ap_block_state75_io))) then 
            gmem2_ARADDR <= sext_ln234_fu_797_p1;
        else 
            gmem2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem2_ARVALID_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_block_state75_io, ap_block_state76_io, ap_block_state77_io, ap_block_state78_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state78) and (ap_const_boolean_0 = ap_block_state78_io)) or ((ap_const_logic_1 = ap_CS_fsm_state77) and (ap_const_boolean_0 = ap_block_state77_io)) or ((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_const_boolean_0 = ap_block_state76_io)) or ((ap_const_logic_1 = ap_CS_fsm_state75) and (ap_const_boolean_0 = ap_block_state75_io)))) then 
            gmem2_ARVALID <= ap_const_logic_1;
        else 
            gmem2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_RREADY_assign_proc : process(ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if (((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state147)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state146)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state145)))) then 
            gmem2_RREADY <= ap_const_logic_1;
        else 
            gmem2_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem2_blk_n_AR_assign_proc : process(m_axi_gmem2_ARREADY, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            gmem2_blk_n_AR <= m_axi_gmem2_ARREADY;
        else 
            gmem2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_R_assign_proc : process(m_axi_gmem2_RVALID, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem2_blk_n_R <= m_axi_gmem2_RVALID;
        else 
            gmem2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_ARADDR_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, sext_ln235_fu_807_p1, sext_ln235_1_fu_902_p1, sext_ln235_2_fu_1076_p1, sext_ln235_3_fu_1096_p1, ap_block_state75_io, ap_block_state76_io, ap_block_state77_io, ap_block_state78_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) and (ap_const_boolean_0 = ap_block_state78_io))) then 
            gmem3_ARADDR <= sext_ln235_3_fu_1096_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state77) and (ap_const_boolean_0 = ap_block_state77_io))) then 
            gmem3_ARADDR <= sext_ln235_2_fu_1076_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_const_boolean_0 = ap_block_state76_io))) then 
            gmem3_ARADDR <= sext_ln235_1_fu_902_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state75) and (ap_const_boolean_0 = ap_block_state75_io))) then 
            gmem3_ARADDR <= sext_ln235_fu_807_p1;
        else 
            gmem3_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem3_ARVALID_assign_proc : process(ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_block_state75_io, ap_block_state76_io, ap_block_state77_io, ap_block_state78_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state78) and (ap_const_boolean_0 = ap_block_state78_io)) or ((ap_const_logic_1 = ap_CS_fsm_state77) and (ap_const_boolean_0 = ap_block_state77_io)) or ((ap_const_logic_1 = ap_CS_fsm_state76) and (ap_const_boolean_0 = ap_block_state76_io)) or ((ap_const_logic_1 = ap_CS_fsm_state75) and (ap_const_boolean_0 = ap_block_state75_io)))) then 
            gmem3_ARVALID <= ap_const_logic_1;
        else 
            gmem3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_RREADY_assign_proc : process(ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if (((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state147)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state146)) or (not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state145)))) then 
            gmem3_RREADY <= ap_const_logic_1;
        else 
            gmem3_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem3_blk_n_AR_assign_proc : process(m_axi_gmem3_ARREADY, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            gmem3_blk_n_AR <= m_axi_gmem3_ARREADY;
        else 
            gmem3_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem3_blk_n_R_assign_proc : process(m_axi_gmem3_RVALID, ap_CS_fsm_state145, ap_CS_fsm_state146, ap_CS_fsm_state147, ap_CS_fsm_state148)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state148) or (ap_const_logic_1 = ap_CS_fsm_state147) or (ap_const_logic_1 = ap_CS_fsm_state146) or (ap_const_logic_1 = ap_CS_fsm_state145))) then 
            gmem3_blk_n_R <= m_axi_gmem3_RVALID;
        else 
            gmem3_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start <= grp_QuantumMonteCarloU50_Pipeline_READ_NEW_JCOUP_fu_547_ap_start_reg;
    grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_start_reg;
    grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start <= grp_QuantumMonteCarloU50_Pipeline_SHIFT_JCOUP_fu_679_ap_start_reg;
    grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_ap_start_reg;
    grp_TrotterUnitFinal_fu_611_ap_start <= grp_TrotterUnitFinal_fu_611_ap_start_reg;
    grp_TrotterUnitFinal_fu_628_ap_start <= grp_TrotterUnitFinal_fu_628_ap_start_reg;
    grp_TrotterUnitFinal_fu_645_ap_start <= grp_TrotterUnitFinal_fu_645_ap_start_reg;
    grp_TrotterUnitFinal_fu_662_ap_start <= grp_TrotterUnitFinal_fu_662_ap_start_reg;
    grp_TrotterUnit_fu_555_ap_start <= grp_TrotterUnit_fu_555_ap_start_reg;
    grp_TrotterUnit_fu_569_ap_start <= grp_TrotterUnit_fu_569_ap_start_reg;
    grp_TrotterUnit_fu_583_ap_start <= grp_TrotterUnit_fu_583_ap_start_reg;
    grp_TrotterUnit_fu_597_ap_start <= grp_TrotterUnit_fu_597_ap_start_reg;

    grp_fu_698_ce_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done, ap_CS_fsm_state72, ap_CS_fsm_state70, ap_CS_fsm_state71)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state72) or ((grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state73)))) then 
            grp_fu_698_ce <= ap_const_logic_1;
        else 
            grp_fu_698_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln214_fu_739_p2 <= "1" when (stage_fu_198 = ap_const_lv13_1003) else "0";
    lshr_ln234_1_fu_1193_p2 <= std_logic_vector(shift_right(unsigned(gmem2_addr_1_read_reg_1823),to_integer(unsigned('0' & zext_ln234_3_fu_1189_p1(31-1 downto 0)))));
    lshr_ln234_2_fu_1293_p2 <= std_logic_vector(shift_right(unsigned(gmem2_addr_2_read_reg_1843),to_integer(unsigned('0' & zext_ln234_5_fu_1289_p1(31-1 downto 0)))));
    lshr_ln234_3_fu_1473_p2 <= std_logic_vector(shift_right(unsigned(gmem2_addr_3_read_reg_1913),to_integer(unsigned('0' & zext_ln234_7_fu_1469_p1(31-1 downto 0)))));
    lshr_ln234_fu_1134_p2 <= std_logic_vector(shift_right(unsigned(gmem2_addr_read_reg_1794),to_integer(unsigned('0' & zext_ln234_1_fu_1130_p1(31-1 downto 0)))));
    lshr_ln235_1_fu_1219_p2 <= std_logic_vector(shift_right(unsigned(gmem3_addr_1_read_reg_1828),to_integer(unsigned('0' & zext_ln235_2_fu_1215_p1(31-1 downto 0)))));
    lshr_ln235_2_fu_1319_p2 <= std_logic_vector(shift_right(unsigned(gmem3_addr_2_read_reg_1848),to_integer(unsigned('0' & zext_ln235_4_fu_1315_p1(31-1 downto 0)))));
    lshr_ln235_3_fu_1497_p2 <= std_logic_vector(shift_right(unsigned(gmem3_addr_3_read_reg_1923),to_integer(unsigned('0' & zext_ln235_6_fu_1493_p1(31-1 downto 0)))));
    lshr_ln235_fu_1160_p2 <= std_logic_vector(shift_right(unsigned(gmem3_addr_read_reg_1799),to_integer(unsigned('0' & zext_ln235_fu_1156_p1(31-1 downto 0)))));
    or_ln1_fu_863_p4 <= ((ap_const_lv1_1 & Ofst_1_fu_817_p2) & ap_const_lv2_0);
    or_ln235_1_fu_958_p4 <= ((ap_const_lv2_2 & Ofst_2_fu_912_p2) & ap_const_lv2_0);
    or_ln235_2_fu_1033_p4 <= ((ap_const_lv1_1 & Ofst_3_fu_987_p2) & ap_const_lv2_0);
    p_Result_129_fu_1361_p3 <= trottersLocal_V_1_q1(to_integer(unsigned(zext_ln819_fu_1350_p1)) downto to_integer(unsigned(zext_ln819_fu_1350_p1))) when (to_integer(unsigned(zext_ln819_fu_1350_p1))>= 0 and to_integer(unsigned(zext_ln819_fu_1350_p1))<=15) else "-";
    p_Result_130_fu_1384_p3 <= trottersLocal_V_0_q1(to_integer(unsigned(zext_ln819_1_fu_1380_p1)) downto to_integer(unsigned(zext_ln819_1_fu_1380_p1))) when (to_integer(unsigned(zext_ln819_1_fu_1380_p1))>= 0 and to_integer(unsigned(zext_ln819_1_fu_1380_p1))<=15) else "-";
    p_Result_131_fu_1392_p3 <= trottersLocal_V_2_q1(to_integer(unsigned(zext_ln819_1_fu_1380_p1)) downto to_integer(unsigned(zext_ln819_1_fu_1380_p1))) when (to_integer(unsigned(zext_ln819_1_fu_1380_p1))>= 0 and to_integer(unsigned(zext_ln819_1_fu_1380_p1))<=15) else "-";
    p_Result_132_fu_1415_p3 <= trottersLocal_V_1_q0(to_integer(unsigned(zext_ln819_2_fu_1411_p1)) downto to_integer(unsigned(zext_ln819_2_fu_1411_p1))) when (to_integer(unsigned(zext_ln819_2_fu_1411_p1))>= 0 and to_integer(unsigned(zext_ln819_2_fu_1411_p1))<=15) else "-";
    p_Result_133_fu_1423_p3 <= trottersLocal_V_3_q0(to_integer(unsigned(zext_ln819_2_fu_1411_p1)) downto to_integer(unsigned(zext_ln819_2_fu_1411_p1))) when (to_integer(unsigned(zext_ln819_2_fu_1411_p1))>= 0 and to_integer(unsigned(zext_ln819_2_fu_1411_p1))<=15) else "-";
    p_Result_134_fu_1446_p3 <= trottersLocal_V_2_q0(to_integer(unsigned(zext_ln819_3_fu_1442_p1)) downto to_integer(unsigned(zext_ln819_3_fu_1442_p1))) when (to_integer(unsigned(zext_ln819_3_fu_1442_p1))>= 0 and to_integer(unsigned(zext_ln819_3_fu_1442_p1))<=15) else "-";
    p_Result_135_fu_1454_p3 <= trottersLocal_V_0_q0(to_integer(unsigned(zext_ln819_3_fu_1442_p1)) downto to_integer(unsigned(zext_ln819_3_fu_1442_p1))) when (to_integer(unsigned(zext_ln819_3_fu_1442_p1))>= 0 and to_integer(unsigned(zext_ln819_3_fu_1442_p1))<=15) else "-";
    p_Result_s_fu_1353_p3 <= trottersLocal_V_3_q1(to_integer(unsigned(zext_ln819_fu_1350_p1)) downto to_integer(unsigned(zext_ln819_fu_1350_p1))) when (to_integer(unsigned(zext_ln819_fu_1350_p1))>= 0 and to_integer(unsigned(zext_ln819_fu_1350_p1))<=15) else "-";
    packOfst_5_fu_1559_p2 <= std_logic_vector(unsigned(packOfst_4_reg_514) + unsigned(ap_const_lv9_80));
    packOfst_fu_1244_p4 <= stage_fu_198(11 downto 4);
        sext_ln194_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_1576),64));

        sext_ln234_1_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln234_8_reg_1706),64));

        sext_ln234_2_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln234_s_reg_1739),64));

        sext_ln234_3_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln234_11_reg_1760),64));

        sext_ln234_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln234_6_reg_1673),64));

        sext_ln235_1_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_reg_1711),64));

        sext_ln235_2_fu_1076_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln235_6_reg_1744),64));

        sext_ln235_3_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln235_8_reg_1765),64));

        sext_ln235_4_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(or_ln235_2_fu_1033_p4),16));

        sext_ln235_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln235_4_reg_1678),64));

        sext_ln241_fu_1526_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln8_fu_1517_p4),64));

    shl_ln1_fu_755_p3 <= (Ofst_fu_751_p1 & ap_const_lv2_0);
    shl_ln234_1_fu_1122_p3 <= (add_ln234_4_fu_1117_p2 & ap_const_lv3_0);
    shl_ln234_2_fu_832_p3 <= (Ofst_1_fu_817_p2 & ap_const_lv2_0);
    shl_ln234_3_fu_1181_p3 <= (add_ln234_5_fu_1176_p2 & ap_const_lv3_0);
    shl_ln234_4_fu_927_p3 <= (Ofst_2_fu_912_p2 & ap_const_lv2_0);
    shl_ln234_5_fu_1281_p3 <= (add_ln234_6_fu_1276_p2 & ap_const_lv3_0);
    shl_ln234_6_fu_1002_p3 <= (Ofst_3_fu_987_p2 & ap_const_lv2_0);
    shl_ln234_7_fu_1462_p3 <= (add_ln234_7_reg_1918 & ap_const_lv3_0);
    shl_ln235_1_fu_1207_p3 <= (add_ln235_3_fu_1202_p2 & ap_const_lv3_0);
    shl_ln235_2_fu_1307_p3 <= (add_ln235_5_fu_1302_p2 & ap_const_lv3_0);
    shl_ln235_3_fu_1486_p3 <= (add_ln235_7_reg_1928 & ap_const_lv3_0);
    shl_ln2_fu_1148_p3 <= (add_ln235_1_fu_1143_p2 & ap_const_lv3_0);
    shl_ln_fu_1228_p3 <= (stage_fu_198 & ap_const_lv14_0);
    spinOfst_1_fu_1375_p2 <= std_logic_vector(unsigned(spinOfst_reg_1804) + unsigned(ap_const_lv4_F));
    spinOfst_2_fu_1406_p2 <= std_logic_vector(unsigned(spinOfst_reg_1804) + unsigned(ap_const_lv4_E));
    spinOfst_3_fu_1437_p2 <= std_logic_vector(unsigned(spinOfst_reg_1804) + unsigned(ap_const_lv4_D));
    spinOfst_fu_1106_p1 <= stage_fu_198(4 - 1 downto 0);
    step_1_fu_1553_p2 <= std_logic_vector(unsigned(step_reg_525) + unsigned(ap_const_lv13_800));
    tmp_1923_fu_1537_p3 <= step_reg_525(12 downto 12);
    tmp_fu_1510_p3 <= stage_fu_198(12 downto 12);

    trottersLocal_V_0_address0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_address0, grp_TrotterUnit_fu_555_trotters_address0, grp_TrotterUnitFinal_fu_611_trotters_address0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_address0, ap_CS_fsm_state223, ap_CS_fsm_state226, zext_ln230_3_fu_1328_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            trottersLocal_V_0_address0 <= zext_ln230_3_fu_1328_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_0_address0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_0_address0 <= grp_TrotterUnitFinal_fu_611_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_0_address0 <= grp_TrotterUnit_fu_555_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_0_address0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_address0;
        else 
            trottersLocal_V_0_address0 <= "XXXXXXXX";
        end if; 
    end process;

    trottersLocal_V_0_address1 <= zext_ln230_1_fu_1259_p1(8 - 1 downto 0);

    trottersLocal_V_0_ce0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_ce0, grp_TrotterUnit_fu_555_trotters_ce0, grp_TrotterUnitFinal_fu_611_trotters_ce0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_ce0, gmem2_RVALID, gmem3_RVALID, ap_CS_fsm_state223, ap_CS_fsm_state226)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_0_ce0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_0_ce0 <= grp_TrotterUnitFinal_fu_611_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_0_ce0 <= grp_TrotterUnit_fu_555_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_0_ce0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_ce0;
        else 
            trottersLocal_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_0_ce1_assign_proc : process(ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_0_ce1 <= ap_const_logic_1;
        else 
            trottersLocal_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_0_d0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_d0, grp_TrotterUnitFinal_fu_611_trotters_d0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_0_d0 <= grp_TrotterUnitFinal_fu_611_trotters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_0_d0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_d0;
        else 
            trottersLocal_V_0_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trottersLocal_V_0_we0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_we0, grp_TrotterUnitFinal_fu_611_trotters_we0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_0_we0 <= grp_TrotterUnitFinal_fu_611_trotters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_0_we0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_0_we0;
        else 
            trottersLocal_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_1_address0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_address0, grp_TrotterUnit_fu_569_trotters_address0, grp_TrotterUnitFinal_fu_628_trotters_address0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_address0, ap_CS_fsm_state223, ap_CS_fsm_state226, zext_ln230_2_fu_1264_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            trottersLocal_V_1_address0 <= zext_ln230_2_fu_1264_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_1_address0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_1_address0 <= grp_TrotterUnitFinal_fu_628_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_1_address0 <= grp_TrotterUnit_fu_569_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_1_address0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_address0;
        else 
            trottersLocal_V_1_address0 <= "XXXXXXXX";
        end if; 
    end process;

    trottersLocal_V_1_address1 <= zext_ln230_fu_1253_p1(8 - 1 downto 0);

    trottersLocal_V_1_ce0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_ce0, grp_TrotterUnit_fu_569_trotters_ce0, grp_TrotterUnitFinal_fu_628_trotters_ce0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_ce0, gmem2_RVALID, gmem3_RVALID, ap_CS_fsm_state223, ap_CS_fsm_state226)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_1_ce0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_1_ce0 <= grp_TrotterUnitFinal_fu_628_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_1_ce0 <= grp_TrotterUnit_fu_569_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_1_ce0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_ce0;
        else 
            trottersLocal_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_1_ce1_assign_proc : process(ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_1_ce1 <= ap_const_logic_1;
        else 
            trottersLocal_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_1_d0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_d0, grp_TrotterUnitFinal_fu_628_trotters_d0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_1_d0 <= grp_TrotterUnitFinal_fu_628_trotters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_1_d0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_d0;
        else 
            trottersLocal_V_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trottersLocal_V_1_we0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_we0, grp_TrotterUnitFinal_fu_628_trotters_we0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_1_we0 <= grp_TrotterUnitFinal_fu_628_trotters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_1_we0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_1_we0;
        else 
            trottersLocal_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_2_address0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_address0, grp_TrotterUnit_fu_583_trotters_address0, grp_TrotterUnitFinal_fu_645_trotters_address0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_address0, ap_CS_fsm_state223, ap_CS_fsm_state226, zext_ln230_3_fu_1328_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            trottersLocal_V_2_address0 <= zext_ln230_3_fu_1328_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_2_address0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_2_address0 <= grp_TrotterUnitFinal_fu_645_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_2_address0 <= grp_TrotterUnit_fu_583_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_2_address0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_address0;
        else 
            trottersLocal_V_2_address0 <= "XXXXXXXX";
        end if; 
    end process;

    trottersLocal_V_2_address1 <= zext_ln230_1_fu_1259_p1(8 - 1 downto 0);

    trottersLocal_V_2_ce0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_ce0, grp_TrotterUnit_fu_583_trotters_ce0, grp_TrotterUnitFinal_fu_645_trotters_ce0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_ce0, gmem2_RVALID, gmem3_RVALID, ap_CS_fsm_state223, ap_CS_fsm_state226)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_2_ce0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_2_ce0 <= grp_TrotterUnitFinal_fu_645_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_2_ce0 <= grp_TrotterUnit_fu_583_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_2_ce0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_ce0;
        else 
            trottersLocal_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_2_ce1_assign_proc : process(ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_2_ce1 <= ap_const_logic_1;
        else 
            trottersLocal_V_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_2_d0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_d0, grp_TrotterUnitFinal_fu_645_trotters_d0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_2_d0 <= grp_TrotterUnitFinal_fu_645_trotters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_2_d0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_d0;
        else 
            trottersLocal_V_2_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trottersLocal_V_2_we0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_we0, grp_TrotterUnitFinal_fu_645_trotters_we0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_2_we0 <= grp_TrotterUnitFinal_fu_645_trotters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_2_we0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_2_we0;
        else 
            trottersLocal_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_3_address0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_address0, grp_TrotterUnit_fu_597_trotters_address0, grp_TrotterUnitFinal_fu_662_trotters_address0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_address0, ap_CS_fsm_state223, ap_CS_fsm_state226, zext_ln230_2_fu_1264_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state148)) then 
            trottersLocal_V_3_address0 <= zext_ln230_2_fu_1264_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_3_address0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_3_address0 <= grp_TrotterUnitFinal_fu_662_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_3_address0 <= grp_TrotterUnit_fu_597_trotters_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_3_address0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_address0;
        else 
            trottersLocal_V_3_address0 <= "XXXXXXXX";
        end if; 
    end process;

    trottersLocal_V_3_address1 <= zext_ln230_fu_1253_p1(8 - 1 downto 0);

    trottersLocal_V_3_ce0_assign_proc : process(ap_CS_fsm_state148, ap_CS_fsm_state73, ap_CS_fsm_state222, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_ce0, grp_TrotterUnit_fu_597_trotters_ce0, grp_TrotterUnitFinal_fu_662_trotters_ce0, grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_ce0, gmem2_RVALID, gmem3_RVALID, ap_CS_fsm_state223, ap_CS_fsm_state226)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state226)) then 
            trottersLocal_V_3_ce0 <= grp_QuantumMonteCarloU50_Pipeline_WRITE_TROTTERS_VITIS_LOOP_281_3_fu_687_trottersLocal_V_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_3_ce0 <= grp_TrotterUnitFinal_fu_662_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state222)) then 
            trottersLocal_V_3_ce0 <= grp_TrotterUnit_fu_597_trotters_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_3_ce0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_ce0;
        else 
            trottersLocal_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_3_ce1_assign_proc : process(ap_CS_fsm_state148, gmem2_RVALID, gmem3_RVALID)
    begin
        if ((not(((gmem3_RVALID = ap_const_logic_0) or (gmem2_RVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state148))) then 
            trottersLocal_V_3_ce1 <= ap_const_logic_1;
        else 
            trottersLocal_V_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    trottersLocal_V_3_d0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_d0, grp_TrotterUnitFinal_fu_662_trotters_d0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_3_d0 <= grp_TrotterUnitFinal_fu_662_trotters_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_3_d0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_d0;
        else 
            trottersLocal_V_3_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    trottersLocal_V_3_we0_assign_proc : process(ap_CS_fsm_state73, grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_we0, grp_TrotterUnitFinal_fu_662_trotters_we0, ap_CS_fsm_state223)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state223)) then 
            trottersLocal_V_3_we0 <= grp_TrotterUnitFinal_fu_662_trotters_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            trottersLocal_V_3_we0 <= grp_QuantumMonteCarloU50_Pipeline_READ_TROTTERS_VITIS_LOOP_195_1_fu_536_trottersLocal_V_3_we0;
        else 
            trottersLocal_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln234_10_fu_1333_p3 <= (trunc_ln234_12_reg_1755 & ap_const_lv2_0);
    trunc_ln234_12_fu_1014_p1 <= Ofst_3_fu_987_p2(4 - 1 downto 0);
    trunc_ln234_13_fu_1478_p1 <= lshr_ln234_3_fu_1473_p2(32 - 1 downto 0);
    trunc_ln234_1_fu_1139_p1 <= lshr_ln234_fu_1134_p2(32 - 1 downto 0);
    trunc_ln234_2_fu_844_p1 <= Ofst_1_fu_817_p2(4 - 1 downto 0);
    trunc_ln234_3_fu_1198_p1 <= lshr_ln234_1_fu_1193_p2(32 - 1 downto 0);
    trunc_ln234_4_fu_1109_p3 <= (spinOfst_fu_1106_p1 & ap_const_lv2_0);
    trunc_ln234_5_fu_939_p1 <= Ofst_2_fu_912_p2(4 - 1 downto 0);
    trunc_ln234_7_fu_1298_p1 <= lshr_ln234_2_fu_1293_p2(32 - 1 downto 0);
    trunc_ln234_9_fu_1269_p3 <= (trunc_ln234_5_reg_1734 & ap_const_lv2_0);
    trunc_ln234_fu_728_p1 <= h(6 - 1 downto 0);
    trunc_ln235_1_fu_1165_p1 <= lshr_ln235_fu_1160_p2(32 - 1 downto 0);
    trunc_ln235_2_fu_1224_p1 <= lshr_ln235_1_fu_1219_p2(32 - 1 downto 0);
    trunc_ln235_3_fu_1324_p1 <= lshr_ln235_2_fu_1319_p2(32 - 1 downto 0);
    trunc_ln235_5_fu_1502_p1 <= lshr_ln235_3_fu_1497_p2(32 - 1 downto 0);
    trunc_ln235_fu_732_p1 <= logRand(6 - 1 downto 0);
    trunc_ln249_fu_1545_p1 <= packOfst_4_reg_514(8 - 1 downto 0);
    trunc_ln6_fu_1169_p3 <= (trunc_ln234_2_reg_1701 & ap_const_lv2_0);
    trunc_ln8_fu_1517_p4 <= add_ln223_reg_1853(63 downto 6);
    zext_ln223_fu_1235_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1228_p3),64));
    zext_ln230_1_fu_1259_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packOfst_1_reg_1695),64));
    zext_ln230_2_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packOfst_2_reg_1728),64));
    zext_ln230_3_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packOfst_3_reg_1749),64));
    zext_ln230_fu_1253_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(packOfst_fu_1244_p4),64));
    zext_ln234_1_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_1_fu_1122_p3),512));
    zext_ln234_2_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_2_fu_832_p3),64));
    zext_ln234_3_fu_1189_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_3_fu_1181_p3),512));
    zext_ln234_4_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_4_fu_927_p3),64));
    zext_ln234_5_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_5_fu_1281_p3),512));
    zext_ln234_6_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_6_fu_1002_p3),64));
    zext_ln234_7_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln234_7_fu_1462_p3),512));
    zext_ln234_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_755_p3),64));
    zext_ln235_1_fu_873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln1_fu_863_p4),64));
    zext_ln235_2_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln235_1_fu_1207_p3),512));
    zext_ln235_3_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln235_1_fu_958_p4),64));
    zext_ln235_4_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln235_2_fu_1307_p3),512));
    zext_ln235_5_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln235_4_fu_1043_p1),64));
    zext_ln235_6_fu_1493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln235_3_fu_1486_p3),512));
    zext_ln235_fu_1156_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1148_p3),512));
    zext_ln819_1_fu_1380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(spinOfst_1_fu_1375_p2),16));
    zext_ln819_2_fu_1411_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(spinOfst_2_fu_1406_p2),16));
    zext_ln819_3_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(spinOfst_3_fu_1437_p2),16));
    zext_ln819_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(spinOfst_reg_1804),16));
end behav;
